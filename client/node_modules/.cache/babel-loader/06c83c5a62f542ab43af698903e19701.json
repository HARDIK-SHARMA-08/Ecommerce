{"ast":null,"code":"var _objectSpread = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nvar $eeQ2i$reactariautils = require(\"@react-aria/utils\");\nvar $eeQ2i$reactariafocus = require(\"@react-aria/focus\");\nvar $eeQ2i$reactariainteractions = require(\"@react-aria/interactions\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useButton\", function () {\n  return $988353faa005faf8$export$ea18c227d4417cc3;\n});\n$parcel$export(module.exports, \"useToggleButton\", function () {\n  return $c49208f7d2aac50b$export$51e84d46ca0bc451;\n});\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n\nfunction $988353faa005faf8$export$ea18c227d4417cc3(props, ref) {\n  var _props$elementType = props.elementType,\n    elementType = _props$elementType === void 0 ? \"button\" : _props$elementType,\n    isDisabled = props.isDisabled,\n    onPress = props.onPress,\n    onPressStart = props.onPressStart,\n    onPressEnd = props.onPressEnd,\n    onPressChange = props.onPressChange,\n    // @ts-ignore - undocumented\n    preventFocusOnPress = props.preventFocusOnPress,\n    // @ts-ignore - undocumented\n    allowFocusWhenDisabled = props.allowFocusWhenDisabled,\n    deprecatedOnClick = props.onClick,\n    href = props.href,\n    target = props.target,\n    rel = props.rel,\n    _props$type = props.type,\n    type = _props$type === void 0 ? \"button\" : _props$type;\n  var additionalProps;\n  if (elementType === \"button\") additionalProps = {\n    type: type,\n    disabled: isDisabled\n  };else additionalProps = {\n    role: \"button\",\n    tabIndex: isDisabled ? undefined : 0,\n    href: elementType === \"a\" && isDisabled ? undefined : href,\n    target: elementType === \"a\" ? target : undefined,\n    type: elementType === \"input\" ? type : undefined,\n    disabled: elementType === \"input\" ? isDisabled : undefined,\n    \"aria-disabled\": !isDisabled || elementType === \"input\" ? undefined : isDisabled,\n    rel: elementType === \"a\" ? rel : undefined\n  };\n  var _ref = (0, $eeQ2i$reactariainteractions.usePress)({\n      onPressStart: onPressStart,\n      onPressEnd: onPressEnd,\n      onPressChange: onPressChange,\n      onPress: onPress,\n      isDisabled: isDisabled,\n      preventFocusOnPress: preventFocusOnPress,\n      ref: ref\n    }),\n    pressProps = _ref.pressProps,\n    isPressed = _ref.isPressed;\n  var _ref2 = (0, $eeQ2i$reactariafocus.useFocusable)(props, ref),\n    focusableProps = _ref2.focusableProps;\n  if (allowFocusWhenDisabled) focusableProps.tabIndex = isDisabled ? -1 : focusableProps.tabIndex;\n  var buttonProps = (0, $eeQ2i$reactariautils.mergeProps)(focusableProps, pressProps, (0, $eeQ2i$reactariautils.filterDOMProps)(props, {\n    labelable: true\n  }));\n  return {\n    isPressed: isPressed,\n    buttonProps: (0, $eeQ2i$reactariautils.mergeProps)(additionalProps, buttonProps, {\n      \"aria-haspopup\": props[\"aria-haspopup\"],\n      \"aria-expanded\": props[\"aria-expanded\"],\n      \"aria-controls\": props[\"aria-controls\"],\n      \"aria-pressed\": props[\"aria-pressed\"],\n      onClick: function onClick(e) {\n        if (deprecatedOnClick) {\n          deprecatedOnClick(e);\n          console.warn(\"onClick is deprecated, please use onPress\");\n        }\n      }\n    })\n  };\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $c49208f7d2aac50b$export$51e84d46ca0bc451(props, state, ref) {\n  var isSelected = state.isSelected;\n  var _ref3 = (0, $988353faa005faf8$export$ea18c227d4417cc3)(_objectSpread({}, props, {\n      onPress: (0, $eeQ2i$reactariautils.chain)(state.toggle, props.onPress)\n    }), ref),\n    isPressed = _ref3.isPressed,\n    buttonProps = _ref3.buttonProps;\n  return {\n    isPressed: isPressed,\n    buttonProps: (0, $eeQ2i$reactariautils.mergeProps)(buttonProps, {\n      \"aria-pressed\": isSelected\n    })\n  };\n}","map":null,"metadata":{},"sourceType":"script"}