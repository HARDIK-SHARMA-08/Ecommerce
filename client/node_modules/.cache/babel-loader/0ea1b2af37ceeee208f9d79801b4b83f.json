{"ast":null,"code":"import _objectSpread from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useMultiSelectListState } from \"./chunk-DR4LBAWG.mjs\";\n\n// src/use-multiselect-state.ts\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { useState } from \"react\";\nfunction useMultiSelectState(props) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFocused = _useState2[0],\n    setFocused = _useState2[1];\n  var triggerState = useMenuTriggerState(props);\n  var listState = useMultiSelectListState(_objectSpread({}, props, {\n    onSelectionChange: function onSelectionChange(keys) {\n      if (props.onSelectionChange != null) {\n        if (keys === \"all\") {\n          props.onSelectionChange(new Set(listState.collection.getKeys()));\n        } else {\n          props.onSelectionChange(keys);\n        }\n      }\n      if (props.selectionMode === \"single\") {\n        triggerState.close();\n      }\n    }\n  }));\n  return _objectSpread({}, listState, triggerState, {\n    close: function close() {\n      triggerState.close();\n    },\n    open: function open() {\n      if (listState.collection.size !== 0) {\n        triggerState.open();\n      }\n    },\n    toggle: function toggle(focusStrategy) {\n      if (listState.collection.size !== 0) {\n        triggerState.toggle(focusStrategy);\n      }\n    },\n    isFocused: isFocused,\n    setFocused: setFocused\n  });\n}\nexport { useMultiSelectState };","map":null,"metadata":{},"sourceType":"module"}