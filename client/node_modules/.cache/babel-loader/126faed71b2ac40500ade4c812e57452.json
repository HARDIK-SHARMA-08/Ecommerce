{"ast":null,"code":"import _objectSpread from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { FloatingFocusManager, FloatingOverlay, FloatingPortal, useClick, useDismiss, useFloating, useInteractions, useMergeRefs, useRole } from '@floating-ui/react';\nimport { forwardRef, useState } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { ModalBody } from './ModalBody';\nimport { ModalContext } from './ModalContext';\nimport { ModalFooter } from './ModalFooter';\nimport { ModalHeader } from './ModalHeader';\nvar ModalComponent = forwardRef(function (_ref, theirRef) {\n  var children = _ref.children,\n    className = _ref.className,\n    _ref$dismissible = _ref.dismissible,\n    dismissible = _ref$dismissible === void 0 ? false : _ref$dismissible,\n    onClose = _ref.onClose,\n    popup = _ref.popup,\n    _ref$position = _ref.position,\n    position = _ref$position === void 0 ? 'center' : _ref$position,\n    root = _ref.root,\n    show = _ref.show,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? '2xl' : _ref$size,\n    _ref$theme = _ref.theme,\n    customTheme = _ref$theme === void 0 ? {} : _ref$theme,\n    initialFocus = _ref.initialFocus,\n    props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"dismissible\", \"onClose\", \"popup\", \"position\", \"root\", \"show\", \"size\", \"theme\", \"initialFocus\"]);\n  var _useState = useState(undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    headerId = _useState2[0],\n    setHeaderId = _useState2[1];\n  var theme = mergeDeep(useTheme().theme.modal, customTheme);\n  var _useFloating = useFloating({\n      open: show,\n      onOpenChange: function onOpenChange() {\n        return onClose && onClose();\n      }\n    }),\n    context = _useFloating.context;\n  var ref = useMergeRefs([context.refs.setFloating, theirRef]);\n  var click = useClick(context);\n  var dismiss = useDismiss(context, {\n    outsidePressEvent: 'mousedown',\n    enabled: dismissible\n  });\n  var role = useRole(context);\n  var _useInteractions = useInteractions([click, dismiss, role]),\n    getFloatingProps = _useInteractions.getFloatingProps;\n  if (!show) {\n    return null;\n  }\n  return _jsx(ModalContext.Provider, {\n    value: {\n      popup: popup,\n      onClose: onClose,\n      setHeaderId: setHeaderId\n    },\n    children: _jsx(FloatingPortal, {\n      root: root,\n      children: _jsx(FloatingOverlay, _objectSpread({\n        lockScroll: true,\n        \"data-testid\": \"modal-overlay\",\n        className: twMerge(theme.root.base, theme.root.positions[position], show ? theme.root.show.on : theme.root.show.off, className)\n      }, props, {\n        children: _jsx(FloatingFocusManager, {\n          context: context,\n          initialFocus: initialFocus,\n          children: _jsx(\"div\", _objectSpread({\n            ref: ref\n          }, getFloatingProps(props), {\n            \"aria-labelledby\": headerId,\n            className: twMerge(theme.content.base, theme.root.sizes[size]),\n            children: _jsx(\"div\", {\n              className: theme.content.inner,\n              children: children\n            })\n          }))\n        })\n      }))\n    })\n  });\n});\nModalComponent.displayName = 'Modal';\nModalHeader.displayName = 'Modal.Header';\nModalBody.displayName = 'Modal.Body';\nModalFooter.displayName = 'Modal.Footer';\nexport var Modal = Object.assign(ModalComponent, {\n  Header: ModalHeader,\n  Body: ModalBody,\n  Footer: ModalFooter\n});","map":null,"metadata":{},"sourceType":"module"}