{"ast":null,"code":"\"use client\";\n\nimport _objectSpread from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport { usePopover } from \"./chunk-6WZQP7OD.mjs\";\n\n// src/free-solo-popover.tsx\nimport * as React from \"react\";\nimport { DismissButton, Overlay } from \"@react-aria/overlays\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { motion } from \"framer-motion\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { getTransformOrigins } from \"@nextui-org/aria-utils\";\nimport { TRANSITION_VARIANTS } from \"@nextui-org/framer-transitions\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FreeSoloPopoverWrapper = function FreeSoloPopoverWrapper(_ref) {\n  var children = _ref.children,\n    motionProps = _ref.motionProps,\n    placement = _ref.placement,\n    disableAnimation = _ref.disableAnimation,\n    _ref$style = _ref.style,\n    style = _ref$style === void 0 ? {} : _ref$style,\n    otherProps = _objectWithoutProperties(_ref, [\"children\", \"motionProps\", \"placement\", \"disableAnimation\", \"style\"]);\n  return disableAnimation ? /* @__PURE__ */jsx(\"div\", _objectSpread({}, otherProps, {\n    children: children\n  })) : /* @__PURE__ */jsx(motion.div, _objectSpread({\n    animate: \"enter\",\n    exit: \"exit\",\n    initial: \"initial\",\n    style: _objectSpread({}, style, getTransformOrigins(placement === \"center\" ? \"top\" : placement)),\n    variants: TRANSITION_VARIANTS.scaleSpringOpacity\n  }, mergeProps(otherProps, motionProps), {\n    children: children\n  }));\n};\nvar FreeSoloPopover = forwardRef(function (props, ref) {\n  var _usePopover = usePopover(_objectSpread({}, props, {\n      shouldCloseOnInteractOutside: void 0,\n      ref: ref\n    })),\n    Component = _usePopover.Component,\n    state = _usePopover.state,\n    children = _usePopover.children,\n    placement = _usePopover.placement,\n    backdrop = _usePopover.backdrop,\n    showArrow = _usePopover.showArrow,\n    portalContainer = _usePopover.portalContainer,\n    disableAnimation = _usePopover.disableAnimation,\n    motionProps = _usePopover.motionProps,\n    isNonModal = _usePopover.isNonModal,\n    getPopoverProps = _usePopover.getPopoverProps,\n    getBackdropProps = _usePopover.getBackdropProps,\n    getDialogProps = _usePopover.getDialogProps,\n    getArrowProps = _usePopover.getArrowProps;\n  var arrowContent = React.useMemo(function () {\n    if (!showArrow) return null;\n    return /* @__PURE__ */jsx(\"span\", _objectSpread({}, getArrowProps()));\n  }, [showArrow, getArrowProps]);\n  var backdropContent = React.useMemo(function () {\n    if (backdrop === \"transparent\") {\n      return null;\n    }\n    if (disableAnimation) {\n      return /* @__PURE__ */jsx(\"div\", _objectSpread({}, getBackdropProps()));\n    }\n    return /* @__PURE__ */jsx(motion.div, _objectSpread({\n      animate: \"enter\",\n      exit: \"exit\",\n      initial: \"exit\",\n      variants: TRANSITION_VARIANTS.fade\n    }, getBackdropProps()));\n  }, [backdrop, disableAnimation, getBackdropProps]);\n  return /* @__PURE__ */jsxs(Overlay, {\n    portalContainer: portalContainer,\n    children: [!isNonModal && backdropContent, /* @__PURE__ */jsx(Component, _objectSpread({}, getPopoverProps(), {\n      children: /* @__PURE__ */jsxs(FreeSoloPopoverWrapper, _objectSpread({\n        disableAnimation: disableAnimation,\n        motionProps: motionProps,\n        placement: placement,\n        tabIndex: -1\n      }, getDialogProps(), {\n        children: [!isNonModal && /* @__PURE__ */jsx(DismissButton, {\n          onDismiss: state.close\n        }), children, arrowContent, /* @__PURE__ */jsx(DismissButton, {\n          onDismiss: state.close\n        })]\n      }))\n    }))]\n  });\n});\nFreeSoloPopover.displayName = \"NextUI.FreeSoloPopover\";\nvar free_solo_popover_default = FreeSoloPopover;\nexport { free_solo_popover_default };","map":null,"metadata":{},"sourceType":"module"}