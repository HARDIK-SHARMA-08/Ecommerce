{"ast":null,"code":"\"use client\";\n\n// src/context.ts\nimport * as React from \"react\";\nfunction createContext2() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$strict = options.strict,\n    strict = _options$strict === void 0 ? true : _options$strict,\n    _options$errorMessage = options.errorMessage,\n    errorMessage = _options$errorMessage === void 0 ? \"useContext: `context` is undefined. Seems you forgot to wrap component within the Provider\" : _options$errorMessage,\n    name = options.name;\n  var Context = React.createContext(void 0);\n  Context.displayName = name;\n  function useContext2() {\n    var _a;\n    var context = React.useContext(Context);\n    if (!context && strict) {\n      var error = new Error(errorMessage);\n      error.name = \"ContextError\";\n      (_a = Error.captureStackTrace) == null ? void 0 : _a.call(Error, error, useContext2);\n      throw error;\n    }\n    return context;\n  }\n  return [Context.Provider, useContext2, Context];\n}\nexport { createContext2 as createContext };","map":null,"metadata":{},"sourceType":"module"}