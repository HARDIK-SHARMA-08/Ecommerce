{"ast":null,"code":"\"use client\";\n\n// src/use-ripple.ts\nimport _objectSpread from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { getUniqueID } from \"@nextui-org/shared-utils\";\nimport { useCallback, useState } from \"react\";\nfunction useRipple() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    ripples = _useState2[0],\n    setRipples = _useState2[1];\n  var onClick = useCallback(function (event) {\n    var trigger = event.currentTarget;\n    var size = Math.max(trigger.clientWidth, trigger.clientHeight);\n    var rect = trigger.getBoundingClientRect();\n    setRipples(function (prevRipples) {\n      return [].concat(_toConsumableArray(prevRipples), [{\n        key: getUniqueID(prevRipples.length.toString()),\n        size: size,\n        x: event.clientX - rect.x - size / 2,\n        y: event.clientY - rect.y - size / 2\n      }]);\n    });\n  }, []);\n  var onClear = useCallback(function (key) {\n    setRipples(function (prevState) {\n      return prevState.filter(function (ripple) {\n        return ripple.key !== key;\n      });\n    });\n  }, []);\n  return _objectSpread({\n    ripples: ripples,\n    onClick: onClick,\n    onClear: onClear\n  }, props);\n}\nexport { useRipple };","map":null,"metadata":{},"sourceType":"module"}