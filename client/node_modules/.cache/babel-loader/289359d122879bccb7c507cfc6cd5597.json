{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  useAriaButton: function useAriaButton() {\n    return _useAriaButton;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_utils = require(\"@react-aria/utils\");\nvar import_focus = require(\"@react-aria/focus\");\nvar import_interactions = require(\"@react-aria/interactions\");\nfunction _useAriaButton(props, ref) {\n  var _props$elementType = props.elementType,\n    elementType = _props$elementType === void 0 ? \"button\" : _props$elementType,\n    isDisabled = props.isDisabled,\n    onPress = props.onPress,\n    onPressStart = props.onPressStart,\n    onPressEnd = props.onPressEnd,\n    onPressChange = props.onPressChange,\n    preventFocusOnPress = props.preventFocusOnPress,\n    allowFocusWhenDisabled = props.allowFocusWhenDisabled,\n    deprecatedOnClick = props.onClick,\n    href = props.href,\n    target = props.target,\n    rel = props.rel,\n    _props$type = props.type,\n    type = _props$type === void 0 ? \"button\" : _props$type,\n    allowTextSelectionOnPress = props.allowTextSelectionOnPress;\n  var additionalProps;\n  if (elementType === \"button\") {\n    additionalProps = {\n      type: type,\n      disabled: isDisabled\n    };\n  } else {\n    additionalProps = {\n      role: \"button\",\n      tabIndex: isDisabled ? void 0 : 0,\n      href: elementType === \"a\" && isDisabled ? void 0 : href,\n      target: elementType === \"a\" ? target : void 0,\n      type: elementType === \"input\" ? type : void 0,\n      disabled: elementType === \"input\" ? isDisabled : void 0,\n      \"aria-disabled\": !isDisabled || elementType === \"input\" ? void 0 : isDisabled,\n      rel: elementType === \"a\" ? rel : void 0\n    };\n  }\n  var _ref = (0, import_interactions.usePress)({\n      onPressStart: onPressStart,\n      onPressEnd: onPressEnd,\n      onPressChange: onPressChange,\n      onPress: onPress,\n      isDisabled: isDisabled,\n      preventFocusOnPress: preventFocusOnPress,\n      allowTextSelectionOnPress: allowTextSelectionOnPress,\n      ref: ref\n    }),\n    pressProps = _ref.pressProps,\n    isPressed = _ref.isPressed;\n  var _ref2 = (0, import_focus.useFocusable)(props, ref),\n    focusableProps = _ref2.focusableProps;\n  if (allowFocusWhenDisabled) {\n    focusableProps.tabIndex = isDisabled ? -1 : focusableProps.tabIndex;\n  }\n  var buttonProps = (0, import_utils.mergeProps)(focusableProps, pressProps, (0, import_utils.filterDOMProps)(props, {\n    labelable: true\n  }));\n  return {\n    isPressed: isPressed,\n    buttonProps: (0, import_utils.mergeProps)(additionalProps, buttonProps, {\n      \"aria-haspopup\": props[\"aria-haspopup\"],\n      \"aria-expanded\": props[\"aria-expanded\"],\n      \"aria-controls\": props[\"aria-controls\"],\n      \"aria-pressed\": props[\"aria-pressed\"],\n      onClick: function onClick(e) {\n        if (deprecatedOnClick) {\n          deprecatedOnClick(e);\n        }\n      }\n    })\n  };\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  useAriaButton: _useAriaButton\n});","map":null,"metadata":{},"sourceType":"script"}