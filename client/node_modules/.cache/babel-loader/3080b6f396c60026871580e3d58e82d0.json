{"ast":null,"code":"var _objectSpread = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nvar $6vrKB$reactariautils = require(\"@react-aria/utils\");\nvar $6vrKB$reactariafocus = require(\"@react-aria/focus\");\nvar $6vrKB$react = require(\"react\");\nvar $6vrKB$reactariaoverlays = require(\"@react-aria/overlays\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useDialog\", function () {\n  return $e7b76b4fae4e4c55$export$d55e7ee900f34e93;\n});\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n\nfunction $e7b76b4fae4e4c55$export$d55e7ee900f34e93(props, ref) {\n  var _props$role = props.role,\n    role = _props$role === void 0 ? \"dialog\" : _props$role;\n  var titleId = (0, $6vrKB$reactariautils.useSlotId)();\n  titleId = props[\"aria-label\"] ? undefined : titleId;\n  var isRefocusing = (0, $6vrKB$react.useRef)(false);\n  // Focus the dialog itself on mount, unless a child element is already focused.\n  (0, $6vrKB$react.useEffect)(function () {\n    if (ref.current && !ref.current.contains(document.activeElement)) {\n      (0, $6vrKB$reactariafocus.focusSafely)(ref.current);\n      // Safari on iOS does not move the VoiceOver cursor to the dialog\n      // or announce that it has opened until it has rendered. A workaround\n      // is to wait for half a second, then blur and re-focus the dialog.\n      var timeout = setTimeout(function () {\n        if (document.activeElement === ref.current) {\n          isRefocusing.current = true;\n          ref.current.blur();\n          (0, $6vrKB$reactariafocus.focusSafely)(ref.current);\n          isRefocusing.current = false;\n        }\n      }, 500);\n      return function () {\n        clearTimeout(timeout);\n      };\n    }\n  }, [ref]);\n  (0, $6vrKB$reactariaoverlays.useOverlayFocusContain)();\n  // We do not use aria-modal due to a Safari bug which forces the first focusable element to be focused\n  // on mount when inside an iframe, no matter which element we programmatically focus.\n  // See https://bugs.webkit.org/show_bug.cgi?id=211934.\n  // useModal sets aria-hidden on all elements outside the dialog, so the dialog will behave as a modal\n  // even without aria-modal on the dialog itself.\n  return {\n    dialogProps: _objectSpread({}, (0, $6vrKB$reactariautils.filterDOMProps)(props, {\n      labelable: true\n    }), {\n      role: role,\n      tabIndex: -1,\n      \"aria-labelledby\": props[\"aria-labelledby\"] || titleId,\n      // Prevent blur events from reaching useOverlay, which may cause\n      // popovers to close. Since focus is contained within the dialog,\n      // we don't want this to occur due to the above useEffect.\n      onBlur: function onBlur(e) {\n        if (isRefocusing.current) e.stopPropagation();\n      }\n    }),\n    titleProps: {\n      id: titleId\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}