{"ast":null,"code":"\"use client\";\n\n// src/overlays/utils.ts\nimport _slicedToArray from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar getTransformOrigins = function getTransformOrigins(placement) {\n  var origins = {\n    top: {\n      originY: 1\n    },\n    bottom: {\n      originY: 0\n    },\n    left: {\n      originX: 1\n    },\n    right: {\n      originX: 0\n    },\n    \"top-start\": {\n      originX: 0,\n      originY: 1\n    },\n    \"top-end\": {\n      originX: 1,\n      originY: 1\n    },\n    \"bottom-start\": {\n      originX: 0,\n      originY: 0\n    },\n    \"bottom-end\": {\n      originX: 1,\n      originY: 0\n    },\n    \"right-start\": {\n      originX: 0,\n      originY: 0\n    },\n    \"right-end\": {\n      originX: 0,\n      originY: 1\n    },\n    \"left-start\": {\n      originX: 1,\n      originY: 0\n    },\n    \"left-end\": {\n      originX: 1,\n      originY: 1\n    }\n  };\n  return (origins == null ? void 0 : origins[placement]) || {};\n};\nvar toReactAriaPlacement = function toReactAriaPlacement(placement) {\n  var mapPositions = {\n    top: \"top\",\n    bottom: \"bottom\",\n    left: \"left\",\n    right: \"right\",\n    \"top-start\": \"top start\",\n    \"top-end\": \"top end\",\n    \"bottom-start\": \"bottom start\",\n    \"bottom-end\": \"bottom end\",\n    \"left-start\": \"left top\",\n    \"left-end\": \"left bottom\",\n    \"right-start\": \"right top\",\n    \"right-end\": \"right bottom\"\n  };\n  return mapPositions[placement];\n};\nvar toOverlayPlacement = function toOverlayPlacement(placement) {\n  var mapPositions = {\n    top: \"top\",\n    bottom: \"bottom\",\n    left: \"left\",\n    right: \"right\",\n    center: \"top\"\n  };\n  return mapPositions[placement];\n};\nvar getShouldUseAxisPlacement = function getShouldUseAxisPlacement(axisPlacement, overlayPlacement) {\n  if (overlayPlacement.includes(\"-\")) {\n    var _overlayPlacement$spl = overlayPlacement.split(\"-\"),\n      _overlayPlacement$spl2 = _slicedToArray(_overlayPlacement$spl, 1),\n      position = _overlayPlacement$spl2[0];\n    if (position.includes(axisPlacement)) {\n      return false;\n    }\n  }\n  return true;\n};\nvar getArrowPlacement = function getArrowPlacement(dynamicPlacement, placement) {\n  if (placement.includes(\"-\")) {\n    var _placement$split = placement.split(\"-\"),\n      _placement$split2 = _slicedToArray(_placement$split, 2),\n      position = _placement$split2[1];\n    return \"\".concat(dynamicPlacement, \"-\").concat(position);\n  }\n  return dynamicPlacement;\n};\nexport { getTransformOrigins, toReactAriaPlacement, toOverlayPlacement, getShouldUseAxisPlacement, getArrowPlacement };","map":null,"metadata":{},"sourceType":"module"}