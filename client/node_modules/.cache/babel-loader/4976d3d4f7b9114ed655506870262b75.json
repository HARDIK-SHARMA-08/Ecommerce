{"ast":null,"code":"import _defineProperty from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n// src/utils.ts\nimport clsx from \"clsx\";\nimport { forwardRef as baseForwardRef } from \"react\";\nfunction forwardRef(component) {\n  return baseForwardRef(component);\n}\nvar toIterator = function toIterator(obj) {\n  return _objectSpread({}, obj, _defineProperty({}, Symbol.iterator, function () {\n    var _this = this;\n    var keys = Object.keys(this);\n    var index = 0;\n    return {\n      next: function next() {\n        if (index >= keys.length) {\n          return {\n            done: true\n          };\n        }\n        var key = keys[index];\n        var value = _this[key];\n        index++;\n        return {\n          value: {\n            key: key,\n            value: value\n          },\n          done: false\n        };\n      }\n    };\n  }));\n};\nvar mapPropsVariants = function mapPropsVariants(props, variantKeys) {\n  var removeVariantProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (!variantKeys) {\n    return [props, {}];\n  }\n  var picked = variantKeys.reduce(function (acc, key) {\n    if (key in props) {\n      return _objectSpread({}, acc, _defineProperty({}, key, props[key]));\n    } else {\n      return acc;\n    }\n  }, {});\n  if (removeVariantProps) {\n    var omitted = Object.keys(props).filter(function (key) {\n      return !variantKeys.includes(key);\n    }).reduce(function (acc, key) {\n      return _objectSpread({}, acc, _defineProperty({}, key, props[key]));\n    }, {});\n    return [omitted, picked];\n  } else {\n    return [props, picked];\n  }\n};\nvar mapPropsVariantsWithCommon = function mapPropsVariantsWithCommon(originalProps, variantKeys, commonKeys) {\n  var props = Object.keys(originalProps).filter(function (key) {\n    return !variantKeys.includes(key) || (commonKeys == null ? void 0 : commonKeys.includes(key));\n  }).reduce(function (acc, key) {\n    return _objectSpread({}, acc, _defineProperty({}, key, originalProps[key]));\n  }, {});\n  var variants = variantKeys.reduce(function (acc, key) {\n    return _objectSpread({}, acc, _defineProperty({}, key, originalProps[key]));\n  }, {});\n  return [props, variants];\n};\nvar cn = clsx;\nexport { forwardRef, toIterator, mapPropsVariants, mapPropsVariantsWithCommon, cn };","map":null,"metadata":{},"sourceType":"module"}