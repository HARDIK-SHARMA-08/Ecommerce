{"ast":null,"code":"import _defineProperty from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { createSpacingUnits, generateSpacingScale, isBaseTheme } from \"./chunk-NW5W5ANO.mjs\";\nimport { utilities } from \"./chunk-Y32IWEMZ.mjs\";\nimport { baseStyles } from \"./chunk-T7JNS25F.mjs\";\nimport { semanticColors } from \"./chunk-G4RCK475.mjs\";\nimport { flattenThemeObject } from \"./chunk-KUNVFLXJ.mjs\";\nimport { darkLayout, defaultLayout, lightLayout } from \"./chunk-7MCHEQXT.mjs\";\nimport { animations } from \"./chunk-DMASP6FA.mjs\";\nimport { commonColors } from \"./chunk-IAS3SFA4.mjs\";\n\n// src/plugin.ts\nimport Color from \"color\";\nimport plugin from \"tailwindcss/plugin.js\";\nimport get from \"lodash.get\";\nimport omit from \"lodash.omit\";\nimport forEach from \"lodash.foreach\";\nimport mapKeys from \"lodash.mapkeys\";\nimport kebabCase from \"lodash.kebabcase\";\nimport deepMerge from \"deepmerge\";\nvar DEFAULT_PREFIX = \"nextui\";\nvar resolveConfig = function resolveConfig() {\n  var themes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaultTheme = arguments.length > 1 ? arguments[1] : undefined;\n  var prefix = arguments.length > 2 ? arguments[2] : undefined;\n  var resolved = {\n    variants: [],\n    utilities: {},\n    colors: {}\n  };\n  forEach(themes, function (_ref, themeName) {\n    var extend = _ref.extend,\n      layout = _ref.layout,\n      colors = _ref.colors;\n    var cssSelector = \".\".concat(themeName, \",[data-theme=\\\"\").concat(themeName, \"\\\"]\");\n    var scheme = themeName === \"light\" || themeName === \"dark\" ? themeName : extend;\n    if (themeName === defaultTheme) {\n      cssSelector = \":root,\".concat(cssSelector);\n    }\n    resolved.utilities[cssSelector] = scheme ? {\n      \"color-scheme\": scheme\n    } : {};\n    var flatColors = flattenThemeObject(colors);\n    var flatLayout = layout ? mapKeys(layout, function (value, key) {\n      return kebabCase(key);\n    }) : {};\n    resolved.variants.push({\n      name: themeName,\n      definition: [\"&.\".concat(themeName), \"&[data-theme='\".concat(themeName, \"']\")]\n    });\n    forEach(flatColors, function (colorValue, colorName) {\n      if (!colorValue) return;\n      try {\n        var _Color$hsl$round$arra = Color(colorValue).hsl().round().array(),\n          _Color$hsl$round$arra2 = _slicedToArray(_Color$hsl$round$arra, 4),\n          h = _Color$hsl$round$arra2[0],\n          s = _Color$hsl$round$arra2[1],\n          l = _Color$hsl$round$arra2[2],\n          defaultAlphaValue = _Color$hsl$round$arra2[3];\n        var nextuiColorVariable = \"--\".concat(prefix, \"-\").concat(colorName);\n        var nextuiOpacityVariable = \"--\".concat(prefix, \"-\").concat(colorName, \"-opacity\");\n        resolved.utilities[cssSelector][nextuiColorVariable] = \"\".concat(h, \" \").concat(s, \"% \").concat(l, \"%\");\n        if (typeof defaultAlphaValue === \"number\") {\n          resolved.utilities[cssSelector][nextuiOpacityVariable] = defaultAlphaValue.toFixed(2);\n        }\n        resolved.colors[colorName] = function (_ref2) {\n          var opacityVariable = _ref2.opacityVariable,\n            opacityValue = _ref2.opacityValue;\n          if (!isNaN(+opacityValue)) {\n            return \"hsl(var(\".concat(nextuiColorVariable, \") / \").concat(opacityValue, \")\");\n          }\n          if (opacityVariable) {\n            return \"hsl(var(\".concat(nextuiColorVariable, \") / var(\").concat(nextuiOpacityVariable, \", var(\").concat(opacityVariable, \")))\");\n          }\n          return \"hsl(var(\".concat(nextuiColorVariable, \") / var(\").concat(nextuiOpacityVariable, \", 1))\");\n        };\n      } catch (error) {\n        console.log(\"error\", error == null ? void 0 : error.message);\n      }\n    });\n    forEach(flatLayout, function (value, key) {\n      if (!value) return;\n      if (typeof value === \"object\") {\n        forEach(value, function (v, k) {\n          var layoutVariable = \"--\".concat(prefix, \"-\").concat(key, \"-\").concat(k);\n          resolved.utilities[cssSelector][layoutVariable] = v;\n        });\n      } else if (key === \"spacing-unit\") {\n        var layoutVariable = \"--\".concat(prefix, \"-\").concat(key);\n        resolved.utilities[cssSelector][layoutVariable] = value;\n        var spacingScale = generateSpacingScale(Number(value));\n        forEach(spacingScale, function (v, k) {\n          var layoutVariable2 = \"--\".concat(prefix, \"-\").concat(key, \"-\").concat(k);\n          resolved.utilities[cssSelector][layoutVariable2] = v;\n        });\n      } else {\n        var _layoutVariable = \"--\".concat(prefix, \"-\").concat(key);\n        resolved.utilities[cssSelector][_layoutVariable] = value;\n      }\n    });\n  });\n  return resolved;\n};\nvar corePlugin = function corePlugin() {\n  var themes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaultTheme = arguments.length > 1 ? arguments[1] : undefined;\n  var prefix = arguments.length > 2 ? arguments[2] : undefined;\n  var addCommonColors = arguments.length > 3 ? arguments[3] : undefined;\n  var resolved = resolveConfig(themes, defaultTheme, prefix);\n  var minSizes = {\n    \"unit-1\": \"var(--\".concat(prefix, \"-spacing-unit)\"),\n    \"unit-2\": \"var(--\".concat(prefix, \"-spacing-unit-2\"),\n    \"unit-3\": \"var(--\".concat(prefix, \"-spacing-unit-3)\"),\n    \"unit-3.5\": \"var(--\".concat(prefix, \"-spacing-unit-3_5)\"),\n    \"unit-4\": \"var(--\".concat(prefix, \"-spacing-unit-4)\"),\n    \"unit-5\": \"var(--\".concat(prefix, \"-spacing-unit-5)\"),\n    \"unit-6\": \"var(--\".concat(prefix, \"-spacing-unit-6)\"),\n    \"unit-7\": \"var(--\".concat(prefix, \"-spacing-unit-7)\"),\n    \"unit-8\": \"var(--\".concat(prefix, \"-spacing-unit-8)\"),\n    \"unit-9\": \"var(--\".concat(prefix, \"-spacing-unit-9)\"),\n    \"unit-10\": \"var(--\".concat(prefix, \"-spacing-unit-10)\"),\n    \"unit-11\": \"var(--\".concat(prefix, \"-spacing-unit-11)\"),\n    \"unit-12\": \"var(--\".concat(prefix, \"-spacing-unit-12)\"),\n    \"unit-16\": \"var(--\".concat(prefix, \"-spacing-unit-16)\"),\n    \"unit-20\": \"var(--\".concat(prefix, \"-spacing-unit-20)\"),\n    \"unit-24\": \"var(--\".concat(prefix, \"-spacing-unit-24)\")\n  };\n  return plugin(function (_ref3) {\n    var addBase = _ref3.addBase,\n      addUtilities = _ref3.addUtilities,\n      addVariant = _ref3.addVariant;\n    addBase(_defineProperty({}, \":root, [data-theme]\", _objectSpread({}, baseStyles(prefix))));\n    addUtilities(_objectSpread({}, resolved.utilities, utilities));\n    resolved.variants.forEach(function (variant) {\n      addVariant(variant.name, variant.definition);\n    });\n  }, {\n    theme: {\n      extend: _objectSpread({\n        colors: _objectSpread({}, addCommonColors ? commonColors : {}, resolved.colors),\n        scale: {\n          \"80\": \"0.8\"\n        },\n        height: {\n          divider: \"var(--\".concat(prefix, \"-divider-weight)\")\n        },\n        width: {\n          divider: \"var(--\".concat(prefix, \"-divider-weight)\")\n        },\n        spacing: _objectSpread({\n          unit: \"var(--\".concat(prefix, \"-spacing-unit)\")\n        }, createSpacingUnits(prefix)),\n        minWidth: _objectSpread({}, minSizes),\n        minHeight: _objectSpread({}, minSizes),\n        fontSize: {\n          tiny: [\"var(--\".concat(prefix, \"-font-size-tiny)\"), \"var(--\".concat(prefix, \"-line-height-tiny)\")],\n          small: [\"var(--\".concat(prefix, \"-font-size-small)\"), \"var(--\".concat(prefix, \"-line-height-small)\")],\n          medium: [\"var(--\".concat(prefix, \"-font-size-medium)\"), \"var(--\".concat(prefix, \"-line-height-medium)\")],\n          large: [\"var(--\".concat(prefix, \"-font-size-large)\"), \"var(--\".concat(prefix, \"-line-height-large)\")]\n        },\n        borderRadius: {\n          small: \"var(--\".concat(prefix, \"-radius-small)\"),\n          medium: \"var(--\".concat(prefix, \"-radius-medium)\"),\n          large: \"var(--\".concat(prefix, \"-radius-large)\")\n        },\n        opacity: {\n          disabled: \"var(--\".concat(prefix, \"-disabled-opacity)\")\n        },\n        borderWidth: {\n          small: \"var(--\".concat(prefix, \"-border-width-small)\"),\n          medium: \"var(--\".concat(prefix, \"-border-width-medium)\"),\n          large: \"var(--\".concat(prefix, \"-border-width-large)\"),\n          1: \"1px\",\n          1.5: \"1.5px\",\n          3: \"3px\",\n          5: \"5px\"\n        },\n        boxShadow: {\n          small: \"var(--\".concat(prefix, \"-box-shadow-small)\"),\n          medium: \"var(--\".concat(prefix, \"-box-shadow-medium)\"),\n          large: \"var(--\".concat(prefix, \"-box-shadow-large)\")\n        },\n        backgroundImage: {\n          \"stripe-gradient\": \"linear-gradient(45deg, rgba(0, 0, 0, 0.1) 25%, transparent 25%, transparent 50%, rgba(0, 0, 0, 0.1) 50%, rgba(0, 0, 0, 0.1) 75%, transparent 75%, transparent)\"\n        },\n        transitionDuration: {\n          0: \"0ms\",\n          250: \"250ms\",\n          400: \"400ms\"\n        },\n        transitionTimingFunction: {\n          \"soft-spring\": \"cubic-bezier(0.155, 1.105, 0.295, 1.12)\"\n        }\n      }, animations)\n    }\n  });\n};\nvar nextui = function nextui() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$themes = config.themes,\n    themeObject = _config$themes === void 0 ? {} : _config$themes,\n    _config$defaultTheme = config.defaultTheme,\n    defaultTheme = _config$defaultTheme === void 0 ? \"light\" : _config$defaultTheme,\n    userLayout = config.layout,\n    _config$defaultExtend = config.defaultExtendTheme,\n    defaultExtendTheme = _config$defaultExtend === void 0 ? \"light\" : _config$defaultExtend,\n    _config$prefix = config.prefix,\n    defaultPrefix = _config$prefix === void 0 ? DEFAULT_PREFIX : _config$prefix,\n    _config$addCommonColo = config.addCommonColors,\n    addCommonColors = _config$addCommonColo === void 0 ? false : _config$addCommonColo;\n  var userLightColors = get(themeObject, \"light.colors\", {});\n  var userDarkColors = get(themeObject, \"dark.colors\", {});\n  var defaultLayoutObj = userLayout && typeof userLayout === \"object\" ? deepMerge(defaultLayout, userLayout) : defaultLayout;\n  var baseLayouts = {\n    light: _objectSpread({}, defaultLayoutObj, lightLayout),\n    dark: _objectSpread({}, defaultLayoutObj, darkLayout)\n  };\n  var otherThemes = omit(themeObject, [\"light\", \"dark\"]) || {};\n  forEach(otherThemes, function (_ref4, themeName) {\n    var extend = _ref4.extend,\n      colors = _ref4.colors,\n      layout = _ref4.layout;\n    var baseTheme = extend && isBaseTheme(extend) ? extend : defaultExtendTheme;\n    if (colors && typeof colors === \"object\") {\n      otherThemes[themeName].colors = deepMerge(semanticColors[baseTheme], colors);\n    }\n    if (layout && typeof layout === \"object\") {\n      otherThemes[themeName].layout = deepMerge(extend ? baseLayouts[extend] : defaultLayoutObj, layout);\n    }\n  });\n  var light = {\n    layout: deepMerge(baseLayouts.light, get(themeObject, \"light.layout\", {})),\n    colors: deepMerge(semanticColors.light, userLightColors)\n  };\n  var dark = {\n    layout: deepMerge(baseLayouts.dark, get(themeObject, \"dark.layout\", {})),\n    colors: deepMerge(semanticColors.dark, userDarkColors)\n  };\n  var themes = _objectSpread({\n    light: light,\n    dark: dark\n  }, otherThemes);\n  return corePlugin(themes, defaultTheme, defaultPrefix, addCommonColors);\n};\nexport { nextui };","map":null,"metadata":{},"sourceType":"module"}