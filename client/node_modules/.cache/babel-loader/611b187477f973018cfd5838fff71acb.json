{"ast":null,"code":"import _possibleConstructorReturn from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectSpread from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { Section as $6555104ff085bef4$re_export$Section, useCollection as $1BfjW$useCollection, getFirstItem as $1BfjW$getFirstItem, getLastItem as $1BfjW$getLastItem, CollectionBuilder as $1BfjW$CollectionBuilder } from \"@react-stately/collections\";\nimport $1BfjW$react, { useState as $1BfjW$useState, useMemo as $1BfjW$useMemo, useCallback as $1BfjW$useCallback } from \"react\";\nimport { useGridState as $1BfjW$useGridState, GridCollection as $1BfjW$GridCollection } from \"@react-stately/grid\";\nimport { tableNestedRows as $1BfjW$tableNestedRows } from \"@react-stately/flags\";\nimport { useControlledState as $1BfjW$useControlledState } from \"@react-stately/utils\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2022 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2022 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\nfunction $6818b1c4fc67028d$export$1994a077b98ee0d5(width) {\n  return width != null && (!isNaN(width) || String(width).match(/^(\\d+)(?=%$)/) !== null);\n}\nfunction $6818b1c4fc67028d$export$9078bad4c3934604(width) {\n  if (!width) return 1;\n  var match = width.match(/^(.+)(?=fr$)/);\n  // if width is the incorrect format, just default it to a 1fr\n  if (!match) {\n    console.warn(\"width: \".concat(width, \" is not a supported format, width should be a number (ex. 150), percentage (ex. '50%') or fr unit (ex. '2fr')\"), \"defaulting to '1fr'\");\n    return 1;\n  }\n  return parseFloat(match[0]);\n}\nfunction $6818b1c4fc67028d$export$7bbad27896f7ae9f(width, tableWidth) {\n  if (typeof width === \"string\") {\n    var match = width.match(/^(\\d+)(?=%$)/);\n    if (!match) throw new Error(\"Only percentages or numbers are supported for static column widths\");\n    return tableWidth * (parseFloat(match[0]) / 100);\n  }\n  return width;\n}\nfunction $6818b1c4fc67028d$export$59185c62a7544aa0(maxWidth, tableWidth) {\n  return maxWidth != null ? $6818b1c4fc67028d$export$7bbad27896f7ae9f(maxWidth, tableWidth) : Number.MAX_SAFE_INTEGER;\n}\nfunction $6818b1c4fc67028d$export$f556054ce4358701(minWidth, tableWidth) {\n  return minWidth != null ? $6818b1c4fc67028d$export$7bbad27896f7ae9f(minWidth, tableWidth) : 0;\n}\nfunction $6818b1c4fc67028d$export$55d50dc687385491(availableWidth, columns, changedColumns, getDefaultWidth, getDefaultMinWidth) {\n  var hasNonFrozenItems = false;\n  var flexItems = columns.map(function (column, index) {\n    var _column_width, _ref, _ref1;\n    var width = changedColumns.get(column.key) != null ? changedColumns.get(column.key) : (_ref1 = (_ref = (_column_width = column.width) !== null && _column_width !== void 0 ? _column_width : column.defaultWidth) !== null && _ref !== void 0 ? _ref : getDefaultWidth === null || getDefaultWidth === void 0 ? void 0 : getDefaultWidth(index)) !== null && _ref1 !== void 0 ? _ref1 : \"1fr\";\n    var frozen = false;\n    var baseSize = 0;\n    var flex = 0;\n    var targetMainSize = null;\n    if ($6818b1c4fc67028d$export$1994a077b98ee0d5(width)) {\n      baseSize = $6818b1c4fc67028d$export$7bbad27896f7ae9f(width, availableWidth);\n      frozen = true;\n    } else {\n      flex = $6818b1c4fc67028d$export$9078bad4c3934604(width);\n      if (flex <= 0) frozen = true;\n    }\n    var _column_minWidth, _ref2;\n    var min = $6818b1c4fc67028d$export$f556054ce4358701((_ref2 = (_column_minWidth = column.minWidth) !== null && _column_minWidth !== void 0 ? _column_minWidth : getDefaultMinWidth === null || getDefaultMinWidth === void 0 ? void 0 : getDefaultMinWidth(index)) !== null && _ref2 !== void 0 ? _ref2 : 0, availableWidth);\n    var max = $6818b1c4fc67028d$export$59185c62a7544aa0(column.maxWidth, availableWidth);\n    var hypotheticalMainSize = Math.max(min, Math.min(baseSize, max));\n    // 9.7.1\n    // We don't make use of flex basis, it's always 0, so we are always in 'grow' mode.\n    // 9.7.2\n    if (frozen) targetMainSize = hypotheticalMainSize;else if (baseSize > hypotheticalMainSize) {\n      frozen = true;\n      targetMainSize = hypotheticalMainSize;\n    }\n    // 9.7.3\n    if (!frozen) hasNonFrozenItems = true;\n    return {\n      frozen: frozen,\n      baseSize: baseSize,\n      hypotheticalMainSize: hypotheticalMainSize,\n      min: min,\n      max: max,\n      flex: flex,\n      targetMainSize: targetMainSize,\n      violation: 0\n    };\n  });\n  // 9.7.4\n  // 9.7.4.a\n  var _loop = function _loop() {\n    // 9.7.4.b\n    /**\n    * Calculate the remaining free space as for initial free space,\n    * above (9.7.3). If the sum of the unfrozen flex items’ flex factors is\n    * less than one, multiply the initial free space by this sum (of flex factors).\n    * If the magnitude of this value is less than the magnitude of\n    * the remaining free space, use this as the remaining free space.\n    */\n    var usedWidth = 0;\n    var flexFactors = 0;\n    flexItems.forEach(function (item) {\n      if (item.frozen) usedWidth += item.targetMainSize;else {\n        usedWidth += item.baseSize;\n        flexFactors += item.flex;\n      }\n    });\n    var remainingFreeSpace = availableWidth - usedWidth;\n    // we only support integer FR's, and because of hasNonFrozenItems, we know that flexFactors > 0\n    // so no need to check for flexFactors < 1\n    // 9.7.4.c\n    /**\n    * If the remaining free space is zero\n    * - Do nothing.\n    * Else // remember, we're always in grow mode\n    * - Find the ratio of the item’s flex grow factor to the\n    * sum of the flex grow factors of all unfrozen items on\n    * the line. Set the item’s target main size to its flex\n    * base size plus a fraction of the remaining free space\n    * proportional to the ratio.\n    */\n    if (remainingFreeSpace > 0) flexItems.forEach(function (item) {\n      if (!item.frozen) {\n        var ratio = item.flex / flexFactors;\n        item.targetMainSize = item.baseSize + ratio * remainingFreeSpace;\n      }\n    });\n    // 9.7.4.d\n    /**\n    * Fix min/max violations. Clamp each non-frozen item’s\n    * target main size by its used min and max main sizes\n    * and floor its content-box size at zero. If the item’s\n    * target main size was made smaller by this, it’s a max\n    * violation. If the item’s target main size was made\n    * larger by this, it’s a min violation.\n    */\n    var totalViolation = 0;\n    flexItems.forEach(function (item) {\n      item.violation = 0;\n      if (!item.frozen) {\n        var min = item.min,\n          max = item.max,\n          targetMainSize = item.targetMainSize;\n        item.targetMainSize = Math.max(min, Math.min(targetMainSize, max));\n        item.violation = item.targetMainSize - targetMainSize;\n        totalViolation += item.violation;\n      }\n    });\n    // 9.7.4.e\n    /**\n    * Freeze over-flexed items. The total violation is the\n    * sum of the adjustments from the previous step\n    * ∑(clamped size - unclamped size). If the total violation is:\n    * Zero\n    * - Freeze all items.\n    *\n    * Positive\n    * - Freeze all the items with min violations.\n    *\n    * Negative\n    * - Freeze all the items with max violations.\n    */\n    hasNonFrozenItems = false;\n    flexItems.forEach(function (item) {\n      if (totalViolation === 0 || Math.sign(totalViolation) === Math.sign(item.violation)) item.frozen = true;else if (!item.frozen) hasNonFrozenItems = true;\n    });\n  };\n  while (hasNonFrozenItems) {\n    _loop();\n  }\n  return $6818b1c4fc67028d$var$cascadeRounding(flexItems);\n}\nfunction $6818b1c4fc67028d$var$cascadeRounding(flexItems) {\n  /*\n  Given an array of floats that sum to an integer, this rounds the floats\n  and returns an array of integers with the same sum.\n  */\n  var fpTotal = 0;\n  var intTotal = 0;\n  var roundedArray = [];\n  flexItems.forEach(function (item) {\n    var float = item.targetMainSize;\n    var integer = Math.round(float + fpTotal) - intTotal;\n    fpTotal += float;\n    intTotal += integer;\n    roundedArray.push(integer);\n  });\n  return roundedArray;\n}\nvar $a9e7ae544a4e41dd$export$7ff77a162970b30e = /*#__PURE__*/function () {\n  _createClass($a9e7ae544a4e41dd$export$7ff77a162970b30e, [{\n    key: \"splitColumnsIntoControlledAndUncontrolled\",\n    /** Takes an array of columns and splits it into 2 maps of columns with controlled and columns with uncontrolled widths. */value: function splitColumnsIntoControlledAndUncontrolled(columns) {\n      return columns.reduce(function (acc, col) {\n        if (col.props.width != null) acc[0].set(col.key, col);else acc[1].set(col.key, col);\n        return acc;\n      }, [new Map(), new Map()]);\n    } /** Takes uncontrolled and controlled widths and joins them into a single Map. */\n  }, {\n    key: \"recombineColumns\",\n    value: function recombineColumns(columns, uncontrolledWidths, uncontrolledColumns, controlledColumns) {\n      return new Map(columns.map(function (col) {\n        if (uncontrolledColumns.has(col.key)) return [col.key, uncontrolledWidths.get(col.key)];else return [col.key, controlledColumns.get(col.key).props.width];\n      }));\n    } /** Used to make an initial Map of the uncontrolled widths based on default widths. */\n  }, {\n    key: \"getInitialUncontrolledWidths\",\n    value: function getInitialUncontrolledWidths(uncontrolledColumns) {\n      var _this2 = this;\n      var _col_props_defaultWidth, _ref;\n      return new Map(Array.from(uncontrolledColumns).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          key = _ref4[0],\n          col = _ref4[1];\n        var _this, _this_getDefaultWidth;\n        return [key, (_ref = (_col_props_defaultWidth = col.props.defaultWidth) !== null && _col_props_defaultWidth !== void 0 ? _col_props_defaultWidth : (_this_getDefaultWidth = (_this = _this2).getDefaultWidth) === null || _this_getDefaultWidth === void 0 ? void 0 : _this_getDefaultWidth.call(_this, col)) !== null && _ref !== void 0 ? _ref : \"1fr\"];\n      }));\n    }\n  }, {\n    key: \"getColumnWidth\",\n    value: function getColumnWidth(key) {\n      var _this_columnWidths_get;\n      return (_this_columnWidths_get = this.columnWidths.get(key)) !== null && _this_columnWidths_get !== void 0 ? _this_columnWidths_get : 0;\n    }\n  }, {\n    key: \"getColumnMinWidth\",\n    value: function getColumnMinWidth(key) {\n      return this.columnMinWidths.get(key);\n    }\n  }, {\n    key: \"getColumnMaxWidth\",\n    value: function getColumnMaxWidth(key) {\n      return this.columnMaxWidths.get(key);\n    }\n  }, {\n    key: \"resizeColumnWidth\",\n    value: function resizeColumnWidth(tableWidth, collection, controlledWidths, uncontrolledWidths) {\n      var _this3 = this;\n      var col = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      var width = arguments.length > 5 ? arguments[5] : undefined;\n      var prevColumnWidths = this.columnWidths;\n      // resizing a column\n      var resizeIndex = Infinity;\n      var resizingChanged = new Map([].concat(_toConsumableArray(controlledWidths), _toConsumableArray(uncontrolledWidths)));\n      var percentKeys = new Map();\n      var frKeysToTheRight = new Map();\n      var minWidths = new Map();\n      // freeze columns to the left to their previous pixel value\n      collection.columns.forEach(function (column, i) {\n        var _column_props_width, _column_props_width_endsWith;\n        var frKey;\n        var frValue;\n        minWidths.set(column.key, _this3.getDefaultMinWidth(collection.columns[i]));\n        if (col !== column.key && !column.props.width && !(0, $6818b1c4fc67028d$export$1994a077b98ee0d5)(uncontrolledWidths.get(column.key))) {\n          // uncontrolled don't have props.width for us, so instead get from our state\n          frKey = column.key;\n          frValue = (0, $6818b1c4fc67028d$export$9078bad4c3934604)(uncontrolledWidths.get(column.key));\n        } else if (col !== column.key && !(0, $6818b1c4fc67028d$export$1994a077b98ee0d5)(column.props.width) && !uncontrolledWidths.get(column.key)) {\n          // controlledWidths will be the same in the collection\n          frKey = column.key;\n          frValue = (0, $6818b1c4fc67028d$export$9078bad4c3934604)(column.props.width);\n        } else if (col !== column.key && ((_column_props_width = column.props.width) === null || _column_props_width === void 0 ? void 0 : (_column_props_width_endsWith = _column_props_width.endsWith) === null || _column_props_width_endsWith === void 0 ? void 0 : _column_props_width_endsWith.call(_column_props_width, \"%\"))) percentKeys.set(column.key, column.props.width);\n        // don't freeze columns to the right of the resizing one\n        if (resizeIndex < i) {\n          if (frKey) frKeysToTheRight.set(frKey, frValue);\n          return;\n        }\n        // we already know the new size of the resizing column\n        if (column.key === col) {\n          resizeIndex = i;\n          resizingChanged.set(column.key, Math.floor(width));\n          return;\n        }\n        // freeze column to previous value\n        resizingChanged.set(column.key, prevColumnWidths.get(column.key));\n      });\n      // predict pixels sizes for all columns based on resize\n      var columnWidths = (0, $6818b1c4fc67028d$export$55d50dc687385491)(tableWidth, collection.columns.map(function (col) {\n        return _objectSpread({}, col.props, {\n          key: col.key\n        });\n      }), resizingChanged, function (i) {\n        return _this3.getDefaultWidth(collection.columns[i]);\n      }, function (i) {\n        return _this3.getDefaultMinWidth(collection.columns[i]);\n      });\n      // set all new column widths for onResize event\n      // columns going in will be the same order as the columns coming out\n      var newWidths = new Map();\n      // set all column widths based on calculateColumnSize\n      columnWidths.forEach(function (width, index) {\n        var key = collection.columns[index].key;\n        newWidths.set(key, width);\n      });\n      // add FR's back as they were to columns to the right\n      Array.from(frKeysToTheRight).forEach(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 1),\n          key = _ref6[0];\n        newWidths.set(key, \"\".concat(frKeysToTheRight.get(key), \"fr\"));\n      });\n      // put back in percents\n      Array.from(percentKeys).forEach(function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n          key = _ref8[0],\n          width = _ref8[1];\n        // resizing locks a column to a px width\n        if (key === col) return;\n        newWidths.set(key, width);\n      });\n      return newWidths;\n    }\n  }, {\n    key: \"buildColumnWidths\",\n    value: function buildColumnWidths(tableWidth, collection, widths) {\n      var _this4 = this;\n      this.columnWidths = new Map();\n      this.columnMinWidths = new Map();\n      this.columnMaxWidths = new Map();\n      // initial layout or table/window resizing\n      var columnWidths = (0, $6818b1c4fc67028d$export$55d50dc687385491)(tableWidth, collection.columns.map(function (col) {\n        return _objectSpread({}, col.props, {\n          key: col.key\n        });\n      }), widths, function (i) {\n        return _this4.getDefaultWidth(collection.columns[i]);\n      }, function (i) {\n        return _this4.getDefaultMinWidth(collection.columns[i]);\n      });\n      // columns going in will be the same order as the columns coming out\n      columnWidths.forEach(function (width, index) {\n        var key = collection.columns[index].key;\n        var column = collection.columns[index];\n        _this4.columnWidths.set(key, width);\n        var _column_props_minWidth;\n        _this4.columnMinWidths.set(key, (0, $6818b1c4fc67028d$export$f556054ce4358701)((_column_props_minWidth = column.props.minWidth) !== null && _column_props_minWidth !== void 0 ? _column_props_minWidth : _this4.getDefaultMinWidth(column), tableWidth));\n        _this4.columnMaxWidths.set(key, (0, $6818b1c4fc67028d$export$59185c62a7544aa0)(column.props.maxWidth, tableWidth));\n      });\n      return this.columnWidths;\n    }\n  }]);\n  function $a9e7ae544a4e41dd$export$7ff77a162970b30e(options) {\n    _classCallCheck(this, $a9e7ae544a4e41dd$export$7ff77a162970b30e);\n    this.columnWidths = new Map();\n    this.columnMinWidths = new Map();\n    this.columnMaxWidths = new Map();\n    var _options_getDefaultWidth;\n    this.getDefaultWidth = (_options_getDefaultWidth = options === null || options === void 0 ? void 0 : options.getDefaultWidth) !== null && _options_getDefaultWidth !== void 0 ? _options_getDefaultWidth : function () {\n      return \"1fr\";\n    };\n    var _options_getDefaultMinWidth;\n    this.getDefaultMinWidth = (_options_getDefaultMinWidth = options === null || options === void 0 ? void 0 : options.getDefaultMinWidth) !== null && _options_getDefaultMinWidth !== void 0 ? _options_getDefaultMinWidth : function () {\n      return 75;\n    };\n  }\n  return $a9e7ae544a4e41dd$export$7ff77a162970b30e;\n}();\nfunction $292bc4e09cd0eb62$export$cb895dcf85db1319(props, state) {\n  var getDefaultWidth = props.getDefaultWidth,\n    getDefaultMinWidth = props.getDefaultMinWidth,\n    _props$tableWidth = props.tableWidth,\n    tableWidth = _props$tableWidth === void 0 ? 0 : _props$tableWidth;\n  var _ref9 = (0, $1BfjW$useState)(null),\n    _ref10 = _slicedToArray(_ref9, 2),\n    resizingColumn = _ref10[0],\n    setResizingColumn = _ref10[1];\n  var columnLayout = (0, $1BfjW$useMemo)(function () {\n    return new (0, $a9e7ae544a4e41dd$export$7ff77a162970b30e)({\n      getDefaultWidth: getDefaultWidth,\n      getDefaultMinWidth: getDefaultMinWidth\n    });\n  }, [getDefaultWidth, getDefaultMinWidth]);\n  var _ref11 = (0, $1BfjW$useMemo)(function () {\n      return columnLayout.splitColumnsIntoControlledAndUncontrolled(state.collection.columns);\n    }, [state.collection.columns, columnLayout]),\n    _ref12 = _slicedToArray(_ref11, 2),\n    controlledColumns = _ref12[0],\n    uncontrolledColumns = _ref12[1]; // uncontrolled column widths\n  var _ref13 = (0, $1BfjW$useState)(function () {\n      return columnLayout.getInitialUncontrolledWidths(uncontrolledColumns);\n    }),\n    _ref14 = _slicedToArray(_ref13, 2),\n    uncontrolledWidths = _ref14[0],\n    setUncontrolledWidths = _ref14[1]; // combine columns back into one map that maintains same order as the columns\n  var colWidths = (0, $1BfjW$useMemo)(function () {\n    return columnLayout.recombineColumns(state.collection.columns, uncontrolledWidths, uncontrolledColumns, controlledColumns);\n  }, [state.collection.columns, uncontrolledWidths, uncontrolledColumns, controlledColumns, columnLayout]);\n  var startResize = (0, $1BfjW$useCallback)(function (key) {\n    setResizingColumn(key);\n  }, [setResizingColumn]);\n  var updateResizedColumns = (0, $1BfjW$useCallback)(function (key, width) {\n    var newControlled = new Map(Array.from(controlledColumns).map(function (_ref15) {\n      var _ref16 = _slicedToArray(_ref15, 2),\n        key = _ref16[0],\n        entry = _ref16[1];\n      return [key, entry.props.width];\n    }));\n    var newSizes = columnLayout.resizeColumnWidth(tableWidth, state.collection, newControlled, uncontrolledWidths, key, width);\n    var map = new Map(Array.from(uncontrolledColumns).map(function (_ref17) {\n      var _ref18 = _slicedToArray(_ref17, 1),\n        key = _ref18[0];\n      return [key, newSizes.get(key)];\n    }));\n    map.set(key, width);\n    setUncontrolledWidths(map);\n    return newSizes;\n  }, [controlledColumns, uncontrolledColumns, setUncontrolledWidths, tableWidth, columnLayout, state.collection, uncontrolledWidths]);\n  var endResize = (0, $1BfjW$useCallback)(function () {\n    setResizingColumn(null);\n  }, [setResizingColumn]);\n  (0, $1BfjW$useMemo)(function () {\n    return columnLayout.buildColumnWidths(tableWidth, state.collection, colWidths);\n  }, [tableWidth, state.collection, colWidths, columnLayout]);\n  return (0, $1BfjW$useMemo)(function () {\n    return {\n      resizingColumn: resizingColumn,\n      updateResizedColumns: updateResizedColumns,\n      startResize: startResize,\n      endResize: endResize,\n      getColumnWidth: function getColumnWidth(key) {\n        return columnLayout.getColumnWidth(key);\n      },\n      getColumnMinWidth: function getColumnMinWidth(key) {\n        return columnLayout.getColumnMinWidth(key);\n      },\n      getColumnMaxWidth: function getColumnMaxWidth(key) {\n        return columnLayout.getColumnMaxWidth(key);\n      },\n      tableState: state\n    };\n  }, [columnLayout, resizingColumn, updateResizedColumns, startResize, endResize, state]);\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nvar $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY = \"row-header-column-\" + Math.random().toString(36).slice(2);\nvar $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY_DRAG = \"row-header-column-\" + Math.random().toString(36).slice(2);\nwhile ($788781baa30117fa$var$ROW_HEADER_COLUMN_KEY === $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY_DRAG) $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY_DRAG = \"row-header-column-\" + Math.random().toString(36).slice(2);\nfunction $788781baa30117fa$export$7c127db850d4e81e(keyMap, columnNodes) {\n  if (columnNodes.length === 0) return [];\n  var columns = [];\n  var seen = new Map();\n  var _iterator = _createForOfIteratorHelper(columnNodes),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _column = _step.value;\n      var parentKey = _column.parentKey;\n      var col = [_column];\n      while (parentKey) {\n        var parent = keyMap.get(parentKey);\n        if (!parent) break;\n        // If we've already seen this parent, than it is shared\n        // with a previous column. If the current column is taller\n        // than the previous column, than we need to shift the parent\n        // in the previous column so it's level with the current column.\n        if (seen.has(parent)) {\n          parent.colspan++;\n          var _seen$get = seen.get(parent),\n            _column2 = _seen$get.column,\n            index = _seen$get.index;\n          if (index > col.length) break;\n          for (var _i3 = index; _i3 < col.length; _i3++) _column2.splice(_i3, 0, null);\n          // Adjust shifted indices\n          for (var _i4 = col.length; _i4 < _column2.length; _i4++)\n          // eslint-disable-next-line max-depth\n          if (_column2[_i4] && seen.has(_column2[_i4])) seen.get(_column2[_i4]).index = _i4;\n        } else {\n          parent.colspan = 1;\n          col.push(parent);\n          seen.set(parent, {\n            column: col,\n            index: col.length - 1\n          });\n        }\n        parentKey = parent.parentKey;\n      }\n      columns.push(col);\n      _column.index = columns.length - 1;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var maxLength = Math.max.apply(Math, _toConsumableArray(columns.map(function (c) {\n    return c.length;\n  })));\n  var headerRows = Array(maxLength).fill(0).map(function () {\n    return [];\n  });\n  // Convert columns into rows.\n  var colIndex = 0;\n  for (var _i = 0, _columns = columns; _i < _columns.length; _i++) {\n    var column = _columns[_i];\n    var _i2 = maxLength - 1;\n    var _iterator2 = _createForOfIteratorHelper(column),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var item = _step2.value;\n        if (item) {\n          // Fill the space up until the current column with a placeholder\n          var row = headerRows[_i2];\n          var rowLength = row.reduce(function (p, c) {\n            return p + c.colspan;\n          }, 0);\n          if (rowLength < colIndex) {\n            var placeholder = {\n              type: \"placeholder\",\n              key: \"placeholder-\" + item.key,\n              colspan: colIndex - rowLength,\n              index: rowLength,\n              value: null,\n              rendered: null,\n              level: _i2,\n              hasChildNodes: false,\n              childNodes: [],\n              textValue: null\n            };\n            // eslint-disable-next-line max-depth\n            if (row.length > 0) {\n              row[row.length - 1].nextKey = placeholder.key;\n              placeholder.prevKey = row[row.length - 1].key;\n            }\n            row.push(placeholder);\n          }\n          if (row.length > 0) {\n            row[row.length - 1].nextKey = item.key;\n            item.prevKey = row[row.length - 1].key;\n          }\n          item.level = _i2;\n          item.colIndex = colIndex;\n          row.push(item);\n        }\n        _i2--;\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    colIndex++;\n  }\n  // Add placeholders at the end of each row that is shorter than the maximum\n  var i = 0;\n  var _iterator3 = _createForOfIteratorHelper(headerRows),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _row = _step3.value;\n      var _rowLength = _row.reduce(function (p, c) {\n        return p + c.colspan;\n      }, 0);\n      if (_rowLength < columnNodes.length) {\n        var _placeholder = {\n          type: \"placeholder\",\n          key: \"placeholder-\" + _row[_row.length - 1].key,\n          colspan: columnNodes.length - _rowLength,\n          index: _rowLength,\n          value: null,\n          rendered: null,\n          level: i,\n          hasChildNodes: false,\n          childNodes: [],\n          textValue: null,\n          prevKey: _row[_row.length - 1].key\n        };\n        _row.push(_placeholder);\n      }\n      i++;\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  return headerRows.map(function (childNodes, index) {\n    var row = {\n      type: \"headerrow\",\n      key: \"headerrow-\" + index,\n      index: index,\n      value: null,\n      rendered: null,\n      level: 0,\n      hasChildNodes: true,\n      childNodes: childNodes,\n      textValue: null\n    };\n    return row;\n  });\n}\nvar $788781baa30117fa$export$596e1b2e2cf93690 = /*#__PURE__*/function (_ref19) {\n  _inherits($788781baa30117fa$export$596e1b2e2cf93690, _ref19);\n  _createClass($788781baa30117fa$export$596e1b2e2cf93690, [{\n    key: Symbol.iterator,\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {\n      return _regeneratorRuntime().wrap(function value$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            return _context.delegateYield(this.body.childNodes, \"t0\", 1);\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, value, this);\n    })\n  }, {\n    key: \"getKeys\",\n    value: function getKeys() {\n      return this.keyMap.keys();\n    }\n  }, {\n    key: \"getKeyBefore\",\n    value: function getKeyBefore(key) {\n      var node = this.keyMap.get(key);\n      return node ? node.prevKey : null;\n    }\n  }, {\n    key: \"getKeyAfter\",\n    value: function getKeyAfter(key) {\n      var node = this.keyMap.get(key);\n      return node ? node.nextKey : null;\n    }\n  }, {\n    key: \"getFirstKey\",\n    value: function getFirstKey() {\n      var _getFirstItem;\n      return (_getFirstItem = (0, $1BfjW$getFirstItem)(this.body.childNodes)) === null || _getFirstItem === void 0 ? void 0 : _getFirstItem.key;\n    }\n  }, {\n    key: \"getLastKey\",\n    value: function getLastKey() {\n      var _getLastItem;\n      return (_getLastItem = (0, $1BfjW$getLastItem)(this.body.childNodes)) === null || _getLastItem === void 0 ? void 0 : _getLastItem.key;\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(key) {\n      return this.keyMap.get(key);\n    }\n  }, {\n    key: \"at\",\n    value: function at(idx) {\n      var keys = _toConsumableArray(this.getKeys());\n      return this.getItem(keys[idx]);\n    }\n  }, {\n    key: \"getTextValue\",\n    value: function getTextValue(key) {\n      var row = this.getItem(key);\n      if (!row) return \"\";\n      // If the row has a textValue, use that.\n      if (row.textValue) return row.textValue;\n      // Otherwise combine the text of each of the row header columns.\n      var rowHeaderColumnKeys = this.rowHeaderColumnKeys;\n      if (rowHeaderColumnKeys) {\n        var text = [];\n        var _iterator4 = _createForOfIteratorHelper(row.childNodes),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var cell = _step4.value;\n            var column = this.columns[cell.index];\n            if (rowHeaderColumnKeys.has(column.key) && cell.textValue) text.push(cell.textValue);\n            if (text.length === rowHeaderColumnKeys.size) break;\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n        return text.join(\" \");\n      }\n      return \"\";\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._size;\n    }\n  }]);\n  function $788781baa30117fa$export$596e1b2e2cf93690(nodes, prev, opts) {\n    var _this5;\n    _classCallCheck(this, $788781baa30117fa$export$596e1b2e2cf93690);\n    var rowHeaderColumnKeys = new Set();\n    var body;\n    var columns = [];\n    // Add cell for selection checkboxes if needed.\n    if (opts === null || opts === void 0 ? void 0 : opts.showSelectionCheckboxes) {\n      var rowHeaderColumn = {\n        type: \"column\",\n        key: $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY,\n        value: null,\n        textValue: \"\",\n        level: 0,\n        index: (opts === null || opts === void 0 ? void 0 : opts.showDragButtons) ? 1 : 0,\n        hasChildNodes: false,\n        rendered: null,\n        childNodes: [],\n        props: {\n          isSelectionCell: true\n        }\n      };\n      columns.unshift(rowHeaderColumn);\n    }\n    // Add cell for drag buttons if needed.\n    if (opts === null || opts === void 0 ? void 0 : opts.showDragButtons) {\n      var _rowHeaderColumn = {\n        type: \"column\",\n        key: $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY_DRAG,\n        value: null,\n        textValue: \"\",\n        level: 0,\n        index: 0,\n        hasChildNodes: false,\n        rendered: null,\n        childNodes: [],\n        props: {\n          isDragButtonCell: true\n        }\n      };\n      columns.unshift(_rowHeaderColumn);\n    }\n    var rows = [];\n    var columnKeyMap = new Map();\n    var visit = function visit(node) {\n      switch (node.type) {\n        case \"body\":\n          body = node;\n          break;\n        case \"column\":\n          columnKeyMap.set(node.key, node);\n          if (!node.hasChildNodes) {\n            columns.push(node);\n            if (node.props.isRowHeader) rowHeaderColumnKeys.add(node.key);\n          }\n          break;\n        case \"item\":\n          rows.push(node);\n          return;\n        // do not go into childNodes\n      }\n      var _iterator5 = _createForOfIteratorHelper(node.childNodes),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var child = _step5.value;\n          visit(child);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    };\n    var _iterator6 = _createForOfIteratorHelper(nodes),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var node = _step6.value;\n        visit(node);\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    var headerRows = $788781baa30117fa$export$7c127db850d4e81e(columnKeyMap, columns);\n    headerRows.forEach(function (row, i) {\n      return rows.splice(i, 0, row);\n    });\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf($788781baa30117fa$export$596e1b2e2cf93690).call(this, {\n      columnCount: columns.length,\n      items: rows,\n      visitNode: function visitNode(node) {\n        node.column = columns[node.index];\n        return node;\n      }\n    }));\n    _this5._size = 0;\n    _this5.columns = columns;\n    _this5.rowHeaderColumnKeys = rowHeaderColumnKeys;\n    _this5.body = body;\n    _this5.headerRows = headerRows;\n    _this5._size = _toConsumableArray(body.childNodes).length;\n    // Default row header column to the first one.\n    if (_this5.rowHeaderColumnKeys.size === 0) {\n      if (opts === null || opts === void 0 ? void 0 : opts.showSelectionCheckboxes) {\n        if (opts === null || opts === void 0 ? void 0 : opts.showDragButtons) _this5.rowHeaderColumnKeys.add(_this5.columns[2].key);else _this5.rowHeaderColumnKeys.add(_this5.columns[1].key);\n      } else _this5.rowHeaderColumnKeys.add(_this5.columns[0].key);\n    }\n    return _this5;\n  }\n  return $788781baa30117fa$export$596e1b2e2cf93690;\n}((0, $1BfjW$GridCollection));\nvar $4a0dd036d492cee4$var$OPPOSITE_SORT_DIRECTION = {\n  ascending: \"descending\",\n  descending: \"ascending\"\n};\nfunction $4a0dd036d492cee4$export$907bcc6c48325fd6(props) {\n  var _ref20 = (0, $1BfjW$useState)(false),\n    _ref21 = _slicedToArray(_ref20, 2),\n    isKeyboardNavigationDisabled = _ref21[0],\n    setKeyboardNavigationDisabled = _ref21[1];\n  var _props$selectionMode = props.selectionMode,\n    selectionMode = _props$selectionMode === void 0 ? \"none\" : _props$selectionMode,\n    showSelectionCheckboxes = props.showSelectionCheckboxes,\n    showDragButtons = props.showDragButtons;\n  var context = (0, $1BfjW$useMemo)(function () {\n    return {\n      showSelectionCheckboxes: showSelectionCheckboxes && selectionMode !== \"none\",\n      showDragButtons: showDragButtons,\n      selectionMode: selectionMode,\n      columns: []\n    };\n  }, [props.children, showSelectionCheckboxes, selectionMode, showDragButtons]);\n  var collection = (0, $1BfjW$useCollection)(props, (0, $1BfjW$useCallback)(function (nodes) {\n    return new (0, $788781baa30117fa$export$596e1b2e2cf93690)(nodes, null, context);\n  }, [context]), context);\n  var _ref22 = (0, $1BfjW$useGridState)(_objectSpread({}, props, {\n      collection: collection,\n      disabledBehavior: props.disabledBehavior || \"selection\"\n    })),\n    disabledKeys = _ref22.disabledKeys,\n    selectionManager = _ref22.selectionManager;\n  return {\n    collection: collection,\n    disabledKeys: disabledKeys,\n    selectionManager: selectionManager,\n    showSelectionCheckboxes: props.showSelectionCheckboxes || false,\n    sortDescriptor: props.sortDescriptor,\n    isKeyboardNavigationDisabled: collection.size === 0 || isKeyboardNavigationDisabled,\n    setKeyboardNavigationDisabled: setKeyboardNavigationDisabled,\n    sort: function sort(columnKey, direction) {\n      var _props_sortDescriptor;\n      props.onSortChange({\n        column: columnKey,\n        direction: direction !== null && direction !== void 0 ? direction : ((_props_sortDescriptor = props.sortDescriptor) === null || _props_sortDescriptor === void 0 ? void 0 : _props_sortDescriptor.column) === columnKey ? $4a0dd036d492cee4$var$OPPOSITE_SORT_DIRECTION[props.sortDescriptor.direction] : \"ascending\"\n      });\n    }\n  };\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $312ae3b56a94a86e$var$TableHeader(props) {\n  return null;\n}\n$312ae3b56a94a86e$var$TableHeader.getCollectionNode = /*#__PURE__*/_regeneratorRuntime().mark(function getCollectionNode(props, context) {\n  var children, columns, _iterator7, _step7, column, _columns2;\n  return _regeneratorRuntime().wrap(function getCollectionNode$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        children = props.children, columns = props.columns; // Clear columns so they aren't double added in strict mode.\n        context.columns = [];\n        if (!(typeof children === \"function\")) {\n          _context2.next = 24;\n          break;\n        }\n        if (columns) {\n          _context2.next = 5;\n          break;\n        }\n        throw new Error(\"props.children was a function but props.columns is missing\");\n      case 5:\n        _iterator7 = _createForOfIteratorHelper(columns);\n        _context2.prev = 6;\n        _iterator7.s();\n      case 8:\n        if ((_step7 = _iterator7.n()).done) {\n          _context2.next = 14;\n          break;\n        }\n        column = _step7.value;\n        _context2.next = 12;\n        return {\n          type: \"column\",\n          value: column,\n          renderer: children\n        };\n      case 12:\n        _context2.next = 8;\n        break;\n      case 14:\n        _context2.next = 19;\n        break;\n      case 16:\n        _context2.prev = 16;\n        _context2.t0 = _context2[\"catch\"](6);\n        _iterator7.e(_context2.t0);\n      case 19:\n        _context2.prev = 19;\n        _iterator7.f();\n        return _context2.finish(19);\n      case 22:\n        _context2.next = 27;\n        break;\n      case 24:\n        _columns2 = [];\n        (0, $1BfjW$react).Children.forEach(children, function (column) {\n          _columns2.push({\n            type: \"column\",\n            element: column\n          });\n        });\n        return _context2.delegateYield(_columns2, \"t1\", 27);\n      case 27:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, getCollectionNode, null, [[6, 16, 19, 22]]);\n});\n/**\n * A TableHeader is a container for the Column elements in a Table. Columns can be statically defined\n * as children, or generated dynamically using a function based on the data passed to the `columns` prop.\n */ // We don't want getCollectionNode to show up in the type definition\nvar $312ae3b56a94a86e$export$f850895b287ef28e = $312ae3b56a94a86e$var$TableHeader;\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $4ae5314bf50db1a3$var$TableBody(props) {\n  return null;\n}\n$4ae5314bf50db1a3$var$TableBody.getCollectionNode = /*#__PURE__*/_regeneratorRuntime().mark(function getCollectionNode(props) {\n  var children, items;\n  return _regeneratorRuntime().wrap(function getCollectionNode$(_context4) {\n    while (1) switch (_context4.prev = _context4.next) {\n      case 0:\n        children = props.children, items = props.items;\n        _context4.next = 3;\n        return {\n          type: \"body\",\n          hasChildNodes: true,\n          props: props,\n          childNodes: /*#__PURE__*/_regeneratorRuntime().mark(function childNodes() {\n            var _iterator8, _step8, item, _items;\n            return _regeneratorRuntime().wrap(function childNodes$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (!(typeof children === \"function\")) {\n                    _context3.next = 22;\n                    break;\n                  }\n                  if (items) {\n                    _context3.next = 3;\n                    break;\n                  }\n                  throw new Error(\"props.children was a function but props.items is missing\");\n                case 3:\n                  _iterator8 = _createForOfIteratorHelper(items);\n                  _context3.prev = 4;\n                  _iterator8.s();\n                case 6:\n                  if ((_step8 = _iterator8.n()).done) {\n                    _context3.next = 12;\n                    break;\n                  }\n                  item = _step8.value;\n                  _context3.next = 10;\n                  return {\n                    type: \"item\",\n                    value: item,\n                    renderer: children\n                  };\n                case 10:\n                  _context3.next = 6;\n                  break;\n                case 12:\n                  _context3.next = 17;\n                  break;\n                case 14:\n                  _context3.prev = 14;\n                  _context3.t0 = _context3[\"catch\"](4);\n                  _iterator8.e(_context3.t0);\n                case 17:\n                  _context3.prev = 17;\n                  _iterator8.f();\n                  return _context3.finish(17);\n                case 20:\n                  _context3.next = 25;\n                  break;\n                case 22:\n                  _items = [];\n                  (0, $1BfjW$react).Children.forEach(children, function (item) {\n                    _items.push({\n                      type: \"item\",\n                      element: item\n                    });\n                  });\n                  return _context3.delegateYield(_items, \"t1\", 25);\n                case 25:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }, childNodes, null, [[4, 14, 17, 20]]);\n          })\n        };\n      case 3:\n      case \"end\":\n        return _context4.stop();\n    }\n  }, getCollectionNode);\n});\n/**\n * A TableBody is a container for the Row elements of a Table. Rows can be statically defined\n * as children, or generated dynamically using a function based on the data passed to the `items` prop.\n */ // We don't want getCollectionNode to show up in the type definition\nvar $4ae5314bf50db1a3$export$76ccd210b9029917 = $4ae5314bf50db1a3$var$TableBody;\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $1cd244557c2f97d5$var$Column(props) {\n  return null;\n}\n$1cd244557c2f97d5$var$Column.getCollectionNode = /*#__PURE__*/_regeneratorRuntime().mark(function getCollectionNode(props, context) {\n  var title, children, childColumns, rendered, textValue, fullNodes, updateContext;\n  return _regeneratorRuntime().wrap(function getCollectionNode$(_context6) {\n    while (1) switch (_context6.prev = _context6.next) {\n      case 0:\n        title = props.title, children = props.children, childColumns = props.childColumns;\n        rendered = title || children;\n        textValue = props.textValue || (typeof rendered === \"string\" ? rendered : \"\") || props[\"aria-label\"];\n        _context6.next = 5;\n        return {\n          type: \"column\",\n          hasChildNodes: !!childColumns || title && (0, $1BfjW$react).Children.count(children) > 0,\n          rendered: rendered,\n          textValue: textValue,\n          props: props,\n          childNodes: /*#__PURE__*/_regeneratorRuntime().mark(function childNodes() {\n            var _iterator9, _step9, child, _childColumns;\n            return _regeneratorRuntime().wrap(function childNodes$(_context5) {\n              while (1) switch (_context5.prev = _context5.next) {\n                case 0:\n                  if (!childColumns) {\n                    _context5.next = 20;\n                    break;\n                  }\n                  _iterator9 = _createForOfIteratorHelper(childColumns);\n                  _context5.prev = 2;\n                  _iterator9.s();\n                case 4:\n                  if ((_step9 = _iterator9.n()).done) {\n                    _context5.next = 10;\n                    break;\n                  }\n                  child = _step9.value;\n                  _context5.next = 8;\n                  return {\n                    type: \"column\",\n                    value: child\n                  };\n                case 8:\n                  _context5.next = 4;\n                  break;\n                case 10:\n                  _context5.next = 15;\n                  break;\n                case 12:\n                  _context5.prev = 12;\n                  _context5.t0 = _context5[\"catch\"](2);\n                  _iterator9.e(_context5.t0);\n                case 15:\n                  _context5.prev = 15;\n                  _iterator9.f();\n                  return _context5.finish(15);\n                case 18:\n                  _context5.next = 24;\n                  break;\n                case 20:\n                  if (!title) {\n                    _context5.next = 24;\n                    break;\n                  }\n                  _childColumns = [];\n                  (0, $1BfjW$react).Children.forEach(children, function (child) {\n                    _childColumns.push({\n                      type: \"column\",\n                      element: child\n                    });\n                  });\n                  return _context5.delegateYield(_childColumns, \"t1\", 24);\n                case 24:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }, childNodes, null, [[2, 12, 15, 18]]);\n          }),\n          shouldInvalidate: function shouldInvalidate(newContext) {\n            // This is a bit of a hack, but it works.\n            // If this method is called, then there's a cached version of this node available.\n            // But, we need to keep the list of columns in the new context up to date.\n            updateContext(newContext);\n            return false;\n          }\n        };\n      case 5:\n        fullNodes = _context6.sent;\n        updateContext = function updateContext(context) {\n          // register leaf columns on the context so that <Row> can access them\n          var _iterator10 = _createForOfIteratorHelper(fullNodes),\n            _step10;\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var node = _step10.value;\n              if (!node.hasChildNodes) context.columns.push(node);\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n        };\n        updateContext(context);\n      case 8:\n      case \"end\":\n        return _context6.stop();\n    }\n  }, getCollectionNode);\n});\n/**\n * A Column represents a field of each item within a Table. Columns may also contain nested\n * Column elements to represent column groups. Nested columns can be statically defined as\n * children, or dynamically generated using a function based on the `childColumns` prop.\n */ // We don't want getCollectionNode to show up in the type definition\nvar $1cd244557c2f97d5$export$816b5d811295e6bc = $1cd244557c2f97d5$var$Column;\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $70d70eb16ea48428$var$Row(props) {\n  return null;\n}\n$70d70eb16ea48428$var$Row.getCollectionNode = /*#__PURE__*/_regeneratorRuntime().mark(function getCollectionNode(props, context) {\n  var children, textValue, UNSTABLE_childItems;\n  return _regeneratorRuntime().wrap(function getCollectionNode$(_context8) {\n    while (1) switch (_context8.prev = _context8.next) {\n      case 0:\n        children = props.children, textValue = props.textValue, UNSTABLE_childItems = props.UNSTABLE_childItems;\n        _context8.next = 3;\n        return {\n          type: \"item\",\n          props: props,\n          textValue: textValue,\n          \"aria-label\": props[\"aria-label\"],\n          hasChildNodes: true,\n          childNodes: /*#__PURE__*/_regeneratorRuntime().mark(function childNodes() {\n            var _iterator11, _step11, column, _iterator12, _step12, child, cells, childRows;\n            return _regeneratorRuntime().wrap(function childNodes$(_context7) {\n              while (1) switch (_context7.prev = _context7.next) {\n                case 0:\n                  if (!context.showDragButtons) {\n                    _context7.next = 3;\n                    break;\n                  }\n                  _context7.next = 3;\n                  return {\n                    type: \"cell\",\n                    key: \"header-drag\",\n                    props: {\n                      isDragButtonCell: true\n                    }\n                  };\n                case 3:\n                  if (!(context.showSelectionCheckboxes && context.selectionMode !== \"none\")) {\n                    _context7.next = 6;\n                    break;\n                  }\n                  _context7.next = 6;\n                  return {\n                    type: \"cell\",\n                    key: \"header\",\n                    props: {\n                      isSelectionCell: true\n                    }\n                  };\n                case 6:\n                  if (!(typeof children === \"function\")) {\n                    _context7.next = 44;\n                    break;\n                  }\n                  _iterator11 = _createForOfIteratorHelper(context.columns);\n                  _context7.prev = 8;\n                  _iterator11.s();\n                case 10:\n                  if ((_step11 = _iterator11.n()).done) {\n                    _context7.next = 16;\n                    break;\n                  }\n                  column = _step11.value;\n                  _context7.next = 14;\n                  return {\n                    type: \"cell\",\n                    element: children(column.key),\n                    key: column.key // this is combined with the row key by CollectionBuilder\n                  };\n                case 14:\n                  _context7.next = 10;\n                  break;\n                case 16:\n                  _context7.next = 21;\n                  break;\n                case 18:\n                  _context7.prev = 18;\n                  _context7.t0 = _context7[\"catch\"](8);\n                  _iterator11.e(_context7.t0);\n                case 21:\n                  _context7.prev = 21;\n                  _iterator11.f();\n                  return _context7.finish(21);\n                case 24:\n                  if (!UNSTABLE_childItems) {\n                    _context7.next = 42;\n                    break;\n                  }\n                  _iterator12 = _createForOfIteratorHelper(UNSTABLE_childItems);\n                  _context7.prev = 26;\n                  _iterator12.s();\n                case 28:\n                  if ((_step12 = _iterator12.n()).done) {\n                    _context7.next = 34;\n                    break;\n                  }\n                  child = _step12.value;\n                  _context7.next = 32;\n                  return {\n                    type: \"item\",\n                    value: child\n                  };\n                case 32:\n                  _context7.next = 28;\n                  break;\n                case 34:\n                  _context7.next = 39;\n                  break;\n                case 36:\n                  _context7.prev = 36;\n                  _context7.t1 = _context7[\"catch\"](26);\n                  _iterator12.e(_context7.t1);\n                case 39:\n                  _context7.prev = 39;\n                  _iterator12.f();\n                  return _context7.finish(39);\n                case 42:\n                  _context7.next = 51;\n                  break;\n                case 44:\n                  cells = [];\n                  childRows = [];\n                  (0, $1BfjW$react).Children.forEach(children, function (node) {\n                    if (node.type === $70d70eb16ea48428$var$Row) {\n                      if (cells.length < context.columns.length) throw new Error(\"All of a Row's child Cells must be positioned before any child Rows.\");\n                      childRows.push({\n                        type: \"item\",\n                        element: node\n                      });\n                    } else cells.push({\n                      type: \"cell\",\n                      element: node\n                    });\n                  });\n                  if (!(cells.length !== context.columns.length)) {\n                    _context7.next = 49;\n                    break;\n                  }\n                  throw new Error(\"Cell count must match column count. Found \".concat(cells.length, \" cells and \").concat(context.columns.length, \" columns.\"));\n                case 49:\n                  return _context7.delegateYield(cells, \"t2\", 50);\n                case 50:\n                  return _context7.delegateYield(childRows, \"t3\", 51);\n                case 51:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }, childNodes, null, [[8, 18, 21, 24], [26, 36, 39, 42]]);\n          }),\n          shouldInvalidate: function shouldInvalidate(newContext) {\n            // Invalidate all rows if the columns changed.\n            return newContext.columns.length !== context.columns.length || newContext.columns.some(function (c, i) {\n              return c.key !== context.columns[i].key;\n            }) || newContext.showSelectionCheckboxes !== context.showSelectionCheckboxes || newContext.showDragButtons !== context.showDragButtons || newContext.selectionMode !== context.selectionMode;\n          }\n        };\n      case 3:\n      case \"end\":\n        return _context8.stop();\n    }\n  }, getCollectionNode);\n});\n/**\n * A Row represents a single item in a Table and contains Cell elements for each column.\n * Cells can be statically defined as children, or generated dynamically using a function\n * based on the columns defined in the TableHeader.\n */ // We don't want getCollectionNode to show up in the type definition\nvar $70d70eb16ea48428$export$b59bdbef9ce70de2 = $70d70eb16ea48428$var$Row;\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $941d1d9a6a28982a$var$Cell(props) {\n  return null;\n}\n$941d1d9a6a28982a$var$Cell.getCollectionNode = /*#__PURE__*/_regeneratorRuntime().mark(function getCollectionNode(props) {\n  var children, textValue;\n  return _regeneratorRuntime().wrap(function getCollectionNode$(_context9) {\n    while (1) switch (_context9.prev = _context9.next) {\n      case 0:\n        children = props.children;\n        textValue = props.textValue || (typeof children === \"string\" ? children : \"\") || props[\"aria-label\"] || \"\";\n        _context9.next = 4;\n        return {\n          type: \"cell\",\n          props: props,\n          rendered: children,\n          textValue: textValue,\n          \"aria-label\": props[\"aria-label\"],\n          hasChildNodes: false\n        };\n      case 4:\n      case \"end\":\n        return _context9.stop();\n    }\n  }, getCollectionNode);\n});\n/**\n * A Cell represents the value of a single Column within a Table Row.\n */ // We don't want getCollectionNode to show up in the type definition\nvar $941d1d9a6a28982a$export$f6f0c3fe4ec306ea = $941d1d9a6a28982a$var$Cell;\n\n/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $ee65a0057fd99531$export$34dfa8a1622185a4(props) {\n  var _props$selectionMode2 = props.selectionMode,\n    selectionMode = _props$selectionMode2 === void 0 ? \"none\" : _props$selectionMode2,\n    showSelectionCheckboxes = props.showSelectionCheckboxes,\n    showDragButtons = props.showDragButtons,\n    propExpandedKeys = props.UNSTABLE_expandedKeys,\n    propDefaultExpandedKeys = props.UNSTABLE_defaultExpandedKeys,\n    UNSTABLE_onExpandedChange = props.UNSTABLE_onExpandedChange,\n    children = props.children;\n  if (!(0, $1BfjW$tableNestedRows)()) throw new Error(\"Feature flag for table nested rows must be enabled to use useTreeGridState.\");\n  var _ref23 = (0, $1BfjW$useControlledState)(propExpandedKeys ? $ee65a0057fd99531$var$convertExpanded(propExpandedKeys) : undefined, propDefaultExpandedKeys ? $ee65a0057fd99531$var$convertExpanded(propDefaultExpandedKeys) : new Set(), UNSTABLE_onExpandedChange),\n    _ref24 = _slicedToArray(_ref23, 2),\n    expandedKeys = _ref24[0],\n    setExpandedKeys = _ref24[1];\n  var context = (0, $1BfjW$useMemo)(function () {\n    return {\n      showSelectionCheckboxes: showSelectionCheckboxes && selectionMode !== \"none\",\n      showDragButtons: showDragButtons,\n      selectionMode: selectionMode,\n      columns: []\n    };\n  }, [children, showSelectionCheckboxes, selectionMode, showDragButtons]);\n  var builder = (0, $1BfjW$useMemo)(function () {\n    return new (0, $1BfjW$CollectionBuilder)();\n  }, []);\n  var nodes = (0, $1BfjW$useMemo)(function () {\n    return builder.build({\n      children: children\n    }, context);\n  }, [builder, children, context]);\n  var treeGridCollection = (0, $1BfjW$useMemo)(function () {\n    return $ee65a0057fd99531$var$generateTreeGridCollection(nodes, {\n      showSelectionCheckboxes: showSelectionCheckboxes,\n      showDragButtons: showDragButtons,\n      expandedKeys: expandedKeys\n    });\n  }, [nodes, showSelectionCheckboxes, showDragButtons, expandedKeys]);\n  var onToggle = function onToggle(key) {\n    setExpandedKeys($ee65a0057fd99531$var$toggleKey(expandedKeys, key, treeGridCollection));\n  };\n  var collection = (0, $1BfjW$useMemo)(function () {\n    return new (0, $788781baa30117fa$export$596e1b2e2cf93690)(treeGridCollection.tableNodes, null, context);\n  }, [context, treeGridCollection.tableNodes]);\n  var tableState = (0, $4a0dd036d492cee4$export$907bcc6c48325fd6)(_objectSpread({}, props, {\n    collection: collection\n  }));\n  return _objectSpread({}, tableState, {\n    keyMap: treeGridCollection.keyMap,\n    userColumnCount: treeGridCollection.userColumnCount,\n    expandedKeys: expandedKeys,\n    toggleKey: onToggle\n  });\n}\nfunction $ee65a0057fd99531$var$toggleKey(currentExpandedKeys, key, collection) {\n  var updatedExpandedKeys;\n  if (currentExpandedKeys === \"all\") {\n    updatedExpandedKeys = new Set(collection.flattenedRows.filter(function (row) {\n      return row.props.UNSTABLE_childItems || row.props.children.length > collection.userColumnCount;\n    }).map(function (row) {\n      return row.key;\n    }));\n    updatedExpandedKeys.delete(key);\n  } else {\n    updatedExpandedKeys = new Set(currentExpandedKeys);\n    if (updatedExpandedKeys.has(key)) updatedExpandedKeys.delete(key);else updatedExpandedKeys.add(key);\n  }\n  return updatedExpandedKeys;\n}\nfunction $ee65a0057fd99531$var$convertExpanded(expanded) {\n  if (!expanded) return new Set();\n  return expanded === \"all\" ? \"all\" : new Set(expanded);\n}\nfunction $ee65a0057fd99531$var$generateTreeGridCollection(nodes, opts) {\n  var _opts$expandedKeys = opts.expandedKeys,\n    expandedKeys = _opts$expandedKeys === void 0 ? new Set() : _opts$expandedKeys;\n  var body;\n  var flattenedRows = [];\n  var columnCount = 0;\n  var userColumnCount = 0;\n  var originalColumns = [];\n  var keyMap = new Map();\n  if (opts === null || opts === void 0 ? void 0 : opts.showSelectionCheckboxes) columnCount++;\n  if (opts === null || opts === void 0 ? void 0 : opts.showDragButtons) columnCount++;\n  var topLevelRows = [];\n  var visit = function visit(node) {\n    switch (node.type) {\n      case \"body\":\n        body = node;\n        keyMap.set(body.key, body);\n        break;\n      case \"column\":\n        if (!node.hasChildNodes) userColumnCount++;\n        break;\n      case \"item\":\n        topLevelRows.push(node);\n        return;\n    }\n    var _iterator13 = _createForOfIteratorHelper(node.childNodes),\n      _step13;\n    try {\n      for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n        var child = _step13.value;\n        visit(child);\n      }\n    } catch (err) {\n      _iterator13.e(err);\n    } finally {\n      _iterator13.f();\n    }\n  };\n  var _iterator14 = _createForOfIteratorHelper(nodes),\n    _step14;\n  try {\n    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n      var node = _step14.value;\n      if (node.type === \"column\") originalColumns.push(node);\n      visit(node);\n    }\n  } catch (err) {\n    _iterator14.e(err);\n  } finally {\n    _iterator14.f();\n  }\n  columnCount += userColumnCount;\n  // Update each grid node in the treegrid table with values specific to a treegrid structure. Also store a set of flattened row nodes for TableCollection to consume\n  var globalRowCount = 0;\n  var visitNode = function visitNode(node, i) {\n    // Clone row node and its children so modifications to the node for treegrid specific values aren't applied on the nodes provided\n    // to TableCollection. Index, level, and parent keys are all changed to reflect a flattened row structure rather than the treegrid structure\n    // values automatically calculated via CollectionBuilder\n    if (node.type === \"item\") {\n      var _childNodes = [];\n      var _iterator15 = _createForOfIteratorHelper(node.childNodes),\n        _step15;\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var child = _step15.value;\n          if (child.type === \"cell\") {\n            var cellClone = _objectSpread({}, child);\n            if (cellClone.index + 1 === columnCount) cellClone.nextKey = null;\n            _childNodes.push(_objectSpread({}, cellClone));\n          }\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n      var clone = _objectSpread({}, node, {\n        childNodes: _childNodes,\n        parentKey: body.key,\n        level: 1,\n        index: globalRowCount++\n      });\n      flattenedRows.push(clone);\n    }\n    var newProps = {};\n    // Assign indexOfType to cells and rows for aria-posinset\n    if (node.type !== \"placeholder\" && node.type !== \"column\") newProps[\"indexOfType\"] = i;\n    // Use Object.assign instead of spread to preserve object reference for keyMap. Also ensures retrieving nodes\n    // via .childNodes returns the same object as the one found via keyMap look up\n    Object.assign(node, newProps);\n    keyMap.set(node.key, node);\n    var lastNode;\n    var rowIndex = 0;\n    var _iterator16 = _createForOfIteratorHelper(node.childNodes),\n      _step16;\n    try {\n      for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n        var _child = _step16.value;\n        if (!(_child.type === \"item\" && expandedKeys !== \"all\" && !expandedKeys.has(node.key))) {\n          if (_child.parentKey == null)\n            // if child is a cell/expanded row/column and the parent key isn't already established by the collection, match child node to parent row\n            _child.parentKey = node.key;\n          if (lastNode) {\n            lastNode.nextKey = _child.key;\n            _child.prevKey = lastNode.key;\n          } else _child.prevKey = null;\n          if (_child.type === \"item\") visitNode(_child, rowIndex++);else\n            // We enforce that the cells come before rows so can just reuse cell index\n            visitNode(_child, _child.index);\n          lastNode = _child;\n        }\n      }\n    } catch (err) {\n      _iterator16.e(err);\n    } finally {\n      _iterator16.f();\n    }\n    if (lastNode) lastNode.nextKey = null;\n  };\n  var last;\n  topLevelRows.forEach(function (node, i) {\n    visitNode(node, i);\n    if (last) {\n      last.nextKey = node.key;\n      node.prevKey = last.key;\n    } else node.prevKey = null;\n    last = node;\n  });\n  if (last) last.nextKey = null;\n  return {\n    keyMap: keyMap,\n    userColumnCount: userColumnCount,\n    flattenedRows: flattenedRows,\n    tableNodes: [].concat(originalColumns, [_objectSpread({}, body, {\n      childNodes: flattenedRows\n    })])\n  };\n}\nexport { $292bc4e09cd0eb62$export$cb895dcf85db1319 as useTableColumnResizeState, $4a0dd036d492cee4$export$907bcc6c48325fd6 as useTableState, $312ae3b56a94a86e$export$f850895b287ef28e as TableHeader, $4ae5314bf50db1a3$export$76ccd210b9029917 as TableBody, $1cd244557c2f97d5$export$816b5d811295e6bc as Column, $70d70eb16ea48428$export$b59bdbef9ce70de2 as Row, $941d1d9a6a28982a$export$f6f0c3fe4ec306ea as Cell, $6555104ff085bef4$re_export$Section as Section, $788781baa30117fa$export$596e1b2e2cf93690 as TableCollection, $788781baa30117fa$export$7c127db850d4e81e as buildHeaderRows, $a9e7ae544a4e41dd$export$7ff77a162970b30e as TableColumnLayout, $ee65a0057fd99531$export$34dfa8a1622185a4 as UNSTABLE_useTreeGridState };","map":null,"metadata":{},"sourceType":"module"}