{"ast":null,"code":"var _objectWithoutProperties = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectWithoutProperties\");\nvar _defineProperty = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/defineProperty\");\nvar _objectSpread = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nvar _slicedToArray = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nvar _classCallCheck = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar $aB6Cp$react = require(\"react\");\nvar $aB6Cp$reactariautils = require(\"@react-aria/utils\");\nvar $aB6Cp$reactariainteractions = require(\"@react-aria/interactions\");\nvar $aB6Cp$clsx = require(\"clsx\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n$parcel$export(module.exports, \"FocusScope\", function () {\n  return $a7a032acae3ddda9$export$20e40289641fbbb6;\n});\n$parcel$export(module.exports, \"useFocusManager\", function () {\n  return $a7a032acae3ddda9$export$10c5169755ce7bd7;\n});\n$parcel$export(module.exports, \"getFocusableTreeWalker\", function () {\n  return $a7a032acae3ddda9$export$2d6ec8fc375ceafa;\n});\n$parcel$export(module.exports, \"createFocusManager\", function () {\n  return $a7a032acae3ddda9$export$c5251b9e124bf29;\n});\n$parcel$export(module.exports, \"isElementInChildOfActiveScope\", function () {\n  return $a7a032acae3ddda9$export$1258395f99bf9cbf;\n});\n$parcel$export(module.exports, \"FocusRing\", function () {\n  return $dfd8c70b928eb1b3$export$1a38b4ad7f578e1d;\n});\n$parcel$export(module.exports, \"FocusableProvider\", function () {\n  return $fb504d83237fd6ac$export$13f3202a3e5ddd5;\n});\n$parcel$export(module.exports, \"useFocusable\", function () {\n  return $fb504d83237fd6ac$export$4c014de7c8940b4c;\n});\n$parcel$export(module.exports, \"useFocusRing\", function () {\n  return $581a96d6eb128c1b$export$4e328f61c538687f;\n});\n$parcel$export(module.exports, \"focusSafely\", function () {\n  return $1c7f9157d722357d$export$80f3e147d781571c;\n});\n$parcel$export(module.exports, \"useHasTabbableChild\", function () {\n  return $259c6413a286f2e6$export$eac1895992b9f3d6;\n});\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */ /*\n       * Copyright 2020 Adobe. All rights reserved.\n       * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n       * you may not use this file except in compliance with the License. You may obtain a copy\n       * of the License at http://www.apache.org/licenses/LICENSE-2.0\n       *\n       * Unless required by applicable law or agreed to in writing, software distributed under\n       * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n       * OF ANY KIND, either express or implied. See the License for the specific language\n       * governing permissions and limitations under the License.\n       */\n\nfunction $1c7f9157d722357d$export$80f3e147d781571c(element) {\n  // If the user is interacting with a virtual cursor, e.g. screen reader, then\n  // wait until after any animated transitions that are currently occurring on\n  // the page before shifting focus. This avoids issues with VoiceOver on iOS\n  // causing the page to scroll when moving focus if the element is transitioning\n  // from off the screen.\n  if ((0, $aB6Cp$reactariainteractions.getInteractionModality)() === \"virtual\") {\n    var lastFocusedElement = document.activeElement;\n    (0, $aB6Cp$reactariautils.runAfterTransition)(function () {\n      // If focus did not move and the element is still in the document, focus it.\n      if (document.activeElement === lastFocusedElement && document.contains(element)) (0, $aB6Cp$reactariautils.focusWithoutScrolling)(element);\n    });\n  } else (0, $aB6Cp$reactariautils.focusWithoutScrolling)(element);\n}\n\n/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $d5156037ad898a4d$var$isStyleVisible(element) {\n  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) return false;\n  var _element$style = element.style,\n    display = _element$style.display,\n    visibility = _element$style.visibility;\n  var isVisible = display !== \"none\" && visibility !== \"hidden\" && visibility !== \"collapse\";\n  if (isVisible) {\n    var getComputedStyle = element.ownerDocument.defaultView.getComputedStyle;\n    var _getComputedStyle = getComputedStyle(element),\n      computedDisplay = _getComputedStyle.display,\n      computedVisibility = _getComputedStyle.visibility;\n    isVisible = computedDisplay !== \"none\" && computedVisibility !== \"hidden\" && computedVisibility !== \"collapse\";\n  }\n  return isVisible;\n}\nfunction $d5156037ad898a4d$var$isAttributeVisible(element, childElement) {\n  return !element.hasAttribute(\"hidden\") && (element.nodeName === \"DETAILS\" && childElement && childElement.nodeName !== \"SUMMARY\" ? element.hasAttribute(\"open\") : true);\n}\nfunction $d5156037ad898a4d$export$e989c0fffaa6b27a(element, childElement) {\n  return element.nodeName !== \"#comment\" && $d5156037ad898a4d$var$isStyleVisible(element) && $d5156037ad898a4d$var$isAttributeVisible(element, childElement) && (!element.parentElement || $d5156037ad898a4d$export$e989c0fffaa6b27a(element.parentElement, element));\n}\nvar $a7a032acae3ddda9$var$FocusContext = /*#__PURE__*/(0, $parcel$interopDefault($aB6Cp$react)).createContext(null);\nvar $a7a032acae3ddda9$var$activeScope = null;\nfunction $a7a032acae3ddda9$export$20e40289641fbbb6(props) {\n  var children = props.children,\n    contain = props.contain,\n    restoreFocus = props.restoreFocus,\n    autoFocus = props.autoFocus;\n  var startRef = (0, $aB6Cp$react.useRef)();\n  var endRef = (0, $aB6Cp$react.useRef)();\n  var scopeRef = (0, $aB6Cp$react.useRef)([]);\n  var _ref = (0, $aB6Cp$react.useContext)($a7a032acae3ddda9$var$FocusContext) || {},\n    parentNode = _ref.parentNode; // Create a tree node here so we can add children to it even before it is added to the tree.\n  var node = (0, $aB6Cp$react.useMemo)(function () {\n    return new $a7a032acae3ddda9$var$TreeNode({\n      scopeRef: scopeRef\n    });\n  }, [scopeRef]);\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    // If a new scope mounts outside the active scope, (e.g. DialogContainer launched from a menu),\n    // use the active scope as the parent instead of the parent from context. Layout effects run bottom\n    // up, so if the parent is not yet added to the tree, don't do this. Only the outer-most FocusScope\n    // that is being added should get the activeScope as its parent.\n    var parent = parentNode || $a7a032acae3ddda9$export$d06fae2ee68b101e.root;\n    if ($a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(parent.scopeRef) && $a7a032acae3ddda9$var$activeScope && !$a7a032acae3ddda9$var$isAncestorScope($a7a032acae3ddda9$var$activeScope, parent.scopeRef)) {\n      var activeNode = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode($a7a032acae3ddda9$var$activeScope);\n      if (activeNode) parent = activeNode;\n    }\n    // Add the node to the parent, and to the tree.\n    parent.addChild(node);\n    $a7a032acae3ddda9$export$d06fae2ee68b101e.addNode(node);\n  }, [node, parentNode]);\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    var node = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n    node.contain = contain;\n  }, [contain]);\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    var node = startRef.current.nextSibling;\n    var nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n    scopeRef.current = nodes;\n  }, [children]);\n  $a7a032acae3ddda9$var$useActiveScopeTracker(scopeRef, restoreFocus, contain);\n  $a7a032acae3ddda9$var$useFocusContainment(scopeRef, contain);\n  $a7a032acae3ddda9$var$useRestoreFocus(scopeRef, restoreFocus, contain);\n  $a7a032acae3ddda9$var$useAutoFocus(scopeRef, autoFocus);\n  // this layout effect needs to run last so that focusScopeTree cleanup happens at the last moment possible\n  (0, $aB6Cp$react.useEffect)(function () {\n    if (scopeRef) {\n      var activeElement = document.activeElement;\n      var scope = null;\n      // In strict mode, active scope is incorrectly updated since cleanup will run even though scope hasn't unmounted.\n      // To fix this, we need to update the actual activeScope here\n      if ($a7a032acae3ddda9$var$isElementInScope(activeElement, scopeRef.current)) {\n        // Since useLayoutEffect runs for children first, we need to traverse the focusScope tree and find the bottom most scope that\n        // contains the active element and set that as the activeScope\n        var _iterator = _createForOfIteratorHelper($a7a032acae3ddda9$export$d06fae2ee68b101e.traverse()),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _node = _step.value;\n            if ($a7a032acae3ddda9$var$isElementInScope(activeElement, _node.scopeRef.current)) scope = _node;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        if (scope === $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef)) $a7a032acae3ddda9$var$activeScope = scope.scopeRef;\n      }\n      return function () {\n        // Scope may have been re-parented.\n        var parentScope = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef).parent.scopeRef;\n        // Restore the active scope on unmount if this scope or a descendant scope is active.\n        // Parent effect cleanups run before children, so we need to check if the\n        // parent scope actually still exists before restoring the active scope to it.\n        if ((scopeRef === $a7a032acae3ddda9$var$activeScope || $a7a032acae3ddda9$var$isAncestorScope(scopeRef, $a7a032acae3ddda9$var$activeScope)) && (!parentScope || $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(parentScope))) $a7a032acae3ddda9$var$activeScope = parentScope;\n        $a7a032acae3ddda9$export$d06fae2ee68b101e.removeTreeNode(scopeRef);\n      };\n    }\n  }, [scopeRef]);\n  var focusManager = (0, $aB6Cp$react.useMemo)(function () {\n    return $a7a032acae3ddda9$var$createFocusManagerForScope(scopeRef);\n  }, []);\n  var value = (0, $aB6Cp$react.useMemo)(function () {\n    return {\n      focusManager: focusManager,\n      parentNode: node\n    };\n  }, [node, focusManager]);\n  return /*#__PURE__*/(0, $parcel$interopDefault($aB6Cp$react)).createElement($a7a032acae3ddda9$var$FocusContext.Provider, {\n    value: value\n  }, /*#__PURE__*/(0, $parcel$interopDefault($aB6Cp$react)).createElement(\"span\", {\n    \"data-focus-scope-start\": true,\n    hidden: true,\n    ref: startRef\n  }), children, /*#__PURE__*/(0, $parcel$interopDefault($aB6Cp$react)).createElement(\"span\", {\n    \"data-focus-scope-end\": true,\n    hidden: true,\n    ref: endRef\n  }));\n}\nfunction $a7a032acae3ddda9$export$10c5169755ce7bd7() {\n  var _useContext;\n  return (_useContext = (0, $aB6Cp$react.useContext)($a7a032acae3ddda9$var$FocusContext)) === null || _useContext === void 0 ? void 0 : _useContext.focusManager;\n}\nfunction $a7a032acae3ddda9$var$createFocusManagerForScope(scopeRef) {\n  return {\n    focusNext: function focusNext() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var from = opts.from,\n        tabbable = opts.tabbable,\n        wrap = opts.wrap,\n        accept = opts.accept;\n      var node = from || document.activeElement;\n      var sentinel = scope[0].previousElementSibling;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa($a7a032acae3ddda9$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = $a7a032acae3ddda9$var$isElementInScope(node, scope) ? node : sentinel;\n      var nextNode = walker.nextNode();\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode();\n      }\n      if (nextNode) $a7a032acae3ddda9$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var from = opts.from,\n        tabbable = opts.tabbable,\n        wrap = opts.wrap,\n        accept = opts.accept;\n      var node = from || document.activeElement;\n      var sentinel = scope[scope.length - 1].nextElementSibling;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa($a7a032acae3ddda9$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = $a7a032acae3ddda9$var$isElementInScope(node, scope) ? node : sentinel;\n      var previousNode = walker.previousNode();\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode();\n      }\n      if (previousNode) $a7a032acae3ddda9$var$focusElement(previousNode, true);\n      return previousNode;\n    },\n    focusFirst: function focusFirst() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var tabbable = opts.tabbable,\n        accept = opts.accept;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa($a7a032acae3ddda9$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = scope[0].previousElementSibling;\n      var nextNode = walker.nextNode();\n      if (nextNode) $a7a032acae3ddda9$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusLast: function focusLast() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var tabbable = opts.tabbable,\n        accept = opts.accept;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa($a7a032acae3ddda9$var$getScopeRoot(scope), {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling;\n      var previousNode = walker.previousNode();\n      if (previousNode) $a7a032acae3ddda9$var$focusElement(previousNode, true);\n      return previousNode;\n    }\n  };\n}\nvar $a7a032acae3ddda9$var$focusableElements = [\"input:not([disabled]):not([type=hidden])\", \"select:not([disabled])\", \"textarea:not([disabled])\", \"button:not([disabled])\", \"a[href]\", \"area[href]\", \"summary\", \"iframe\", \"object\", \"embed\", \"audio[controls]\", \"video[controls]\", \"[contenteditable]\"];\nvar $a7a032acae3ddda9$var$FOCUSABLE_ELEMENT_SELECTOR = $a7a032acae3ddda9$var$focusableElements.join(\":not([hidden]),\") + \",[tabindex]:not([disabled]):not([hidden])\";\n$a7a032acae3ddda9$var$focusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nvar $a7a032acae3ddda9$var$TABBABLE_ELEMENT_SELECTOR = $a7a032acae3ddda9$var$focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\nfunction $a7a032acae3ddda9$var$getScopeRoot(scope) {\n  return scope[0].parentElement;\n}\nfunction $a7a032acae3ddda9$var$shouldContainFocus(scopeRef) {\n  var scope = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode($a7a032acae3ddda9$var$activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.contain) return false;\n    scope = scope.parent;\n  }\n  return true;\n}\nfunction $a7a032acae3ddda9$var$useFocusContainment(scopeRef, contain) {\n  var focusedNode = (0, $aB6Cp$react.useRef)();\n  var raf = (0, $aB6Cp$react.useRef)(null);\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    var scope = scopeRef.current;\n    if (!contain) {\n      // if contain was changed, then we should cancel any ongoing waits to pull focus back into containment\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n        raf.current = null;\n      }\n      return;\n    }\n    // Handle the Tab key to contain focus within the scope\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== \"Tab\" || e.altKey || e.ctrlKey || e.metaKey || !$a7a032acae3ddda9$var$shouldContainFocus(scopeRef)) return;\n      var focusedElement = document.activeElement;\n      var scope = scopeRef.current;\n      if (!$a7a032acae3ddda9$var$isElementInScope(focusedElement, scope)) return;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa($a7a032acae3ddda9$var$getScopeRoot(scope), {\n        tabbable: true\n      }, scope);\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      }\n      e.preventDefault();\n      if (nextElement) $a7a032acae3ddda9$var$focusElement(nextElement, true);\n    };\n    var onFocus = function onFocus(e) {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if ((!$a7a032acae3ddda9$var$activeScope || $a7a032acae3ddda9$var$isAncestorScope($a7a032acae3ddda9$var$activeScope, scopeRef)) && $a7a032acae3ddda9$var$isElementInScope(e.target, scopeRef.current)) {\n        $a7a032acae3ddda9$var$activeScope = scopeRef;\n        focusedNode.current = e.target;\n      } else if ($a7a032acae3ddda9$var$shouldContainFocus(scopeRef) && !$a7a032acae3ddda9$var$isElementInChildScope(e.target, scopeRef)) {\n        // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n        // restore focus to the previously focused node or the first tabbable element in the active scope.\n        if (focusedNode.current) focusedNode.current.focus();else if ($a7a032acae3ddda9$var$activeScope) $a7a032acae3ddda9$var$focusFirstInScope($a7a032acae3ddda9$var$activeScope.current);\n      } else if ($a7a032acae3ddda9$var$shouldContainFocus(scopeRef)) focusedNode.current = e.target;\n    };\n    var onBlur = function onBlur(e) {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      if (raf.current) cancelAnimationFrame(raf.current);\n      raf.current = requestAnimationFrame(function () {\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        if ($a7a032acae3ddda9$var$shouldContainFocus(scopeRef) && !$a7a032acae3ddda9$var$isElementInChildScope(document.activeElement, scopeRef)) {\n          $a7a032acae3ddda9$var$activeScope = scopeRef;\n          if (document.body.contains(e.target)) {\n            focusedNode.current = e.target;\n            focusedNode.current.focus();\n          } else if ($a7a032acae3ddda9$var$activeScope) $a7a032acae3ddda9$var$focusFirstInScope($a7a032acae3ddda9$var$activeScope.current);\n        }\n      });\n    };\n    document.addEventListener(\"keydown\", onKeyDown, false);\n    document.addEventListener(\"focusin\", onFocus, false);\n    scope.forEach(function (element) {\n      return element.addEventListener(\"focusin\", onFocus, false);\n    });\n    scope.forEach(function (element) {\n      return element.addEventListener(\"focusout\", onBlur, false);\n    });\n    return function () {\n      document.removeEventListener(\"keydown\", onKeyDown, false);\n      document.removeEventListener(\"focusin\", onFocus, false);\n      scope.forEach(function (element) {\n        return element.removeEventListener(\"focusin\", onFocus, false);\n      });\n      scope.forEach(function (element) {\n        return element.removeEventListener(\"focusout\", onBlur, false);\n      });\n    };\n  }, [scopeRef, contain]);\n  // This is a useLayoutEffect so it is guaranteed to run before our async synthetic blur\n  // eslint-disable-next-line arrow-body-style\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    return function () {\n      if (raf.current) cancelAnimationFrame(raf.current);\n    };\n  }, [raf]);\n}\nfunction $a7a032acae3ddda9$var$isElementInAnyScope(element) {\n  return $a7a032acae3ddda9$var$isElementInChildScope(element);\n}\nfunction $a7a032acae3ddda9$var$isElementInScope(element, scope) {\n  return scope.some(function (node) {\n    return node.contains(element);\n  });\n}\nfunction $a7a032acae3ddda9$var$isElementInChildScope(element) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  // If the element is within a top layer element (e.g. toasts), always allow moving focus there.\n  if (element instanceof Element && element.closest(\"[data-react-aria-top-layer]\")) return true;\n  // node.contains in isElementInScope covers child scopes that are also DOM children,\n  // but does not cover child scopes in portals.\n  var _iterator2 = _createForOfIteratorHelper($a7a032acae3ddda9$export$d06fae2ee68b101e.traverse($a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scope))),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var s = _step2.value.scopeRef;\n      if ($a7a032acae3ddda9$var$isElementInScope(element, s.current)) return true;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return false;\n}\nfunction $a7a032acae3ddda9$export$1258395f99bf9cbf(element) {\n  return $a7a032acae3ddda9$var$isElementInChildScope(element, $a7a032acae3ddda9$var$activeScope);\n}\nfunction $a7a032acae3ddda9$var$isAncestorScope(ancestor, scope) {\n  var _focusScopeTree_getTreeNode;\n  var parent = (_focusScopeTree_getTreeNode = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scope)) === null || _focusScopeTree_getTreeNode === void 0 ? void 0 : _focusScopeTree_getTreeNode.parent;\n  while (parent) {\n    if (parent.scopeRef === ancestor) return true;\n    parent = parent.parent;\n  }\n  return false;\n}\nfunction $a7a032acae3ddda9$var$focusElement(element) {\n  var scroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (element != null && !scroll) try {\n    (0, $1c7f9157d722357d$export$80f3e147d781571c)(element);\n  } catch (err) {\n    // ignore\n  } else if (element != null) try {\n    element.focus();\n  } catch (err) {\n    // ignore\n  }\n}\nfunction $a7a032acae3ddda9$var$focusFirstInScope(scope) {\n  var tabbable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var sentinel = scope[0].previousElementSibling;\n  var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa($a7a032acae3ddda9$var$getScopeRoot(scope), {\n    tabbable: tabbable\n  }, scope);\n  walker.currentNode = sentinel;\n  var nextNode = walker.nextNode();\n  // If the scope does not contain a tabbable element, use the first focusable element.\n  if (tabbable && !nextNode) {\n    walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa($a7a032acae3ddda9$var$getScopeRoot(scope), {\n      tabbable: false\n    }, scope);\n    walker.currentNode = sentinel;\n    nextNode = walker.nextNode();\n  }\n  $a7a032acae3ddda9$var$focusElement(nextNode);\n}\nfunction $a7a032acae3ddda9$var$useAutoFocus(scopeRef, autoFocus) {\n  var autoFocusRef = (0, $parcel$interopDefault($aB6Cp$react)).useRef(autoFocus);\n  (0, $aB6Cp$react.useEffect)(function () {\n    if (autoFocusRef.current) {\n      $a7a032acae3ddda9$var$activeScope = scopeRef;\n      if (!$a7a032acae3ddda9$var$isElementInScope(document.activeElement, $a7a032acae3ddda9$var$activeScope.current)) $a7a032acae3ddda9$var$focusFirstInScope(scopeRef.current);\n    }\n    autoFocusRef.current = false;\n  }, [scopeRef]);\n}\nfunction $a7a032acae3ddda9$var$useActiveScopeTracker(scopeRef, restore, contain) {\n  // tracks the active scope, in case restore and contain are both false.\n  // if either are true, this is tracked in useRestoreFocus or useFocusContainment.\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    if (restore || contain) return;\n    var scope = scopeRef.current;\n    var onFocus = function onFocus(e) {\n      var target = e.target;\n      if ($a7a032acae3ddda9$var$isElementInScope(target, scopeRef.current)) $a7a032acae3ddda9$var$activeScope = scopeRef;else if (!$a7a032acae3ddda9$var$isElementInAnyScope(target)) $a7a032acae3ddda9$var$activeScope = null;\n    };\n    document.addEventListener(\"focusin\", onFocus, false);\n    scope.forEach(function (element) {\n      return element.addEventListener(\"focusin\", onFocus, false);\n    });\n    return function () {\n      document.removeEventListener(\"focusin\", onFocus, false);\n      scope.forEach(function (element) {\n        return element.removeEventListener(\"focusin\", onFocus, false);\n      });\n    };\n  }, [scopeRef, restore, contain]);\n}\nfunction $a7a032acae3ddda9$var$shouldRestoreFocus(scopeRef) {\n  var scope = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode($a7a032acae3ddda9$var$activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.nodeToRestore) return false;\n    scope = scope.parent;\n  }\n  return (scope === null || scope === void 0 ? void 0 : scope.scopeRef) === scopeRef;\n}\nfunction $a7a032acae3ddda9$var$useRestoreFocus(scopeRef, restoreFocus, contain) {\n  // create a ref during render instead of useLayoutEffect so the active element is saved before a child with autoFocus=true mounts.\n  var nodeToRestoreRef = (0, $aB6Cp$react.useRef)(typeof document !== \"undefined\" ? document.activeElement : null);\n  // restoring scopes should all track if they are active regardless of contain, but contain already tracks it plus logic to contain the focus\n  // restoring-non-containing scopes should only care if they become active so they can perform the restore\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    var scope = scopeRef.current;\n    if (!restoreFocus || contain) return;\n    var onFocus = function onFocus() {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if ((!$a7a032acae3ddda9$var$activeScope || $a7a032acae3ddda9$var$isAncestorScope($a7a032acae3ddda9$var$activeScope, scopeRef)) && $a7a032acae3ddda9$var$isElementInScope(document.activeElement, scopeRef.current)) $a7a032acae3ddda9$var$activeScope = scopeRef;\n    };\n    document.addEventListener(\"focusin\", onFocus, false);\n    scope.forEach(function (element) {\n      return element.addEventListener(\"focusin\", onFocus, false);\n    });\n    return function () {\n      document.removeEventListener(\"focusin\", onFocus, false);\n      scope.forEach(function (element) {\n        return element.removeEventListener(\"focusin\", onFocus, false);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scopeRef, contain]);\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    if (!restoreFocus) return;\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== \"Tab\" || e.altKey || e.ctrlKey || e.metaKey || !$a7a032acae3ddda9$var$shouldContainFocus(scopeRef)) return;\n      var focusedElement = document.activeElement;\n      if (!$a7a032acae3ddda9$var$isElementInScope(focusedElement, scopeRef.current)) return;\n      var nodeToRestore = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore;\n      // Create a DOM tree walker that matches all tabbable elements\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(document.body, {\n        tabbable: true\n      });\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {\n        nodeToRestore = null;\n        $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore = null;\n      }\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !$a7a032acae3ddda9$var$isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode(); while ($a7a032acae3ddda9$var$isElementInScope(nextElement, scopeRef.current));\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) $a7a032acae3ddda9$var$focusElement(nextElement, true);else\n          // If there is no next element and the nodeToRestore isn't within a FocusScope (i.e. we are leaving the top level focus scope)\n          // then move focus to the body.\n          // Otherwise restore focus to the nodeToRestore (e.g menu within a popover -> tabbing to close the menu should move focus to menu trigger)\n          if (!$a7a032acae3ddda9$var$isElementInAnyScope(nodeToRestore)) focusedElement.blur();else $a7a032acae3ddda9$var$focusElement(nodeToRestore, true);\n      }\n    };\n    if (!contain) document.addEventListener(\"keydown\", onKeyDown, true);\n    return function () {\n      if (!contain) document.removeEventListener(\"keydown\", onKeyDown, true);\n    };\n  }, [scopeRef, restoreFocus, contain]);\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    if (!restoreFocus) return;\n    $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore = nodeToRestoreRef.current;\n    return function () {\n      var nodeToRestore = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore;\n      // if we already lost focus to the body and this was the active scope, then we should attempt to restore\n      if (restoreFocus && nodeToRestore && (\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      $a7a032acae3ddda9$var$isElementInScope(document.activeElement, scopeRef.current) || document.activeElement === document.body && $a7a032acae3ddda9$var$shouldRestoreFocus(scopeRef))) {\n        // freeze the focusScopeTree so it persists after the raf, otherwise during unmount nodes are removed from it\n        var clonedTree = $a7a032acae3ddda9$export$d06fae2ee68b101e.clone();\n        requestAnimationFrame(function () {\n          // Only restore focus if we've lost focus to the body, the alternative is that focus has been purposefully moved elsewhere\n          if (document.activeElement === document.body) {\n            // look up the tree starting with our scope to find a nodeToRestore still in the DOM\n            var treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.nodeToRestore && document.body.contains(treeNode.nodeToRestore)) {\n                $a7a032acae3ddda9$var$focusElement(treeNode.nodeToRestore);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n            // If no nodeToRestore was found, focus the first element in the nearest\n            // ancestor scope that is still in the tree.\n            treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.scopeRef && $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(treeNode.scopeRef)) {\n                $a7a032acae3ddda9$var$focusFirstInScope(treeNode.scopeRef.current, true);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus]);\n}\nfunction $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, opts, scope) {\n  var selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $a7a032acae3ddda9$var$TABBABLE_ELEMENT_SELECTOR : $a7a032acae3ddda9$var$FOCUSABLE_ELEMENT_SELECTOR;\n  var walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: function acceptNode(node) {\n      var _opts_from;\n      // Skip nodes inside the starting node.\n      if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node)) return NodeFilter.FILTER_REJECT;\n      if (node.matches(selector) && (0, $d5156037ad898a4d$export$e989c0fffaa6b27a)(node) && (!scope || $a7a032acae3ddda9$var$isElementInScope(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node))) return NodeFilter.FILTER_ACCEPT;\n      return NodeFilter.FILTER_SKIP;\n    }\n  });\n  if (opts === null || opts === void 0 ? void 0 : opts.from) walker.currentNode = opts.from;\n  return walker;\n}\nfunction $a7a032acae3ddda9$export$c5251b9e124bf29(ref) {\n  var defaultOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    focusNext: function focusNext() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var root = ref.current;\n      if (!root) return;\n      var from = opts.from,\n        _opts$tabbable = opts.tabbable,\n        tabbable = _opts$tabbable === void 0 ? defaultOptions.tabbable : _opts$tabbable,\n        _opts$wrap = opts.wrap,\n        wrap = _opts$wrap === void 0 ? defaultOptions.wrap : _opts$wrap,\n        _opts$accept = opts.accept,\n        accept = _opts$accept === void 0 ? defaultOptions.accept : _opts$accept;\n      var node = from || document.activeElement;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      if (root.contains(node)) walker.currentNode = node;\n      var nextNode = walker.nextNode();\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode();\n      }\n      if (nextNode) $a7a032acae3ddda9$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return;\n      var from = opts.from,\n        _opts$tabbable2 = opts.tabbable,\n        tabbable = _opts$tabbable2 === void 0 ? defaultOptions.tabbable : _opts$tabbable2,\n        _opts$wrap2 = opts.wrap,\n        wrap = _opts$wrap2 === void 0 ? defaultOptions.wrap : _opts$wrap2,\n        _opts$accept2 = opts.accept,\n        accept = _opts$accept2 === void 0 ? defaultOptions.accept : _opts$accept2;\n      var node = from || document.activeElement;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      if (root.contains(node)) walker.currentNode = node;else {\n        var next = $a7a032acae3ddda9$var$last(walker);\n        if (next) $a7a032acae3ddda9$var$focusElement(next, true);\n        return next;\n      }\n      var previousNode = walker.previousNode();\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        previousNode = $a7a032acae3ddda9$var$last(walker);\n      }\n      if (previousNode) $a7a032acae3ddda9$var$focusElement(previousNode, true);\n      return previousNode;\n    },\n    focusFirst: function focusFirst() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return;\n      var _opts$tabbable3 = opts.tabbable,\n        tabbable = _opts$tabbable3 === void 0 ? defaultOptions.tabbable : _opts$tabbable3,\n        _opts$accept3 = opts.accept,\n        accept = _opts$accept3 === void 0 ? defaultOptions.accept : _opts$accept3;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      var nextNode = walker.nextNode();\n      if (nextNode) $a7a032acae3ddda9$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusLast: function focusLast() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return;\n      var _opts$tabbable4 = opts.tabbable,\n        tabbable = _opts$tabbable4 === void 0 ? defaultOptions.tabbable : _opts$tabbable4,\n        _opts$accept4 = opts.accept,\n        accept = _opts$accept4 === void 0 ? defaultOptions.accept : _opts$accept4;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      var next = $a7a032acae3ddda9$var$last(walker);\n      if (next) $a7a032acae3ddda9$var$focusElement(next, true);\n      return next;\n    }\n  };\n}\nfunction $a7a032acae3ddda9$var$last(walker) {\n  var next;\n  var last;\n  do {\n    last = walker.lastChild();\n    if (last) next = last;\n  } while (last);\n  return next;\n}\nvar $a7a032acae3ddda9$var$Tree = /*#__PURE__*/function () {\n  \"use strict\";\n\n  _createClass($a7a032acae3ddda9$var$Tree, [{\n    key: \"getTreeNode\",\n    value: function getTreeNode(data) {\n      return this.fastMap.get(data);\n    }\n  }, {\n    key: \"addTreeNode\",\n    value: function addTreeNode(scopeRef, parent, nodeToRestore) {\n      var parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);\n      var node = new $a7a032acae3ddda9$var$TreeNode({\n        scopeRef: scopeRef\n      });\n      parentNode.addChild(node);\n      node.parent = parentNode;\n      this.fastMap.set(scopeRef, node);\n      if (nodeToRestore) node.nodeToRestore = nodeToRestore;\n    }\n  }, {\n    key: \"addNode\",\n    value: function addNode(node) {\n      this.fastMap.set(node.scopeRef, node);\n    }\n  }, {\n    key: \"removeTreeNode\",\n    value: function removeTreeNode(scopeRef) {\n      // never remove the root\n      if (scopeRef === null) return;\n      var node = this.fastMap.get(scopeRef);\n      var parentNode = node.parent;\n      // when we remove a scope, check if any sibling scopes are trying to restore focus to something inside the scope we're removing\n      // if we are, then replace the siblings restore with the restore from the scope we're removing\n      var _iterator3 = _createForOfIteratorHelper(this.traverse()),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var current = _step3.value;\n          if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef.current && $a7a032acae3ddda9$var$isElementInScope(current.nodeToRestore, node.scopeRef.current)) current.nodeToRestore = node.nodeToRestore;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      var children = node.children;\n      parentNode.removeChild(node);\n      if (children.size > 0) children.forEach(function (child) {\n        return parentNode.addChild(child);\n      });\n      this.fastMap.delete(node.scopeRef);\n    } // Pre Order Depth First\n  }, {\n    key: \"traverse\",\n    value: function traverse() {\n      var _this = this;\n      var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.root;\n      return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _iterator4, _step4, child;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(node.scopeRef != null)) {\n                _context.next = 3;\n                break;\n              }\n              _context.next = 3;\n              return node;\n            case 3:\n              if (!(node.children.size > 0)) {\n                _context.next = 20;\n                break;\n              }\n              _iterator4 = _createForOfIteratorHelper(node.children);\n              _context.prev = 5;\n              _iterator4.s();\n            case 7:\n              if ((_step4 = _iterator4.n()).done) {\n                _context.next = 12;\n                break;\n              }\n              child = _step4.value;\n              return _context.delegateYield(_this.traverse(child), \"t0\", 10);\n            case 10:\n              _context.next = 7;\n              break;\n            case 12:\n              _context.next = 17;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t1 = _context[\"catch\"](5);\n              _iterator4.e(_context.t1);\n            case 17:\n              _context.prev = 17;\n              _iterator4.f();\n              return _context.finish(17);\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[5, 14, 17, 20]]);\n      })();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var newTree = new $a7a032acae3ddda9$var$Tree();\n      var _iterator5 = _createForOfIteratorHelper(this.traverse()),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var node = _step5.value;\n          newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      return newTree;\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.fastMap.size;\n    }\n  }]);\n  function $a7a032acae3ddda9$var$Tree() {\n    _classCallCheck(this, $a7a032acae3ddda9$var$Tree);\n    this.fastMap = new Map();\n    this.root = new $a7a032acae3ddda9$var$TreeNode({\n      scopeRef: null\n    });\n    this.fastMap.set(null, this.root);\n  }\n  return $a7a032acae3ddda9$var$Tree;\n}();\nvar $a7a032acae3ddda9$var$TreeNode = /*#__PURE__*/function () {\n  \"use strict\";\n\n  _createClass($a7a032acae3ddda9$var$TreeNode, [{\n    key: \"addChild\",\n    value: function addChild(node) {\n      this.children.add(node);\n      node.parent = this;\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(node) {\n      this.children.delete(node);\n      node.parent = undefined;\n    }\n  }]);\n  function $a7a032acae3ddda9$var$TreeNode(props) {\n    _classCallCheck(this, $a7a032acae3ddda9$var$TreeNode);\n    this.children = new Set();\n    this.contain = false;\n    this.scopeRef = props.scopeRef;\n  }\n  return $a7a032acae3ddda9$var$TreeNode;\n}();\nvar $a7a032acae3ddda9$export$d06fae2ee68b101e = new $a7a032acae3ddda9$var$Tree();\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $581a96d6eb128c1b$export$4e328f61c538687f() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n    isTextInput = props.isTextInput,\n    within = props.within;\n  var state = (0, $aB6Cp$react.useRef)({\n    isFocused: false,\n    isFocusVisible: autoFocus || (0, $aB6Cp$reactariainteractions.isFocusVisible)()\n  });\n  var _ref2 = (0, $aB6Cp$react.useState)(false),\n    _ref3 = _slicedToArray(_ref2, 2),\n    isFocused = _ref3[0],\n    setFocused = _ref3[1];\n  var _ref4 = (0, $aB6Cp$react.useState)(function () {\n      return state.current.isFocused && state.current.isFocusVisible;\n    }),\n    _ref5 = _slicedToArray(_ref4, 2),\n    isFocusVisibleState = _ref5[0],\n    setFocusVisible = _ref5[1];\n  var updateState = (0, $aB6Cp$react.useCallback)(function () {\n    return setFocusVisible(state.current.isFocused && state.current.isFocusVisible);\n  }, []);\n  var onFocusChange = (0, $aB6Cp$react.useCallback)(function (isFocused) {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n  (0, $aB6Cp$reactariainteractions.useFocusVisibleListener)(function (isFocusVisible) {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {\n    isTextInput: isTextInput\n  });\n  var _ref6 = (0, $aB6Cp$reactariainteractions.useFocus)({\n      isDisabled: within,\n      onFocusChange: onFocusChange\n    }),\n    focusProps = _ref6.focusProps;\n  var _ref7 = (0, $aB6Cp$reactariainteractions.useFocusWithin)({\n      isDisabled: !within,\n      onFocusWithinChange: onFocusChange\n    }),\n    focusWithinProps = _ref7.focusWithinProps;\n  return {\n    isFocused: isFocused,\n    isFocusVisible: isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\nfunction $dfd8c70b928eb1b3$export$1a38b4ad7f578e1d(props) {\n  var _ref9;\n  var children = props.children,\n    focusClass = props.focusClass,\n    focusRingClass = props.focusRingClass;\n  var _ref8 = (0, $581a96d6eb128c1b$export$4e328f61c538687f)(props),\n    isFocused = _ref8.isFocused,\n    isFocusVisible = _ref8.isFocusVisible,\n    focusProps = _ref8.focusProps;\n  var child = (0, $parcel$interopDefault($aB6Cp$react)).Children.only(children);\n  return /*#__PURE__*/(0, $parcel$interopDefault($aB6Cp$react)).cloneElement(child, (0, $aB6Cp$reactariautils.mergeProps)(child.props, _objectSpread({}, focusProps, {\n    className: (0, $parcel$interopDefault($aB6Cp$clsx))((_ref9 = {}, _defineProperty(_ref9, focusClass || \"\", isFocused), _defineProperty(_ref9, focusRingClass || \"\", isFocusVisible), _ref9))\n  })));\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nvar $fb504d83237fd6ac$var$FocusableContext = /*#__PURE__*/(0, $parcel$interopDefault($aB6Cp$react)).createContext(null);\nfunction $fb504d83237fd6ac$var$useFocusableContext(ref) {\n  var context = (0, $aB6Cp$react.useContext)($fb504d83237fd6ac$var$FocusableContext) || {};\n  (0, $aB6Cp$reactariautils.useSyncRef)(context, ref);\n  // eslint-disable-next-line\n  var _ = context.ref,\n    otherProps = _objectWithoutProperties(context, [\"ref\"]);\n  return otherProps;\n}\n/**\n * Provides DOM props to the nearest focusable child.\n */\nfunction $fb504d83237fd6ac$var$FocusableProvider(props, ref) {\n  var children = props.children,\n    otherProps = _objectWithoutProperties(props, [\"children\"]);\n  var context = _objectSpread({}, otherProps, {\n    ref: ref\n  });\n  return /*#__PURE__*/(0, $parcel$interopDefault($aB6Cp$react)).createElement($fb504d83237fd6ac$var$FocusableContext.Provider, {\n    value: context\n  }, children);\n}\nvar $fb504d83237fd6ac$export$13f3202a3e5ddd5 = /*#__PURE__*/(0, $parcel$interopDefault($aB6Cp$react)).forwardRef($fb504d83237fd6ac$var$FocusableProvider);\nfunction $fb504d83237fd6ac$export$4c014de7c8940b4c(props, domRef) {\n  var _ref10 = (0, $aB6Cp$reactariainteractions.useFocus)(props),\n    focusProps = _ref10.focusProps;\n  var _ref11 = (0, $aB6Cp$reactariainteractions.useKeyboard)(props),\n    keyboardProps = _ref11.keyboardProps;\n  var interactions = (0, $aB6Cp$reactariautils.mergeProps)(focusProps, keyboardProps);\n  var domProps = $fb504d83237fd6ac$var$useFocusableContext(domRef);\n  var interactionProps = props.isDisabled ? {} : domProps;\n  var autoFocusRef = (0, $aB6Cp$react.useRef)(props.autoFocus);\n  (0, $aB6Cp$react.useEffect)(function () {\n    if (autoFocusRef.current && domRef.current) (0, $1c7f9157d722357d$export$80f3e147d781571c)(domRef.current);\n    autoFocusRef.current = false;\n  }, [domRef]);\n  return {\n    focusableProps: (0, $aB6Cp$reactariautils.mergeProps)(_objectSpread({}, interactions, {\n      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n    }), interactionProps)\n  };\n}\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $259c6413a286f2e6$export$eac1895992b9f3d6(ref, options) {\n  var isDisabled = options === null || options === void 0 ? void 0 : options.isDisabled;\n  var _ref12 = (0, $aB6Cp$react.useState)(false),\n    _ref13 = _slicedToArray(_ref12, 2),\n    hasTabbableChild = _ref13[0],\n    setHasTabbableChild = _ref13[1];\n  (0, $aB6Cp$reactariautils.useLayoutEffect)(function () {\n    if ((ref === null || ref === void 0 ? void 0 : ref.current) && !isDisabled) {\n      var update = function update() {\n        if (ref.current) {\n          var walker = (0, $a7a032acae3ddda9$export$2d6ec8fc375ceafa)(ref.current, {\n            tabbable: true\n          });\n          setHasTabbableChild(!!walker.nextNode());\n        }\n      };\n      update();\n      // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\n      var observer = new MutationObserver(update);\n      observer.observe(ref.current, {\n        subtree: true,\n        childList: true,\n        attributes: true,\n        attributeFilter: [\"tabIndex\", \"disabled\"]\n      });\n      return function () {\n        // Disconnect mutation observer when a React update occurs on the top-level component\n        // so we update synchronously after re-rendering. Otherwise React will emit act warnings\n        // in tests since mutation observers fire asynchronously. The mutation observer is necessary\n        // so we also update if a child component re-renders and adds/removes something tabbable.\n        observer.disconnect();\n      };\n    }\n  });\n  return isDisabled ? false : hasTabbableChild;\n}","map":null,"metadata":{},"sourceType":"script"}