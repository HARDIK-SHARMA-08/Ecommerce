{"ast":null,"code":"// src/index.ts\nimport { useEffect } from \"react\";\nfunction useDataScrollOverflow() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var domRef = props.domRef,\n    _props$isEnabled = props.isEnabled,\n    isEnabled = _props$isEnabled === void 0 ? true : _props$isEnabled,\n    _props$overflowCheck = props.overflowCheck,\n    overflowCheck = _props$overflowCheck === void 0 ? \"vertical\" : _props$overflowCheck,\n    _props$offset = props.offset,\n    offset = _props$offset === void 0 ? 0 : _props$offset;\n  useEffect(function () {\n    var el = domRef == null ? void 0 : domRef.current;\n    var checkOverflow = function checkOverflow() {\n      if (!el) return;\n      if (overflowCheck === \"vertical\" || overflowCheck === \"both\") {\n        var hasElementsAbove = el.scrollTop > offset;\n        var hasElementsBelow = el.scrollTop + el.clientHeight + offset < el.scrollHeight;\n        if (hasElementsAbove && hasElementsBelow) {\n          el.dataset.topBottomScroll = \"true\";\n          el.removeAttribute(\"data-top-scroll\");\n          el.removeAttribute(\"data-bottom-scroll\");\n        } else {\n          el.dataset.topScroll = hasElementsAbove.toString();\n          el.dataset.bottomScroll = hasElementsBelow.toString();\n          el.removeAttribute(\"data-top-bottom-scroll\");\n        }\n      }\n      if (overflowCheck === \"horizontal\" || overflowCheck === \"both\") {\n        var hasElementsLeft = el.scrollLeft > offset;\n        var hasElementsRight = el.scrollLeft + el.clientWidth + offset < el.scrollWidth;\n        if (hasElementsLeft && hasElementsRight) {\n          el.dataset.leftRightScroll = \"true\";\n          el.removeAttribute(\"data-left-scroll\");\n          el.removeAttribute(\"data-right-scroll\");\n        } else {\n          el.dataset.leftScroll = hasElementsLeft.toString();\n          el.dataset.rightScroll = hasElementsRight.toString();\n          el.removeAttribute(\"data-left-right-scroll\");\n        }\n      }\n    };\n    var clearOverflow = function clearOverflow() {\n      if (!el) return;\n      el.removeAttribute(\"data-top-scroll\");\n      el.removeAttribute(\"data-bottom-scroll\");\n      el.removeAttribute(\"data-top-bottom-scroll\");\n      el.removeAttribute(\"data-left-scroll\");\n      el.removeAttribute(\"data-right-scroll\");\n      el.removeAttribute(\"data-left-right-scroll\");\n    };\n    if (isEnabled) {\n      checkOverflow();\n      el == null ? void 0 : el.addEventListener(\"scroll\", checkOverflow);\n    } else {\n      clearOverflow();\n    }\n    return function () {\n      el == null ? void 0 : el.removeEventListener(\"scroll\", checkOverflow);\n      clearOverflow();\n    };\n  }, [isEnabled, overflowCheck, domRef]);\n}\nexport { useDataScrollOverflow };","map":null,"metadata":{},"sourceType":"module"}