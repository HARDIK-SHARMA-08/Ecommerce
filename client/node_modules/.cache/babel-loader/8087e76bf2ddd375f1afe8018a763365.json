{"ast":null,"code":"import _slicedToArray from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n// src/index.ts\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useIsMounted() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$rerender = props.rerender,\n    rerender = _props$rerender === void 0 ? false : _props$rerender,\n    _props$delay = props.delay,\n    delay = _props$delay === void 0 ? 0 : _props$delay;\n  var isMountedRef = useRef(false);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMounted = _useState2[0],\n    setIsMounted = _useState2[1];\n  useEffect(function () {\n    isMountedRef.current = true;\n    var timer = null;\n    if (rerender) {\n      if (delay > 0) {\n        timer = setTimeout(function () {\n          setIsMounted(true);\n        }, delay);\n      } else {\n        setIsMounted(true);\n      }\n    }\n    return function () {\n      isMountedRef.current = false;\n      if (rerender) {\n        setIsMounted(false);\n      }\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n  }, [rerender]);\n  return [useCallback(function () {\n    return isMountedRef.current;\n  }, []), isMounted];\n}\nexport { useIsMounted };","map":null,"metadata":{},"sourceType":"module"}