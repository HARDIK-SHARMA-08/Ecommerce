{"ast":null,"code":"// src/functions.ts\nvar capitalize = function capitalize(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n};\nfunction callAllHandlers() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n  return function func(event) {\n    fns.some(function (fn) {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\nfunction callAll() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n  return function mergedFn(arg) {\n    fns.forEach(function (fn) {\n      fn == null ? void 0 : fn(arg);\n    });\n  };\n}\nfunction extractProperty(key, defaultValue) {\n  var result = defaultValue;\n  for (var _len3 = arguments.length, objs = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    objs[_key3 - 2] = arguments[_key3];\n  }\n  for (var _i = 0, _objs = objs; _i < _objs.length; _i++) {\n    var obj = _objs[_i];\n    if (obj && key in obj && !!obj[key]) {\n      result = obj[key];\n    }\n  }\n  return result;\n}\nfunction getUniqueID(prefix) {\n  return \"\".concat(prefix, \"-\").concat(Math.floor(Math.random() * 1e6));\n}\nfunction removeEvents(input) {\n  for (var key in input) {\n    if (key.startsWith(\"on\")) {\n      delete input[key];\n    }\n  }\n  return input;\n}\nexport { capitalize, callAllHandlers, callAll, extractProperty, getUniqueID, removeEvents };","map":null,"metadata":{},"sourceType":"module"}