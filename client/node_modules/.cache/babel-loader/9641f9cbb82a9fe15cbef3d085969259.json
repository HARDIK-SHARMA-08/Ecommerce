{"ast":null,"code":"\"use client\";\n\"use strict\";\n\nvar _objectWithoutProperties = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectWithoutProperties\");\nvar _slicedToArray = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nvar _toConsumableArray = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\nvar _defineProperty = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/defineProperty\");\nvar _objectSpread = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Select: function Select() {\n    return select_default;\n  },\n  SelectItem: function SelectItem() {\n    return import_listbox2.ListboxItem;\n  },\n  SelectSection: function SelectSection() {\n    return import_listbox2.ListboxSection;\n  },\n  useSelect: function useSelect() {\n    return _useSelect;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_listbox2 = require(\"@nextui-org/listbox\");\n\n// src/select.tsx\nvar import_listbox = require(\"@nextui-org/listbox\");\nvar import_popover = require(\"@nextui-org/popover\");\nvar import_shared_icons = require(\"@nextui-org/shared-icons\");\nvar import_spinner = require(\"@nextui-org/spinner\");\nvar import_system2 = require(\"@nextui-org/system\");\nvar import_scroll_shadow = require(\"@nextui-org/scroll-shadow\");\nvar import_react2 = require(\"react\");\nvar import_visually_hidden2 = require(\"@react-aria/visually-hidden\");\nvar import_framer_motion = require(\"framer-motion\");\n\n// src/hidden-select.tsx\nvar import_utils = require(\"@react-aria/utils\");\nvar import_interactions = require(\"@react-aria/interactions\");\nvar import_visually_hidden = require(\"@react-aria/visually-hidden\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nfunction useHiddenSelect(props, state, triggerRef) {\n  var _a;\n  var autoComplete = props.autoComplete,\n    name = props.name,\n    isDisabled = props.isDisabled,\n    isRequired = props.isRequired,\n    selectionMode = props.selectionMode,\n    _onChange = props.onChange;\n  var modality = (0, import_interactions.useInteractionModality)();\n  var _ref = (0, import_visually_hidden.useVisuallyHidden)(),\n    visuallyHiddenProps = _ref.visuallyHiddenProps;\n  (0, import_utils.useFormReset)(props.selectRef, state.selectedKey, state.setSelectedKey);\n  return {\n    containerProps: _objectSpread({}, visuallyHiddenProps, _defineProperty({\n      \"aria-hidden\": true\n    }, \"data-a11y-ignore\", \"aria-hidden-focus\")),\n    inputProps: {\n      type: \"text\",\n      tabIndex: modality == null || state.isFocused || state.isOpen ? -1 : 0,\n      autoComplete: autoComplete,\n      value: (_a = _toConsumableArray(state.selectedKeys).join(\",\")) != null ? _a : \"\",\n      required: isRequired,\n      style: {\n        fontSize: 16\n      },\n      onFocus: function onFocus() {\n        var _a2;\n        return (_a2 = triggerRef.current) == null ? void 0 : _a2.focus();\n      },\n      disabled: isDisabled,\n      onChange: function onChange() {}\n    },\n    selectProps: {\n      name: name,\n      tabIndex: -1,\n      autoComplete: autoComplete,\n      disabled: isDisabled,\n      size: state.collection.size,\n      value: selectionMode === \"multiple\" ? _toConsumableArray(state.selectedKeys).map(function (k) {\n        return String(k);\n      }) : _toConsumableArray(state.selectedKeys)[0],\n      multiple: selectionMode === \"multiple\",\n      onChange: function onChange(e) {\n        state.setSelectedKeys(e.target.value);\n        _onChange == null ? void 0 : _onChange(e);\n      }\n    }\n  };\n}\nfunction HiddenSelect(props) {\n  var _a;\n  var state = props.state,\n    triggerRef = props.triggerRef,\n    selectRef = props.selectRef,\n    label = props.label,\n    name = props.name,\n    isDisabled = props.isDisabled;\n  var _useHiddenSelect = useHiddenSelect(_objectSpread({}, props, {\n      selectRef: selectRef\n    }), state, triggerRef),\n    containerProps = _useHiddenSelect.containerProps,\n    inputProps = _useHiddenSelect.inputProps,\n    selectProps = _useHiddenSelect.selectProps;\n  if (state.collection.size <= 300) {\n    return /* @__PURE__ */(0, import_jsx_runtime.jsxs)(\"div\", _objectSpread({}, containerProps, {\n      \"data-testid\": \"hidden-select-container\",\n      children: [/* @__PURE__ */(0, import_jsx_runtime.jsx)(\"input\", _objectSpread({}, inputProps)), /* @__PURE__ */(0, import_jsx_runtime.jsxs)(\"label\", {\n        children: [label, /* @__PURE__ */(0, import_jsx_runtime.jsxs)(\"select\", _objectSpread({}, selectProps, {\n          ref: selectRef,\n          children: [/* @__PURE__ */(0, import_jsx_runtime.jsx)(\"option\", {}), _toConsumableArray(state.collection.getKeys()).map(function (key) {\n            var item = state.collection.getItem(key);\n            if ((item == null ? void 0 : item.type) === \"item\") {\n              return /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"option\", {\n                value: item.key,\n                children: item.textValue\n              }, item.key);\n            }\n          })]\n        }))]\n      })]\n    }));\n  } else if (name) {\n    return /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"input\", {\n      autoComplete: selectProps.autoComplete,\n      disabled: isDisabled,\n      name: name,\n      type: \"hidden\",\n      value: (_a = _toConsumableArray(state.selectedKeys).join(\",\")) != null ? _a : \"\"\n    });\n  }\n  return null;\n}\n\n// src/use-select.ts\nvar import_system = require(\"@nextui-org/system\");\nvar import_theme = require(\"@nextui-org/theme\");\nvar import_react_utils = require(\"@nextui-org/react-utils\");\nvar import_react = require(\"react\");\nvar import_use_aria_button = require(\"@nextui-org/use-aria-button\");\nvar import_focus = require(\"@react-aria/focus\");\nvar import_shared_utils = require(\"@nextui-org/shared-utils\");\nvar import_utils2 = require(\"@react-aria/utils\");\nvar import_interactions2 = require(\"@react-aria/interactions\");\nvar import_use_aria_multiselect = require(\"@nextui-org/use-aria-multiselect\");\nfunction _useSelect(originalProps) {\n  var _a, _b;\n  var _ref2 = (0, import_system.mapPropsVariants)(originalProps, import_theme.select.variantKeys),\n    _ref3 = _slicedToArray(_ref2, 2),\n    props = _ref3[0],\n    variantProps = _ref3[1];\n  var disableAnimation = (_a = originalProps.disableAnimation) != null ? _a : false;\n  var ref = props.ref,\n    as = props.as,\n    isOpen = props.isOpen,\n    label = props.label,\n    name = props.name,\n    children = props.children,\n    isLoading = props.isLoading,\n    selectorIcon = props.selectorIcon,\n    defaultOpen = props.defaultOpen,\n    _onOpenChange = props.onOpenChange,\n    startContent = props.startContent,\n    endContent = props.endContent,\n    description = props.description,\n    errorMessage = props.errorMessage,\n    renderValue = props.renderValue,\n    _onSelectionChange = props.onSelectionChange,\n    placeholder = props.placeholder,\n    _props$disallowEmptyS = props.disallowEmptySelection,\n    disallowEmptySelection = _props$disallowEmptyS === void 0 ? false : _props$disallowEmptyS,\n    _props$selectionMode = props.selectionMode,\n    selectionMode = _props$selectionMode === void 0 ? \"single\" : _props$selectionMode,\n    spinnerRef = props.spinnerRef,\n    scrollRefProp = props.scrollRef,\n    userPopoverProps = props.popoverProps,\n    userScrollShadowProps = props.scrollShadowProps,\n    userListboxProps = props.listboxProps,\n    validationState = props.validationState,\n    spinnerProps = props.spinnerProps,\n    onChange = props.onChange,\n    onClose = props.onClose,\n    className = props.className,\n    classNames = props.classNames,\n    otherProps = _objectWithoutProperties(props, [\"ref\", \"as\", \"isOpen\", \"label\", \"name\", \"children\", \"isLoading\", \"selectorIcon\", \"defaultOpen\", \"onOpenChange\", \"startContent\", \"endContent\", \"description\", \"errorMessage\", \"renderValue\", \"onSelectionChange\", \"placeholder\", \"disallowEmptySelection\", \"selectionMode\", \"spinnerRef\", \"scrollRef\", \"popoverProps\", \"scrollShadowProps\", \"listboxProps\", \"validationState\", \"spinnerProps\", \"onChange\", \"onClose\", \"className\", \"classNames\"]);\n  var scrollShadowRef = (0, import_react_utils.useDOMRef)(scrollRefProp);\n  var defaultRelatedComponentsProps = {\n    popoverProps: {\n      placement: \"bottom\",\n      triggerScaleOnOpen: false,\n      offset: 5,\n      disableAnimation: disableAnimation\n    },\n    scrollShadowProps: {\n      ref: scrollShadowRef,\n      isEnabled: (_b = originalProps.showScrollIndicators) != null ? _b : true,\n      hideScrollBar: true,\n      offset: 15\n    },\n    listboxProps: {\n      disableAnimation: disableAnimation\n    }\n  };\n  userPopoverProps = _objectSpread({}, defaultRelatedComponentsProps.popoverProps, userPopoverProps);\n  userScrollShadowProps = _objectSpread({}, defaultRelatedComponentsProps.scrollShadowProps, userScrollShadowProps);\n  userListboxProps = _objectSpread({}, defaultRelatedComponentsProps.listboxProps, userListboxProps);\n  var Component = as || \"button\";\n  var shouldFilterDOMProps = typeof Component === \"string\";\n  var domRef = (0, import_react_utils.useDOMRef)(ref);\n  var triggerRef = (0, import_react.useRef)(null);\n  var listboxRef = (0, import_react.useRef)(null);\n  var popoverRef = (0, import_react.useRef)(null);\n  var state = (0, import_use_aria_multiselect.useMultiSelectState)(_objectSpread({}, props, {\n    isOpen: isOpen,\n    selectionMode: selectionMode,\n    disallowEmptySelection: disallowEmptySelection,\n    children: children,\n    isRequired: originalProps == null ? void 0 : originalProps.isRequired,\n    isDisabled: originalProps == null ? void 0 : originalProps.isDisabled,\n    defaultOpen: defaultOpen,\n    onOpenChange: function onOpenChange(open) {\n      _onOpenChange == null ? void 0 : _onOpenChange(open);\n      if (!open) {\n        onClose == null ? void 0 : onClose();\n      }\n    },\n    onSelectionChange: function onSelectionChange(keys) {\n      _onSelectionChange == null ? void 0 : _onSelectionChange(keys);\n      if (onChange && typeof onChange === \"function\" && domRef.current) {\n        var event = {\n          target: _objectSpread({}, domRef.current, {\n            value: Array.from(keys).join(\",\"),\n            name: domRef.current.name\n          })\n        };\n        onChange(event);\n      }\n    }\n  }));\n  var _ref4 = (0, import_use_aria_multiselect.useMultiSelect)(_objectSpread({}, props, {\n      disallowEmptySelection: disallowEmptySelection,\n      isDisabled: originalProps == null ? void 0 : originalProps.isDisabled\n    }), state, triggerRef),\n    labelProps = _ref4.labelProps,\n    triggerProps = _ref4.triggerProps,\n    valueProps = _ref4.valueProps,\n    menuProps = _ref4.menuProps,\n    descriptionProps = _ref4.descriptionProps,\n    errorMessageProps = _ref4.errorMessageProps;\n  var _ref5 = (0, import_use_aria_button.useAriaButton)(triggerProps, triggerRef),\n    isPressed = _ref5.isPressed,\n    buttonProps = _ref5.buttonProps;\n  var _ref6 = (0, import_focus.useFocusRing)(),\n    focusProps = _ref6.focusProps,\n    isFocused = _ref6.isFocused,\n    isFocusVisible = _ref6.isFocusVisible;\n  var _ref7 = (0, import_interactions2.useHover)({\n      isDisabled: originalProps == null ? void 0 : originalProps.isDisabled\n    }),\n    isHovered = _ref7.isHovered,\n    hoverProps = _ref7.hoverProps;\n  var labelPlacement = (0, import_react.useMemo)(function () {\n    var _a2;\n    if ((!originalProps.labelPlacement || originalProps.labelPlacement === \"inside\") && !label) {\n      return \"outside\";\n    }\n    return (_a2 = originalProps.labelPlacement) != null ? _a2 : \"inside\";\n  }, [originalProps.labelPlacement, label]);\n  var hasHelper = !!description || !!errorMessage;\n  var hasPlaceholder = !!placeholder;\n  var isInvalid = validationState === \"invalid\" || originalProps.isInvalid;\n  var shouldLabelBeOutside = labelPlacement === \"outside-left\" || labelPlacement === \"outside\" && hasPlaceholder;\n  var shouldLabelBeInside = labelPlacement === \"inside\";\n  var isLabelPlaceholder = !hasPlaceholder && labelPlacement !== \"outside-left\";\n  var isFilled = state.isOpen || !!state.selectedItems || !!startContent || !!endContent;\n  var baseStyles = (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.base, className);\n  var slots = (0, import_react.useMemo)(function () {\n    return (0, import_theme.select)(_objectSpread({}, variantProps, {\n      isLabelPlaceholder: isLabelPlaceholder,\n      isInvalid: isInvalid,\n      className: className\n    }));\n  }, [].concat(_toConsumableArray(Object.values(variantProps)), [isInvalid, isLabelPlaceholder, className]));\n  (0, import_react.useEffect)(function () {\n    if (state.isOpen && popoverRef.current && listboxRef.current) {\n      var selectedItem = listboxRef.current.querySelector(\"[aria-selected=true] [data-label=true]\");\n      var scrollShadow = scrollShadowRef.current;\n      if (selectedItem && scrollShadow && selectedItem.parentElement) {\n        var scrollShadowRect = scrollShadow == null ? void 0 : scrollShadow.getBoundingClientRect();\n        var scrollShadowHeight = scrollShadowRect.height;\n        scrollShadow.scrollTop = selectedItem.parentElement.offsetTop - scrollShadowHeight / 2 + selectedItem.parentElement.clientHeight / 2;\n      }\n    }\n  }, [state.isOpen, disableAnimation]);\n  (0, import_react.useEffect)(function () {\n    if (state.isOpen && popoverRef.current && triggerRef.current) {\n      var selectRect = triggerRef.current.getBoundingClientRect();\n      var popover = popoverRef.current;\n      popover.style.width = selectRect.width + \"px\";\n    }\n  }, [state.isOpen]);\n  var getBaseProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      \"data-filled\": (0, import_shared_utils.dataAttr)(isFilled),\n      \"data-has-helper\": (0, import_shared_utils.dataAttr)(hasHelper),\n      className: slots.base({\n        class: (0, import_shared_utils.clsx)(baseStyles, props2.className)\n      })\n    }, props2);\n  }, [slots, hasHelper, isFilled, baseStyles]);\n  var getTriggerProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      ref: triggerRef,\n      \"data-open\": (0, import_shared_utils.dataAttr)(state.isOpen),\n      \"data-disabled\": (0, import_shared_utils.dataAttr)(originalProps == null ? void 0 : originalProps.isDisabled),\n      \"data-focus\": (0, import_shared_utils.dataAttr)(isFocused),\n      \"data-pressed\": (0, import_shared_utils.dataAttr)(isPressed),\n      \"data-focus-visible\": (0, import_shared_utils.dataAttr)(isFocusVisible),\n      \"data-hover\": (0, import_shared_utils.dataAttr)(isHovered),\n      className: slots.trigger({\n        class: classNames == null ? void 0 : classNames.trigger\n      })\n    }, (0, import_utils2.mergeProps)(buttonProps, focusProps, hoverProps, (0, import_react_utils.filterDOMProps)(otherProps, {\n      enabled: shouldFilterDOMProps\n    }), (0, import_react_utils.filterDOMProps)(props2)));\n  }, [slots, triggerRef, state.isOpen, classNames == null ? void 0 : classNames.trigger, originalProps == null ? void 0 : originalProps.isDisabled, isFocused, isPressed, isFocusVisible, isHovered, buttonProps, focusProps, hoverProps, otherProps, shouldFilterDOMProps]);\n  var getHiddenSelectProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      state: state,\n      triggerRef: triggerRef,\n      selectRef: domRef,\n      selectionMode: selectionMode,\n      label: originalProps == null ? void 0 : originalProps.label,\n      name: originalProps == null ? void 0 : originalProps.name,\n      isRequired: originalProps == null ? void 0 : originalProps.isRequired,\n      autoComplete: originalProps == null ? void 0 : originalProps.autoComplete,\n      isDisabled: originalProps == null ? void 0 : originalProps.isDisabled,\n      onChange: onChange\n    }, props2);\n  }, [state, selectionMode, originalProps == null ? void 0 : originalProps.label, originalProps == null ? void 0 : originalProps.autoComplete, originalProps == null ? void 0 : originalProps.name, originalProps == null ? void 0 : originalProps.isDisabled, triggerRef]);\n  var getLabelProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      className: slots.label({\n        class: (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.label, props2.className)\n      })\n    }, labelProps, props2);\n  }, [slots, classNames == null ? void 0 : classNames.label, labelProps]);\n  var getValueProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      className: slots.value({\n        class: (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.value, props2.className)\n      })\n    }, valueProps, props2);\n  }, [slots, classNames == null ? void 0 : classNames.value, valueProps]);\n  var getListboxWrapperProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      className: slots.listboxWrapper({\n        class: (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.listboxWrapper, props2 == null ? void 0 : props2.className)\n      })\n    }, (0, import_utils2.mergeProps)(userScrollShadowProps, props2));\n  }, [slots.listboxWrapper, classNames == null ? void 0 : classNames.listboxWrapper, userScrollShadowProps]);\n  var getListboxProps = function getListboxProps() {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      state: state,\n      ref: listboxRef,\n      className: slots.listbox({\n        class: (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.listbox, props2 == null ? void 0 : props2.className)\n      })\n    }, (0, import_utils2.mergeProps)(userListboxProps, props2, menuProps));\n  };\n  var getPopoverProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      state: state,\n      triggerRef: triggerRef,\n      ref: popoverRef,\n      scrollRef: listboxRef,\n      triggerType: \"listbox\",\n      className: slots.popover({\n        class: (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.popover, props2.className)\n      })\n    }, (0, import_utils2.mergeProps)(userPopoverProps, props2), {\n      offset: state.selectedItems && state.selectedItems.length > 0 ? state.selectedItems.length * 1e-8 + ((userPopoverProps == null ? void 0 : userPopoverProps.offset) || 0) : userPopoverProps == null ? void 0 : userPopoverProps.offset\n    });\n  }, [slots, classNames == null ? void 0 : classNames.popover, userPopoverProps, triggerRef, state, state.selectedItems]);\n  var getSelectorIconProps = (0, import_react.useCallback)(function () {\n    return {\n      \"aria-hidden\": (0, import_shared_utils.dataAttr)(true),\n      \"data-open\": (0, import_shared_utils.dataAttr)(state.isOpen),\n      className: slots.selectorIcon({\n        class: classNames == null ? void 0 : classNames.selectorIcon\n      })\n    };\n  }, [slots, classNames == null ? void 0 : classNames.selectorIcon, state == null ? void 0 : state.isOpen]);\n  var getInnerWrapperProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({}, props2, {\n      className: slots.innerWrapper({\n        class: (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.innerWrapper, props2 == null ? void 0 : props2.className)\n      })\n    });\n  }, [slots, classNames == null ? void 0 : classNames.innerWrapper]);\n  var getHelperWrapperProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({}, props2, {\n      className: slots.helperWrapper({\n        class: (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.helperWrapper, props2 == null ? void 0 : props2.className)\n      })\n    });\n  }, [slots, classNames == null ? void 0 : classNames.helperWrapper]);\n  var getDescriptionProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({}, props2, descriptionProps, {\n      className: slots.description({\n        class: (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.description, props2 == null ? void 0 : props2.className)\n      })\n    });\n  }, [slots, classNames == null ? void 0 : classNames.description]);\n  var getMainWrapperProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({}, props2, {\n      className: slots.mainWrapper({\n        class: (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.mainWrapper, props2 == null ? void 0 : props2.className)\n      })\n    });\n  }, [slots, classNames == null ? void 0 : classNames.mainWrapper]);\n  var getErrorMessageProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({}, props2, errorMessageProps, {\n      className: slots.errorMessage({\n        class: (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.errorMessage, props2 == null ? void 0 : props2.className)\n      })\n    });\n  }, [slots, errorMessageProps, classNames == null ? void 0 : classNames.errorMessage]);\n  var getSpinnerProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      \"aria-hidden\": (0, import_shared_utils.dataAttr)(true),\n      color: \"current\",\n      size: \"sm\"\n    }, spinnerProps, props2, {\n      ref: spinnerRef,\n      className: slots.spinner({\n        class: (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.spinner, props2 == null ? void 0 : props2.className)\n      })\n    });\n  }, [slots, spinnerRef, spinnerProps, classNames == null ? void 0 : classNames.spinner]);\n  return {\n    Component: Component,\n    domRef: domRef,\n    state: state,\n    label: label,\n    name: name,\n    triggerRef: triggerRef,\n    isLoading: isLoading,\n    placeholder: placeholder,\n    startContent: startContent,\n    endContent: endContent,\n    description: description,\n    selectorIcon: selectorIcon,\n    errorMessage: errorMessage,\n    hasHelper: hasHelper,\n    labelPlacement: labelPlacement,\n    hasPlaceholder: hasPlaceholder,\n    renderValue: renderValue,\n    selectionMode: selectionMode,\n    disableAnimation: disableAnimation,\n    shouldLabelBeOutside: shouldLabelBeOutside,\n    shouldLabelBeInside: shouldLabelBeInside,\n    getBaseProps: getBaseProps,\n    getTriggerProps: getTriggerProps,\n    getLabelProps: getLabelProps,\n    getValueProps: getValueProps,\n    getListboxProps: getListboxProps,\n    getPopoverProps: getPopoverProps,\n    getSpinnerProps: getSpinnerProps,\n    getMainWrapperProps: getMainWrapperProps,\n    getListboxWrapperProps: getListboxWrapperProps,\n    getHiddenSelectProps: getHiddenSelectProps,\n    getInnerWrapperProps: getInnerWrapperProps,\n    getHelperWrapperProps: getHelperWrapperProps,\n    getDescriptionProps: getDescriptionProps,\n    getErrorMessageProps: getErrorMessageProps,\n    getSelectorIconProps: getSelectorIconProps\n  };\n}\n\n// src/select.tsx\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nfunction Select(props, ref) {\n  var _useSelect2 = _useSelect(_objectSpread({}, props, {\n      ref: ref\n    })),\n    Component = _useSelect2.Component,\n    state = _useSelect2.state,\n    label = _useSelect2.label,\n    hasHelper = _useSelect2.hasHelper,\n    isLoading = _useSelect2.isLoading,\n    triggerRef = _useSelect2.triggerRef,\n    _useSelect2$selectorI = _useSelect2.selectorIcon,\n    selectorIcon = _useSelect2$selectorI === void 0 ? /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_shared_icons.ChevronDownIcon, {}) : _useSelect2$selectorI,\n    description = _useSelect2.description,\n    errorMessage = _useSelect2.errorMessage,\n    startContent = _useSelect2.startContent,\n    endContent = _useSelect2.endContent,\n    placeholder = _useSelect2.placeholder,\n    renderValue = _useSelect2.renderValue,\n    disableAnimation = _useSelect2.disableAnimation,\n    getBaseProps = _useSelect2.getBaseProps,\n    getLabelProps = _useSelect2.getLabelProps,\n    getTriggerProps = _useSelect2.getTriggerProps,\n    getValueProps = _useSelect2.getValueProps,\n    getListboxProps = _useSelect2.getListboxProps,\n    getPopoverProps = _useSelect2.getPopoverProps,\n    getSpinnerProps = _useSelect2.getSpinnerProps,\n    getMainWrapperProps = _useSelect2.getMainWrapperProps,\n    shouldLabelBeOutside = _useSelect2.shouldLabelBeOutside,\n    getInnerWrapperProps = _useSelect2.getInnerWrapperProps,\n    getHiddenSelectProps = _useSelect2.getHiddenSelectProps,\n    getHelperWrapperProps = _useSelect2.getHelperWrapperProps,\n    getListboxWrapperProps = _useSelect2.getListboxWrapperProps,\n    getDescriptionProps = _useSelect2.getDescriptionProps,\n    getErrorMessageProps = _useSelect2.getErrorMessageProps,\n    getSelectorIconProps = _useSelect2.getSelectorIconProps;\n  var labelContent = label ? /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"label\", _objectSpread({}, getLabelProps(), {\n    children: label\n  })) : null;\n  var clonedIcon = (0, import_react2.cloneElement)(selectorIcon, getSelectorIconProps());\n  var helperWrapper = (0, import_react2.useMemo)(function () {\n    if (!hasHelper) return null;\n    return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"div\", _objectSpread({}, getHelperWrapperProps(), {\n      children: errorMessage ? /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"div\", _objectSpread({}, getErrorMessageProps(), {\n        children: errorMessage\n      })) : description ? /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"div\", _objectSpread({}, getDescriptionProps(), {\n        children: description\n      })) : null\n    }));\n  }, [hasHelper, errorMessage, description, getHelperWrapperProps, getErrorMessageProps, getDescriptionProps]);\n  var renderSelectedItem = (0, import_react2.useMemo)(function () {\n    if (!state.selectedItems) return placeholder;\n    if (renderValue && typeof renderValue === \"function\") {\n      var mappedItems = _toConsumableArray(state.selectedItems).map(function (item) {\n        return {\n          key: item.key,\n          data: item.value,\n          type: item.type,\n          props: item.props,\n          textValue: item.textValue,\n          rendered: item.rendered,\n          \"aria-label\": item[\"aria-label\"]\n        };\n      });\n      return renderValue(mappedItems);\n    }\n    return state.selectedItems.map(function (item) {\n      return item.textValue;\n    }).join(\", \");\n  }, [state.selectedItems, renderValue]);\n  var renderIndicator = (0, import_react2.useMemo)(function () {\n    if (isLoading) {\n      return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_spinner.Spinner, _objectSpread({}, getSpinnerProps()));\n    }\n    return clonedIcon;\n  }, [isLoading, clonedIcon, getSpinnerProps]);\n  var popoverContent = (0, import_react2.useMemo)(function () {\n    return state.isOpen ? /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_popover.FreeSoloPopover, _objectSpread({}, getPopoverProps(), {\n      state: state,\n      triggerRef: triggerRef,\n      children: /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_scroll_shadow.ScrollShadow, _objectSpread({}, getListboxWrapperProps(), {\n        children: /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_listbox.Listbox, _objectSpread({}, getListboxProps()))\n      }))\n    })) : null;\n  }, [state.isOpen, getPopoverProps, state, triggerRef, getListboxWrapperProps, getListboxProps]);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsxs)(\"div\", _objectSpread({}, getBaseProps(), {\n    children: [/* @__PURE__ */(0, import_jsx_runtime2.jsx)(HiddenSelect, _objectSpread({}, getHiddenSelectProps())), shouldLabelBeOutside ? labelContent : null, /* @__PURE__ */(0, import_jsx_runtime2.jsxs)(\"div\", _objectSpread({}, getMainWrapperProps(), {\n      children: [/* @__PURE__ */(0, import_jsx_runtime2.jsxs)(Component, _objectSpread({}, getTriggerProps(), {\n        children: [!shouldLabelBeOutside ? labelContent : null, /* @__PURE__ */(0, import_jsx_runtime2.jsxs)(\"div\", _objectSpread({}, getInnerWrapperProps(), {\n          children: [startContent, /* @__PURE__ */(0, import_jsx_runtime2.jsxs)(\"span\", _objectSpread({}, getValueProps(), {\n            children: [renderSelectedItem, state.selectedItems && /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_visually_hidden2.VisuallyHidden, {\n              children: \",\"\n            })]\n          })), endContent]\n        })), renderIndicator]\n      })), helperWrapper]\n    })), disableAnimation ? popoverContent : /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_framer_motion.AnimatePresence, {\n      children: popoverContent\n    })]\n  }));\n}\nvar select_default = (0, import_system2.forwardRef)(Select);\nSelect.displayName = \"NextUI.Select\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Select: Select,\n  SelectItem: SelectItem,\n  SelectSection: SelectSection,\n  useSelect: _useSelect\n});","map":null,"metadata":{},"sourceType":"script"}