{"ast":null,"code":"import _objectSpread from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\n// src/index.ts\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { usePress } from \"@react-aria/interactions\";\nfunction useAriaLink(props, ref) {\n  var _props$elementType = props.elementType,\n    elementType = _props$elementType === void 0 ? \"a\" : _props$elementType,\n    onPress = props.onPress,\n    onPressStart = props.onPressStart,\n    onPressEnd = props.onPressEnd,\n    deprecatedOnClick = props.onClick,\n    isDisabled = props.isDisabled,\n    otherProps = _objectWithoutProperties(props, [\"elementType\", \"onPress\", \"onPressStart\", \"onPressEnd\", \"onClick\", \"isDisabled\"]);\n  var linkProps = {};\n  if (elementType !== \"a\") {\n    linkProps = {\n      role: \"link\",\n      tabIndex: !isDisabled ? 0 : void 0\n    };\n  }\n  var _useFocusable = useFocusable(props, ref),\n    focusableProps = _useFocusable.focusableProps;\n  var _usePress = usePress({\n      onPress: onPress,\n      onPressStart: onPressStart,\n      onPressEnd: onPressEnd,\n      isDisabled: isDisabled,\n      ref: ref\n    }),\n    pressProps = _usePress.pressProps,\n    isPressed = _usePress.isPressed;\n  var domProps = filterDOMProps(otherProps, {\n    labelable: true\n  });\n  var interactionHandlers = mergeProps(focusableProps, pressProps);\n  return {\n    isPressed: isPressed,\n    linkProps: mergeProps(domProps, _objectSpread({}, interactionHandlers, linkProps, {\n      \"aria-disabled\": isDisabled || void 0,\n      \"aria-current\": props[\"aria-current\"],\n      onClick: function onClick(e) {\n        var _a;\n        (_a = pressProps.onClick) == null ? void 0 : _a.call(pressProps, e);\n        if (deprecatedOnClick) {\n          deprecatedOnClick(e);\n        }\n      }\n    }))\n  };\n}\nexport { useAriaLink };","map":null,"metadata":{},"sourceType":"module"}