{"ast":null,"code":"\"use client\";\n\"use strict\";\n\nvar _toConsumableArray = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\nvar _slicedToArray = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nvar _objectSpread = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nvar _objectWithoutProperties = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectWithoutProperties\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Menu: function Menu() {\n    return menu_default;\n  },\n  MenuItem: function MenuItem() {\n    return menu_item_base_default;\n  },\n  MenuSection: function MenuSection() {\n    return menu_section_base_default;\n  },\n  useMenu: function useMenu() {\n    return _useMenu;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/menu.tsx\nvar import_system4 = require(\"@nextui-org/system\");\n\n// src/use-menu.ts\nvar import_menu = require(\"@react-aria/menu\");\nvar import_theme = require(\"@nextui-org/theme\");\nvar import_tree = require(\"@react-stately/tree\");\nvar import_react_utils = require(\"@nextui-org/react-utils\");\nvar import_react = require(\"react\");\nfunction _useMenu(props) {\n  var as = props.as,\n    ref = props.ref,\n    variant = props.variant,\n    color = props.color,\n    disableAnimation = props.disableAnimation,\n    onAction = props.onAction,\n    closeOnSelect = props.closeOnSelect,\n    itemClasses = props.itemClasses,\n    className = props.className,\n    propState = props.state,\n    userMenuProps = props.menuProps,\n    onClose = props.onClose,\n    otherProps = _objectWithoutProperties(props, [\"as\", \"ref\", \"variant\", \"color\", \"disableAnimation\", \"onAction\", \"closeOnSelect\", \"itemClasses\", \"className\", \"state\", \"menuProps\", \"onClose\"]);\n  var Component = as || \"ul\";\n  var domRef = (0, import_react_utils.useDOMRef)(ref);\n  var innerState = (0, import_tree.useTreeState)(otherProps);\n  var state = propState || innerState;\n  var _ref = (0, import_menu.useMenu)(otherProps, state, domRef),\n    menuProps = _ref.menuProps;\n  var styles = (0, import_react.useMemo)(function () {\n    return (0, import_theme.menu)({\n      className: className\n    });\n  }, [className]);\n  var getMenuProps = function getMenuProps() {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      ref: domRef,\n      className: styles\n    }, userMenuProps, menuProps, props2);\n  };\n  return {\n    Component: Component,\n    state: state,\n    variant: variant,\n    color: color,\n    disableAnimation: disableAnimation,\n    onAction: onAction,\n    onClose: onClose,\n    closeOnSelect: closeOnSelect,\n    className: className,\n    itemClasses: itemClasses,\n    getMenuProps: getMenuProps\n  };\n}\n\n// src/menu-section.tsx\nvar import_theme3 = require(\"@nextui-org/theme\");\nvar import_menu3 = require(\"@react-aria/menu\");\nvar import_react4 = require(\"react\");\nvar import_system3 = require(\"@nextui-org/system\");\nvar import_utils2 = require(\"@react-aria/utils\");\nvar import_shared_utils2 = require(\"@nextui-org/shared-utils\");\nvar import_divider = require(\"@nextui-org/divider\");\n\n// src/menu-item.tsx\nvar import_react3 = require(\"react\");\nvar import_system2 = require(\"@nextui-org/system\");\n\n// src/use-menu-item.ts\nvar import_react2 = require(\"react\");\nvar import_theme2 = require(\"@nextui-org/theme\");\nvar import_system = require(\"@nextui-org/system\");\nvar import_focus = require(\"@react-aria/focus\");\nvar import_react_utils2 = require(\"@nextui-org/react-utils\");\nvar import_shared_utils = require(\"@nextui-org/shared-utils\");\nvar import_menu2 = require(\"@react-aria/menu\");\nvar import_utils = require(\"@react-aria/utils\");\nvar import_interactions = require(\"@react-aria/interactions\");\nvar import_use_is_mobile = require(\"@nextui-org/use-is-mobile\");\nfunction useMenuItem(originalProps) {\n  var _ref2 = (0, import_system.mapPropsVariants)(originalProps, import_theme2.menuItem.variantKeys),\n    _ref3 = _slicedToArray(_ref2, 2),\n    props = _ref3[0],\n    variantProps = _ref3[1];\n  var as = props.as,\n    item = props.item,\n    state = props.state,\n    shortcut = props.shortcut,\n    description = props.description,\n    startContent = props.startContent,\n    endContent = props.endContent,\n    isVirtualized = props.isVirtualized,\n    selectedIcon = props.selectedIcon,\n    className = props.className,\n    classNames = props.classNames,\n    onAction = props.onAction,\n    autoFocus = props.autoFocus,\n    onPress = props.onPress,\n    onClick = props.onClick,\n    _props$isReadOnly = props.isReadOnly,\n    isReadOnly = _props$isReadOnly === void 0 ? false : _props$isReadOnly,\n    closeOnSelect = props.closeOnSelect,\n    onClose = props.onClose,\n    otherProps = _objectWithoutProperties(props, [\"as\", \"item\", \"state\", \"shortcut\", \"description\", \"startContent\", \"endContent\", \"isVirtualized\", \"selectedIcon\", \"className\", \"classNames\", \"onAction\", \"autoFocus\", \"onPress\", \"onClick\", \"isReadOnly\", \"closeOnSelect\", \"onClose\"]);\n  var disableAnimation = originalProps.disableAnimation;\n  var domRef = (0, import_react2.useRef)(null);\n  var Component = as || \"li\";\n  var shouldFilterDOMProps = typeof Component === \"string\";\n  var rendered = item.rendered,\n    key = item.key;\n  var isDisabled = state.disabledKeys.has(key) || originalProps.isDisabled;\n  var isSelectable = state.selectionManager.selectionMode !== \"none\";\n  var isMobile = (0, import_use_is_mobile.useIsMobile)();\n  var _ref4 = (0, import_interactions.usePress)({\n      ref: domRef,\n      isDisabled: isDisabled,\n      onPress: onPress\n    }),\n    pressProps = _ref4.pressProps,\n    isPressed = _ref4.isPressed;\n  var _ref5 = (0, import_interactions.useHover)({\n      isDisabled: isDisabled\n    }),\n    isHovered = _ref5.isHovered,\n    hoverProps = _ref5.hoverProps;\n  var _ref6 = (0, import_focus.useFocusRing)({\n      autoFocus: autoFocus\n    }),\n    isFocusVisible = _ref6.isFocusVisible,\n    focusProps = _ref6.focusProps;\n  var _ref7 = (0, import_menu2.useMenuItem)({\n      key: key,\n      onClose: onClose,\n      isDisabled: isDisabled,\n      \"aria-label\": props[\"aria-label\"],\n      closeOnSelect: closeOnSelect,\n      isVirtualized: isVirtualized,\n      onAction: onAction\n    }, state, domRef),\n    isFocused = _ref7.isFocused,\n    isSelected = _ref7.isSelected,\n    menuItemProps = _ref7.menuItemProps,\n    labelProps = _ref7.labelProps,\n    descriptionProps = _ref7.descriptionProps,\n    keyboardShortcutProps = _ref7.keyboardShortcutProps;\n  var itemProps = menuItemProps;\n  var slots = (0, import_react2.useMemo)(function () {\n    return (0, import_theme2.menuItem)(_objectSpread({}, variantProps, {\n      isDisabled: isDisabled,\n      disableAnimation: disableAnimation\n    }));\n  }, [].concat(_toConsumableArray(Object.values(variantProps)), [isDisabled, disableAnimation]));\n  var baseStyles = (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.base, className);\n  if (isReadOnly) {\n    itemProps = (0, import_shared_utils.removeEvents)(itemProps);\n  }\n  var getItemProps = function getItemProps() {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      ref: domRef\n    }, (0, import_utils.mergeProps)(itemProps, isReadOnly ? {} : (0, import_utils.mergeProps)(focusProps, pressProps), hoverProps, (0, import_react_utils2.filterDOMProps)(otherProps, {\n      enabled: shouldFilterDOMProps\n    }), props2), {\n      \"data-focus\": (0, import_shared_utils.dataAttr)(isFocused),\n      \"data-selectable\": (0, import_shared_utils.dataAttr)(isSelectable),\n      \"data-hover\": (0, import_shared_utils.dataAttr)(isMobile ? isHovered || isPressed : isHovered),\n      \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n      \"data-selected\": (0, import_shared_utils.dataAttr)(isSelected),\n      \"data-pressed\": (0, import_shared_utils.dataAttr)(isPressed),\n      \"data-focus-visible\": (0, import_shared_utils.dataAttr)(isFocusVisible),\n      className: slots.base({\n        class: (0, import_shared_utils.clsx)(baseStyles, props2.className)\n      }),\n      onClick: (0, import_utils.chain)(pressProps.onClick, onClick)\n    });\n  };\n  var getLabelProps = function getLabelProps() {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({}, (0, import_utils.mergeProps)(labelProps, props2), {\n      className: slots.title({\n        class: classNames == null ? void 0 : classNames.title\n      })\n    });\n  };\n  var getDescriptionProps = function getDescriptionProps() {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({}, (0, import_utils.mergeProps)(descriptionProps, props2), {\n      className: slots.description({\n        class: classNames == null ? void 0 : classNames.description\n      })\n    });\n  };\n  var getKeyboardShortcutProps = function getKeyboardShortcutProps() {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({}, (0, import_utils.mergeProps)(keyboardShortcutProps, props2), {\n      className: slots.shortcut({\n        class: classNames == null ? void 0 : classNames.shortcut\n      })\n    });\n  };\n  var getSelectedIconProps = (0, import_react2.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      \"aria-hidden\": (0, import_shared_utils.dataAttr)(true),\n      \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n      className: slots.selectedIcon({\n        class: classNames == null ? void 0 : classNames.selectedIcon\n      })\n    }, props2);\n  }, [isDisabled, slots, classNames]);\n  return {\n    Component: Component,\n    domRef: domRef,\n    slots: slots,\n    classNames: classNames,\n    isSelectable: isSelectable,\n    isSelected: isSelected,\n    isDisabled: isDisabled,\n    rendered: rendered,\n    shortcut: shortcut,\n    description: description,\n    startContent: startContent,\n    endContent: endContent,\n    selectedIcon: selectedIcon,\n    disableAnimation: disableAnimation,\n    getItemProps: getItemProps,\n    getLabelProps: getLabelProps,\n    getDescriptionProps: getDescriptionProps,\n    getKeyboardShortcutProps: getKeyboardShortcutProps,\n    getSelectedIconProps: getSelectedIconProps\n  };\n}\n\n// src/menu-selected-icon.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nfunction MenuSelectedIcon(props) {\n  var isSelected = props.isSelected,\n    disableAnimation = props.disableAnimation,\n    otherProps = _objectWithoutProperties(props, [\"isSelected\", \"disableAnimation\"]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"svg\", _objectSpread({\n    \"aria-hidden\": \"true\",\n    \"data-selected\": isSelected,\n    role: \"presentation\",\n    viewBox: \"0 0 17 18\"\n  }, otherProps, {\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"polyline\", {\n      fill: \"none\",\n      points: \"1 9 7 14 15 4\",\n      stroke: \"currentColor\",\n      strokeDasharray: 22,\n      strokeDashoffset: isSelected ? 44 : 66,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      strokeWidth: 1.5,\n      style: !disableAnimation ? {\n        transition: \"stroke-dashoffset 200ms ease\"\n      } : {}\n    })\n  }));\n}\n\n// src/menu-item.tsx\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar MenuItem = (0, import_system2.forwardRef)(function (props, _) {\n  var _useMenuItem = useMenuItem(props),\n    Component = _useMenuItem.Component,\n    slots = _useMenuItem.slots,\n    classNames = _useMenuItem.classNames,\n    rendered = _useMenuItem.rendered,\n    shortcut = _useMenuItem.shortcut,\n    description = _useMenuItem.description,\n    isSelectable = _useMenuItem.isSelectable,\n    isSelected = _useMenuItem.isSelected,\n    isDisabled = _useMenuItem.isDisabled,\n    selectedIcon = _useMenuItem.selectedIcon,\n    startContent = _useMenuItem.startContent,\n    endContent = _useMenuItem.endContent,\n    disableAnimation = _useMenuItem.disableAnimation,\n    getItemProps = _useMenuItem.getItemProps,\n    getLabelProps = _useMenuItem.getLabelProps,\n    getDescriptionProps = _useMenuItem.getDescriptionProps,\n    getKeyboardShortcutProps = _useMenuItem.getKeyboardShortcutProps,\n    getSelectedIconProps = _useMenuItem.getSelectedIconProps;\n  var selectedContent = (0, import_react3.useMemo)(function () {\n    var defaultIcon = /* @__PURE__ */(0, import_jsx_runtime2.jsx)(MenuSelectedIcon, {\n      disableAnimation: disableAnimation,\n      isSelected: isSelected\n    });\n    if (typeof selectedIcon === \"function\") {\n      return selectedIcon({\n        icon: defaultIcon,\n        isSelected: isSelected,\n        isDisabled: isDisabled\n      });\n    }\n    if (selectedIcon) return selectedIcon;\n    return defaultIcon;\n  }, [selectedIcon, isSelected, isDisabled, disableAnimation]);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsxs)(Component, _objectSpread({}, getItemProps(), {\n    children: [startContent, description ? /* @__PURE__ */(0, import_jsx_runtime2.jsxs)(\"div\", {\n      className: slots.wrapper({\n        class: classNames == null ? void 0 : classNames.wrapper\n      }),\n      children: [/* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"span\", _objectSpread({}, getLabelProps(), {\n        children: rendered\n      })), /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"span\", _objectSpread({}, getDescriptionProps(), {\n        children: description\n      }))]\n    }) : /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"span\", _objectSpread({}, getLabelProps(), {\n      children: rendered\n    })), shortcut && /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"kbd\", _objectSpread({}, getKeyboardShortcutProps(), {\n      children: shortcut\n    })), isSelectable && /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"span\", _objectSpread({}, getSelectedIconProps(), {\n      children: selectedContent\n    })), endContent]\n  }));\n});\nMenuItem.displayName = \"NextUI.MenuItem\";\nvar menu_item_default = MenuItem;\n\n// src/menu-section.tsx\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar MenuSection = (0, import_system3.forwardRef)(function (_ref8, _) {\n  var item = _ref8.item,\n    state = _ref8.state,\n    as = _ref8.as,\n    variant = _ref8.variant,\n    color = _ref8.color,\n    disableAnimation = _ref8.disableAnimation,\n    onAction = _ref8.onAction,\n    closeOnSelect = _ref8.closeOnSelect,\n    className = _ref8.className,\n    classNames = _ref8.classNames,\n    _ref8$showDivider = _ref8.showDivider,\n    showDivider = _ref8$showDivider === void 0 ? false : _ref8$showDivider,\n    _ref8$dividerProps = _ref8.dividerProps,\n    dividerProps = _ref8$dividerProps === void 0 ? {} : _ref8$dividerProps,\n    itemClasses = _ref8.itemClasses,\n    title = _ref8.title,\n    otherProps = _objectWithoutProperties(_ref8, [\"item\", \"state\", \"as\", \"variant\", \"color\", \"disableAnimation\", \"onAction\", \"closeOnSelect\", \"className\", \"classNames\", \"showDivider\", \"dividerProps\", \"itemClasses\", \"title\"]);\n  var Component = as || \"li\";\n  var slots = (0, import_react4.useMemo)(function () {\n    return (0, import_theme3.menuSection)();\n  }, []);\n  var baseStyles = (0, import_shared_utils2.clsx)(classNames == null ? void 0 : classNames.base, className);\n  var dividerStyles = (0, import_shared_utils2.clsx)(classNames == null ? void 0 : classNames.divider, dividerProps == null ? void 0 : dividerProps.className);\n  var _ref9 = (0, import_menu3.useMenuSection)({\n      heading: item.rendered,\n      \"aria-label\": item[\"aria-label\"]\n    }),\n    itemProps = _ref9.itemProps,\n    headingProps = _ref9.headingProps,\n    groupProps = _ref9.groupProps;\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsxs)(Component, _objectSpread({\n    \"data-slot\": \"base\"\n  }, (0, import_utils2.mergeProps)(itemProps, otherProps), {\n    className: slots.base({\n      class: baseStyles\n    }),\n    children: [item.rendered && /* @__PURE__ */(0, import_jsx_runtime3.jsx)(\"span\", _objectSpread({}, headingProps, {\n      className: slots.heading({\n        class: classNames == null ? void 0 : classNames.heading\n      }),\n      \"data-slot\": \"heading\",\n      children: item.rendered\n    })), /* @__PURE__ */(0, import_jsx_runtime3.jsxs)(\"ul\", _objectSpread({}, groupProps, {\n      className: slots.group({\n        class: classNames == null ? void 0 : classNames.group\n      }),\n      \"data-has-title\": !!item.rendered,\n      \"data-slot\": \"group\",\n      children: [_toConsumableArray(item.childNodes).map(function (node) {\n        var nodeKey = node.key,\n          nodeProps = node.props;\n        var menuItem2 = /* @__PURE__ */(0, import_jsx_runtime3.jsx)(menu_item_default, _objectSpread({\n          classNames: itemClasses,\n          closeOnSelect: closeOnSelect,\n          color: color,\n          disableAnimation: disableAnimation,\n          item: node,\n          state: state,\n          variant: variant,\n          onAction: onAction\n        }, nodeProps), nodeKey);\n        if (node.wrapper) {\n          menuItem2 = node.wrapper(menuItem2);\n        }\n        return menuItem2;\n      }), showDivider && /* @__PURE__ */(0, import_jsx_runtime3.jsx)(import_divider.Divider, _objectSpread({\n        as: \"li\",\n        className: slots.divider({\n          class: dividerStyles\n        })\n      }, dividerProps))]\n    }))]\n  }));\n});\nMenuSection.displayName = \"NextUI.MenuSection\";\nvar menu_section_default = MenuSection;\n\n// src/menu.tsx\nvar import_jsx_runtime4 = require(\"react/jsx-runtime\");\nvar Menu = (0, import_system4.forwardRef)(function (props, ref) {\n  var _useMenu2 = _useMenu(_objectSpread({}, props, {\n      ref: ref\n    })),\n    Component = _useMenu2.Component,\n    state = _useMenu2.state,\n    getMenuProps = _useMenu2.getMenuProps,\n    closeOnSelect = _useMenu2.closeOnSelect,\n    color = _useMenu2.color,\n    disableAnimation = _useMenu2.disableAnimation,\n    variant = _useMenu2.variant,\n    onClose = _useMenu2.onClose,\n    onAction = _useMenu2.onAction,\n    itemClasses = _useMenu2.itemClasses;\n  return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(Component, _objectSpread({}, getMenuProps(), {\n    children: _toConsumableArray(state.collection).map(function (item) {\n      var itemProps = _objectSpread({\n        closeOnSelect: closeOnSelect,\n        color: color,\n        disableAnimation: disableAnimation,\n        item: item,\n        state: state,\n        variant: variant,\n        onClose: onClose,\n        onAction: onAction\n      }, item.props);\n      if (item.type === \"section\") {\n        return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(menu_section_default, _objectSpread({}, itemProps, {\n          itemClasses: itemClasses\n        }), item.key);\n      }\n      var menuItem2 = /* @__PURE__ */(0, import_jsx_runtime4.jsx)(menu_item_default, _objectSpread({}, itemProps, {\n        classNames: itemClasses\n      }), item.key);\n      if (item.wrapper) {\n        menuItem2 = item.wrapper(menuItem2);\n      }\n      return menuItem2;\n    })\n  }));\n});\nMenu.displayName = \"NextUI.Menu\";\nvar menu_default = Menu;\n\n// src/base/menu-item-base.tsx\nvar import_aria_utils = require(\"@nextui-org/aria-utils\");\nvar MenuItemBase = import_aria_utils.BaseItem;\nvar menu_item_base_default = MenuItemBase;\n\n// src/base/menu-section-base.tsx\nvar import_aria_utils2 = require(\"@nextui-org/aria-utils\");\nvar MenuSectionBase = import_aria_utils2.BaseSection;\nvar menu_section_base_default = MenuSectionBase;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Menu: Menu,\n  MenuItem: MenuItem,\n  MenuSection: MenuSection,\n  useMenu: _useMenu\n});","map":null,"metadata":{},"sourceType":"script"}