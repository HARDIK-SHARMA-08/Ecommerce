{"ast":null,"code":"\"use client\";\n\"use strict\";\n\nvar _objectSpread = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __reExport = function __reExport(target, mod, secondTarget) {\n  return __copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\");\n};\nvar __toESM = function __toESM(mod, isNodeMode, target) {\n  return target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n    value: mod,\n    enumerable: true\n  }) : target, mod);\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  assignRef: function assignRef() {\n    return _assignRef;\n  },\n  canUseDOM: function canUseDOM() {\n    return _canUseDOM;\n  },\n  createContext: function createContext() {\n    return createContext2;\n  },\n  createDOMRef: function createDOMRef() {\n    return _createDOMRef;\n  },\n  createFocusableRef: function createFocusableRef() {\n    return _createFocusableRef;\n  },\n  detectBrowser: function detectBrowser() {\n    return _detectBrowser;\n  },\n  detectDeviceType: function detectDeviceType() {\n    return _detectDeviceType;\n  },\n  detectOS: function detectOS() {\n    return _detectOS;\n  },\n  detectTouch: function detectTouch() {\n    return _detectTouch;\n  },\n  getCSSStyleVal: function getCSSStyleVal() {\n    return _getCSSStyleVal;\n  },\n  getRealShape: function getRealShape() {\n    return _getRealShape;\n  },\n  getUserAgentBrowser: function getUserAgentBrowser() {\n    return _getUserAgentBrowser;\n  },\n  getUserAgentOS: function getUserAgentOS() {\n    return _getUserAgentOS;\n  },\n  isBrowser: function isBrowser() {\n    return _isBrowser;\n  },\n  mergeRefs: function mergeRefs() {\n    return _mergeRefs;\n  },\n  useDOMRef: function useDOMRef() {\n    return _useDOMRef;\n  },\n  useFocusableRef: function useFocusableRef() {\n    return _useFocusableRef;\n  },\n  useSyncRef: function useSyncRef() {\n    return _useSyncRef;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/context.ts\nvar React = __toESM(require(\"react\"));\nfunction createContext2() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$strict = options.strict,\n    strict = _options$strict === void 0 ? true : _options$strict,\n    _options$errorMessage = options.errorMessage,\n    errorMessage = _options$errorMessage === void 0 ? \"useContext: `context` is undefined. Seems you forgot to wrap component within the Provider\" : _options$errorMessage,\n    name = options.name;\n  var Context = React.createContext(void 0);\n  Context.displayName = name;\n  function useContext2() {\n    var _a;\n    var context = React.useContext(Context);\n    if (!context && strict) {\n      var error = new Error(errorMessage);\n      error.name = \"ContextError\";\n      (_a = Error.captureStackTrace) == null ? void 0 : _a.call(Error, error, useContext2);\n      throw error;\n    }\n    return context;\n  }\n  return [Context.Provider, useContext2, Context];\n}\n\n// src/refs.ts\nvar import_shared_utils = require(\"@nextui-org/shared-utils\");\nfunction _assignRef(ref, value) {\n  if (ref == null) return;\n  if ((0, import_shared_utils.isFunction)(ref)) {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(\"Cannot assign value '\".concat(value, \"' to ref '\").concat(ref, \"'\"));\n  }\n}\nfunction _mergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  return function (node) {\n    refs.forEach(function (ref) {\n      return _assignRef(ref, node);\n    });\n  };\n}\n\n// src/dom.ts\nvar import_react = require(\"react\");\nfunction _canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\nvar _isBrowser = _canUseDOM();\nfunction _getUserAgentBrowser(navigator) {\n  var ua = navigator.userAgent,\n    vendor = navigator.vendor;\n  var android = /(android)/i.test(ua);\n  switch (true) {\n    case /CriOS/.test(ua):\n      return \"Chrome for iOS\";\n    case /Edg\\//.test(ua):\n      return \"Edge\";\n    case android && /Silk\\//.test(ua):\n      return \"Silk\";\n    case /Chrome/.test(ua) && /Google Inc/.test(vendor):\n      return \"Chrome\";\n    case /Firefox\\/\\d+\\.\\d+$/.test(ua):\n      return \"Firefox\";\n    case android:\n      return \"AOSP\";\n    case /MSIE|Trident/.test(ua):\n      return \"IE\";\n    case /Safari/.test(navigator.userAgent) && /Apple Computer/.test(ua):\n      return \"Safari\";\n    case /AppleWebKit/.test(ua):\n      return \"WebKit\";\n    default:\n      return null;\n  }\n}\nfunction _getUserAgentOS(navigator) {\n  var ua = navigator.userAgent,\n    platform = navigator.platform;\n  switch (true) {\n    case /Android/.test(ua):\n      return \"Android\";\n    case /iPhone|iPad|iPod/.test(platform):\n      return \"iOS\";\n    case /Win/.test(platform):\n      return \"Windows\";\n    case /Mac/.test(platform):\n      return \"Mac\";\n    case /CrOS/.test(ua):\n      return \"Chrome OS\";\n    case /Firefox/.test(ua):\n      return \"Firefox OS\";\n    default:\n      return null;\n  }\n}\nfunction _detectDeviceType(navigator) {\n  var ua = navigator.userAgent;\n  if (/(tablet)|(iPad)|(Nexus 9)/i.test(ua)) return \"tablet\";\n  if (/(mobi)/i.test(ua)) return \"phone\";\n  return \"desktop\";\n}\nfunction _detectOS(os) {\n  if (!_isBrowser) return false;\n  return _getUserAgentOS(window.navigator) === os;\n}\nfunction _detectBrowser(browser) {\n  if (!_isBrowser) return false;\n  return _getUserAgentBrowser(window.navigator) === browser;\n}\nfunction _detectTouch() {\n  if (!_isBrowser) return false;\n  return window.ontouchstart === null && window.ontouchmove === null && window.ontouchend === null;\n}\nfunction _createDOMRef(ref) {\n  return {\n    UNSAFE_getDOMNode: function UNSAFE_getDOMNode() {\n      return ref.current;\n    }\n  };\n}\nfunction _createFocusableRef(domRef) {\n  var focusableRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : domRef;\n  return _objectSpread({}, _createDOMRef(domRef), {\n    focus: function focus() {\n      if (focusableRef.current) {\n        focusableRef.current.focus();\n      }\n    }\n  });\n}\nfunction _useDOMRef(ref) {\n  var domRef = (0, import_react.useRef)(null);\n  (0, import_react.useImperativeHandle)(ref, function () {\n    return domRef.current;\n  });\n  return domRef;\n}\nfunction _useFocusableRef(ref, focusableRef) {\n  var domRef = (0, import_react.useRef)(null);\n  (0, import_react.useImperativeHandle)(ref, function () {\n    return _createFocusableRef(domRef, focusableRef);\n  });\n  return domRef;\n}\nfunction _useSyncRef(context, ref) {\n  (0, import_react.useLayoutEffect)(function () {\n    if (context && context.ref && ref && ref.current) {\n      context.ref.current = ref.current;\n      return function () {\n        var _a;\n        if ((_a = context.ref) == null ? void 0 : _a.current) {\n          context.ref.current = null;\n        }\n      };\n    }\n  }, [context, ref]);\n}\n\n// src/dimensions.ts\nvar _getCSSStyleVal = function _getCSSStyleVal(str, parentNum) {\n  if (!str) return 0;\n  var strVal = str.includes(\"px\") ? +str.split(\"px\")[0] : str.includes(\"%\") ? +str.split(\"%\")[0] * parentNum * 0.01 : str;\n  return Number.isNaN(+strVal) ? 0 : +strVal;\n};\nvar _getRealShape = function _getRealShape(el) {\n  var defaultShape = {\n    width: 0,\n    height: 0\n  };\n  if (!el || typeof window === \"undefined\") return defaultShape;\n  var rect = el.getBoundingClientRect();\n  var _window$getComputedSt = window.getComputedStyle(el),\n    width = _window$getComputedSt.width,\n    height = _window$getComputedSt.height;\n  return {\n    width: _getCSSStyleVal(\"\".concat(width), rect.width),\n    height: _getCSSStyleVal(\"\".concat(height), rect.height)\n  };\n};\n\n// src/index.ts\n__reExport(src_exports, require(\"@nextui-org/react-rsc-utils\"), module.exports);\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  assignRef: _assignRef,\n  canUseDOM: _canUseDOM,\n  createContext: createContext,\n  createDOMRef: _createDOMRef,\n  createFocusableRef: _createFocusableRef,\n  detectBrowser: _detectBrowser,\n  detectDeviceType: _detectDeviceType,\n  detectOS: _detectOS,\n  detectTouch: _detectTouch,\n  getCSSStyleVal: _getCSSStyleVal,\n  getRealShape: _getRealShape,\n  getUserAgentBrowser: _getUserAgentBrowser,\n  getUserAgentOS: _getUserAgentOS,\n  isBrowser: _isBrowser,\n  mergeRefs: _mergeRefs,\n  useDOMRef: _useDOMRef,\n  useFocusableRef: _useFocusableRef,\n  useSyncRef: _useSyncRef\n});","map":null,"metadata":{},"sourceType":"script"}