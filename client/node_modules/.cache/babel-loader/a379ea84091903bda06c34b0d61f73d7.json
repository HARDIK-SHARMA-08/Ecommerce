{"ast":null,"code":"\"use client\";\n\"use strict\";\n\nvar _toConsumableArray = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\nvar _objectSpread = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nvar _slicedToArray = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nvar _objectWithoutProperties = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectWithoutProperties\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toESM = function __toESM(mod, isNodeMode, target) {\n  return target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n    value: mod,\n    enumerable: true\n  }) : target, mod);\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Accordion: function Accordion() {\n    return accordion_default;\n  },\n  AccordionItem: function AccordionItem() {\n    return accordion_item_base_default;\n  },\n  useAccordion: function useAccordion() {\n    return _useAccordion;\n  },\n  useAccordionItem: function useAccordionItem() {\n    return _useAccordionItem;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/base/accordion-item-base.tsx\nvar import_aria_utils = require(\"@nextui-org/aria-utils\");\nvar AccordionItemBase = import_aria_utils.BaseItem;\nvar accordion_item_base_default = AccordionItemBase;\n\n// src/accordion.tsx\nvar import_system2 = require(\"@nextui-org/system\");\nvar import_framer_motion2 = require(\"framer-motion\");\nvar import_divider = require(\"@nextui-org/divider\");\nvar import_react5 = require(\"react\");\n\n// src/use-accordion.ts\nvar import_react_utils = require(\"@nextui-org/react-utils\");\nvar import_react = __toESM(require(\"react\"));\nvar import_tree = require(\"@react-stately/tree\");\nvar import_utils = require(\"@react-aria/utils\");\nvar import_theme = require(\"@nextui-org/theme\");\nvar import_react_utils2 = require(\"@nextui-org/react-utils\");\nvar import_react2 = require(\"react\");\nvar import_use_aria_accordion = require(\"@nextui-org/use-aria-accordion\");\nfunction _useAccordion(props) {\n  var ref = props.ref,\n    as = props.as,\n    children = props.children,\n    className = props.className,\n    items = props.items,\n    variant = props.variant,\n    motionProps = props.motionProps,\n    expandedKeys = props.expandedKeys,\n    disabledKeys = props.disabledKeys,\n    selectedKeys = props.selectedKeys,\n    defaultExpandedKeys = props.defaultExpandedKeys,\n    _props$selectionMode = props.selectionMode,\n    selectionMode = _props$selectionMode === void 0 ? \"single\" : _props$selectionMode,\n    _props$selectionBehav = props.selectionBehavior,\n    selectionBehavior = _props$selectionBehav === void 0 ? \"toggle\" : _props$selectionBehav,\n    _props$keepContentMou = props.keepContentMounted,\n    keepContentMounted = _props$keepContentMou === void 0 ? false : _props$keepContentMou,\n    disallowEmptySelection = props.disallowEmptySelection,\n    defaultSelectedKeys = props.defaultSelectedKeys,\n    onExpandedChange = props.onExpandedChange,\n    onSelectionChange = props.onSelectionChange,\n    _props$dividerProps = props.dividerProps,\n    dividerProps = _props$dividerProps === void 0 ? {} : _props$dividerProps,\n    _props$isCompact = props.isCompact,\n    isCompact = _props$isCompact === void 0 ? false : _props$isCompact,\n    _props$isDisabled = props.isDisabled,\n    isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,\n    _props$showDivider = props.showDivider,\n    showDivider = _props$showDivider === void 0 ? true : _props$showDivider,\n    _props$hideIndicator = props.hideIndicator,\n    hideIndicator = _props$hideIndicator === void 0 ? false : _props$hideIndicator,\n    _props$disableAnimati = props.disableAnimation,\n    disableAnimation = _props$disableAnimati === void 0 ? false : _props$disableAnimati,\n    _props$disableIndicat = props.disableIndicatorAnimation,\n    disableIndicatorAnimation = _props$disableIndicat === void 0 ? false : _props$disableIndicat,\n    itemClasses = props.itemClasses,\n    otherProps = _objectWithoutProperties(props, [\"ref\", \"as\", \"children\", \"className\", \"items\", \"variant\", \"motionProps\", \"expandedKeys\", \"disabledKeys\", \"selectedKeys\", \"defaultExpandedKeys\", \"selectionMode\", \"selectionBehavior\", \"keepContentMounted\", \"disallowEmptySelection\", \"defaultSelectedKeys\", \"onExpandedChange\", \"onSelectionChange\", \"dividerProps\", \"isCompact\", \"isDisabled\", \"showDivider\", \"hideIndicator\", \"disableAnimation\", \"disableIndicatorAnimation\", \"itemClasses\"]);\n  var _ref = (0, import_react2.useState)(null),\n    _ref2 = _slicedToArray(_ref, 2),\n    focusedKey = _ref2[0],\n    setFocusedKey = _ref2[1];\n  var Component = as || \"div\";\n  var shouldFilterDOMProps = typeof Component === \"string\";\n  var domRef = (0, import_react_utils2.useDOMRef)(ref);\n  var classNames = (0, import_react2.useMemo)(function () {\n    return (0, import_theme.accordion)({\n      variant: variant,\n      className: className\n    });\n  }, [variant, className]);\n  var treeChildren = (0, import_react2.useMemo)(function () {\n    var treeChildren2 = [];\n    import_react.default.Children.map(children, function (child) {\n      var _a;\n      if (import_react.default.isValidElement(child) && typeof ((_a = child.props) == null ? void 0 : _a.children) !== \"string\") {\n        var clonedChild = import_react.default.cloneElement(child, {\n          hasChildItems: false\n        });\n        treeChildren2.push(clonedChild);\n      } else {\n        treeChildren2.push(child);\n      }\n    });\n    return treeChildren2;\n  }, [children]);\n  var commonProps = {\n    children: treeChildren,\n    items: items\n  };\n  var expandableProps = {\n    expandedKeys: expandedKeys,\n    defaultExpandedKeys: defaultExpandedKeys,\n    onExpandedChange: onExpandedChange\n  };\n  var treeProps = _objectSpread({\n    disabledKeys: disabledKeys,\n    selectedKeys: selectedKeys,\n    selectionMode: selectionMode,\n    selectionBehavior: selectionBehavior,\n    disallowEmptySelection: disallowEmptySelection,\n    defaultSelectedKeys: defaultSelectedKeys != null ? defaultSelectedKeys : defaultExpandedKeys,\n    onSelectionChange: onSelectionChange\n  }, commonProps, expandableProps);\n  var state = (0, import_tree.useTreeState)(treeProps);\n  state.selectionManager.setFocusedKey = function (key) {\n    setFocusedKey(key);\n  };\n  var _ref3 = (0, import_use_aria_accordion.useReactAriaAccordion)(_objectSpread({}, commonProps, expandableProps), state, domRef),\n    accordionProps = _ref3.accordionProps;\n  var values = (0, import_react2.useMemo)(function () {\n    return {\n      state: state,\n      focusedKey: focusedKey,\n      motionProps: motionProps,\n      isCompact: isCompact,\n      isDisabled: isDisabled,\n      hideIndicator: hideIndicator,\n      disableAnimation: disableAnimation,\n      keepContentMounted: keepContentMounted,\n      disableIndicatorAnimation: disableIndicatorAnimation\n    };\n  }, [focusedKey, isCompact, isDisabled, hideIndicator, selectedKeys, disableAnimation, keepContentMounted, state == null ? void 0 : state.expandedKeys.values, disableIndicatorAnimation, state.expandedKeys.size, state.disabledKeys.size, motionProps]);\n  var getBaseProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      ref: domRef,\n      className: classNames,\n      \"data-orientation\": \"vertical\"\n    }, (0, import_utils.mergeProps)(accordionProps, (0, import_react_utils.filterDOMProps)(otherProps, {\n      enabled: shouldFilterDOMProps\n    }), props2));\n  }, []);\n  var handleFocusChanged = (0, import_react.useCallback)(function (isFocused, key) {\n    isFocused && setFocusedKey(key);\n  }, []);\n  return {\n    Component: Component,\n    values: values,\n    state: state,\n    focusedKey: focusedKey,\n    getBaseProps: getBaseProps,\n    isSplitted: variant === \"splitted\",\n    classNames: classNames,\n    showDivider: showDivider,\n    dividerProps: dividerProps,\n    disableAnimation: disableAnimation,\n    handleFocusChanged: handleFocusChanged,\n    itemClasses: itemClasses\n  };\n}\n\n// src/accordion-item.tsx\nvar import_system = require(\"@nextui-org/system\");\nvar import_react4 = require(\"react\");\nvar import_shared_icons = require(\"@nextui-org/shared-icons\");\nvar import_framer_motion = require(\"framer-motion\");\nvar import_framer_transitions = require(\"@nextui-org/framer-transitions\");\n\n// src/use-accordion-item.ts\nvar import_focus = require(\"@react-aria/focus\");\nvar import_theme2 = require(\"@nextui-org/theme\");\nvar import_shared_utils = require(\"@nextui-org/shared-utils\");\nvar import_react_utils3 = require(\"@nextui-org/react-utils\");\nvar import_use_aria_accordion2 = require(\"@nextui-org/use-aria-accordion\");\nvar import_react3 = require(\"react\");\nvar import_utils2 = require(\"@react-aria/utils\");\nvar import_interactions = require(\"@react-aria/interactions\");\nfunction _useAccordionItem(props) {\n  var _a;\n  var ref = props.ref,\n    as = props.as,\n    item = props.item,\n    onFocusChange = props.onFocusChange;\n  var state = props.state,\n    className = props.className,\n    indicator = props.indicator,\n    children = props.children,\n    title = props.title,\n    subtitle = props.subtitle,\n    startContent = props.startContent,\n    motionProps = props.motionProps,\n    focusedKey = props.focusedKey,\n    _props$isCompact2 = props.isCompact,\n    isCompact = _props$isCompact2 === void 0 ? false : _props$isCompact2,\n    _props$classNames = props.classNames,\n    classNamesProp = _props$classNames === void 0 ? {} : _props$classNames,\n    _props$isDisabled2 = props.isDisabled,\n    isDisabledProp = _props$isDisabled2 === void 0 ? false : _props$isDisabled2,\n    _props$hideIndicator2 = props.hideIndicator,\n    hideIndicator = _props$hideIndicator2 === void 0 ? false : _props$hideIndicator2,\n    _props$disableAnimati2 = props.disableAnimation,\n    disableAnimation = _props$disableAnimati2 === void 0 ? false : _props$disableAnimati2,\n    _props$keepContentMou2 = props.keepContentMounted,\n    keepContentMounted = _props$keepContentMou2 === void 0 ? false : _props$keepContentMou2,\n    _props$disableIndicat2 = props.disableIndicatorAnimation,\n    disableIndicatorAnimation = _props$disableIndicat2 === void 0 ? false : _props$disableIndicat2,\n    onPress = props.onPress,\n    onPressStart = props.onPressStart,\n    onPressEnd = props.onPressEnd,\n    onPressChange = props.onPressChange,\n    onPressUp = props.onPressUp,\n    onClick = props.onClick,\n    otherProps = _objectWithoutProperties(props, [\"state\", \"className\", \"indicator\", \"children\", \"title\", \"subtitle\", \"startContent\", \"motionProps\", \"focusedKey\", \"isCompact\", \"classNames\", \"isDisabled\", \"hideIndicator\", \"disableAnimation\", \"keepContentMounted\", \"disableIndicatorAnimation\", \"onPress\", \"onPressStart\", \"onPressEnd\", \"onPressChange\", \"onPressUp\", \"onClick\"]);\n  var Component = as || \"div\";\n  var shouldFilterDOMProps = typeof Component === \"string\";\n  var domRef = (0, import_react_utils3.useDOMRef)(ref);\n  var isDisabled = state.disabledKeys.has(item.key) || isDisabledProp;\n  var isOpen = state.selectionManager.isSelected(item.key);\n  var _ref4 = (0, import_use_aria_accordion2.useReactAriaAccordionItem)({\n      item: item,\n      isDisabled: isDisabled\n    }, _objectSpread({}, state, {\n      focusedKey: focusedKey\n    }), domRef),\n    buttonCompleteProps = _ref4.buttonProps,\n    regionProps = _ref4.regionProps;\n  var onFocusButton = buttonCompleteProps.onFocus,\n    onBlurButton = buttonCompleteProps.onBlur,\n    buttonProps = _objectWithoutProperties(buttonCompleteProps, [\"onFocus\", \"onBlur\"]);\n  var _ref5 = (0, import_focus.useFocusRing)({\n      autoFocus: (_a = item.props) == null ? void 0 : _a.autoFocus\n    }),\n    isFocused = _ref5.isFocused,\n    isFocusVisible = _ref5.isFocusVisible,\n    focusProps = _ref5.focusProps;\n  var _ref6 = (0, import_interactions.useHover)({\n      isDisabled: isDisabled\n    }),\n    isHovered = _ref6.isHovered,\n    hoverProps = _ref6.hoverProps;\n  var _ref7 = (0, import_interactions.usePress)({\n      ref: domRef,\n      isDisabled: isDisabled,\n      onPress: onPress,\n      onPressStart: onPressStart,\n      onPressEnd: onPressEnd,\n      onPressChange: onPressChange,\n      onPressUp: onPressUp\n    }),\n    pressProps = _ref7.pressProps,\n    isPressed = _ref7.isPressed;\n  var handleFocus = (0, import_react3.useCallback)(function () {\n    onFocusChange == null ? void 0 : onFocusChange(true, item.key);\n  }, []);\n  var handleBlur = (0, import_react3.useCallback)(function () {\n    onFocusChange == null ? void 0 : onFocusChange(false, item.key);\n  }, []);\n  var classNames = (0, import_react3.useMemo)(function () {\n    return _objectSpread({}, classNamesProp);\n  }, _toConsumableArray(Object.values(classNamesProp)));\n  var slots = (0, import_react3.useMemo)(function () {\n    return (0, import_theme2.accordionItem)({\n      isCompact: isCompact,\n      isDisabled: isDisabled,\n      hideIndicator: hideIndicator,\n      disableAnimation: disableAnimation,\n      disableIndicatorAnimation: disableIndicatorAnimation\n    });\n  }, [isCompact, isDisabled, hideIndicator, disableAnimation, disableIndicatorAnimation]);\n  var baseStyles = (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.base, className);\n  var getBaseProps = (0, import_react3.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      \"data-open\": (0, import_shared_utils.dataAttr)(isOpen),\n      \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n      className: slots.base({\n        class: baseStyles\n      })\n    }, (0, import_utils2.mergeProps)((0, import_react_utils3.filterDOMProps)(otherProps, {\n      enabled: shouldFilterDOMProps\n    }), props2));\n  }, [baseStyles, shouldFilterDOMProps, otherProps, slots, item.props, isOpen, isDisabled]);\n  var getButtonProps = function getButtonProps() {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _a2, _b;\n    return _objectSpread({\n      ref: domRef,\n      \"data-open\": (0, import_shared_utils.dataAttr)(isOpen),\n      \"data-focus\": (0, import_shared_utils.dataAttr)(isFocused),\n      \"data-focus-visible\": (0, import_shared_utils.dataAttr)(isFocusVisible),\n      \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n      \"data-hover\": (0, import_shared_utils.dataAttr)(isHovered),\n      \"data-pressed\": (0, import_shared_utils.dataAttr)(isPressed),\n      className: slots.trigger({\n        class: classNames == null ? void 0 : classNames.trigger\n      }),\n      onFocus: (0, import_shared_utils.callAllHandlers)(handleFocus, onFocusButton, focusProps.onFocus, otherProps.onFocus, (_a2 = item.props) == null ? void 0 : _a2.onFocus),\n      onBlur: (0, import_shared_utils.callAllHandlers)(handleBlur, onBlurButton, focusProps.onBlur, otherProps.onBlur, (_b = item.props) == null ? void 0 : _b.onBlur)\n    }, (0, import_utils2.mergeProps)(buttonProps, hoverProps, pressProps, props2), {\n      onClick: (0, import_utils2.chain)(pressProps.onClick, onClick)\n    });\n  };\n  var getContentProps = (0, import_react3.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      \"data-open\": (0, import_shared_utils.dataAttr)(isOpen),\n      \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n      className: slots.content({\n        class: classNames == null ? void 0 : classNames.content\n      })\n    }, (0, import_utils2.mergeProps)(regionProps, props2));\n  }, [slots, classNames, regionProps, isOpen, isDisabled, classNames == null ? void 0 : classNames.content]);\n  var getIndicatorProps = (0, import_react3.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      \"aria-hidden\": (0, import_shared_utils.dataAttr)(true),\n      \"data-open\": (0, import_shared_utils.dataAttr)(isOpen),\n      \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n      className: slots.indicator({\n        class: classNames == null ? void 0 : classNames.indicator\n      })\n    }, props2);\n  }, [slots, classNames == null ? void 0 : classNames.indicator, isOpen, isDisabled, classNames == null ? void 0 : classNames.indicator]);\n  var getHeadingProps = (0, import_react3.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      \"data-open\": (0, import_shared_utils.dataAttr)(isOpen),\n      \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n      className: slots.heading({\n        class: classNames == null ? void 0 : classNames.heading\n      })\n    }, props2);\n  }, [slots, classNames == null ? void 0 : classNames.heading, isOpen, isDisabled, classNames == null ? void 0 : classNames.heading]);\n  var getTitleProps = (0, import_react3.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      \"data-open\": (0, import_shared_utils.dataAttr)(isOpen),\n      \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n      className: slots.title({\n        class: classNames == null ? void 0 : classNames.title\n      })\n    }, props2);\n  }, [slots, classNames == null ? void 0 : classNames.title, isOpen, isDisabled, classNames == null ? void 0 : classNames.title]);\n  var getSubtitleProps = (0, import_react3.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({\n      \"data-open\": (0, import_shared_utils.dataAttr)(isOpen),\n      \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n      className: slots.subtitle({\n        class: classNames == null ? void 0 : classNames.subtitle\n      })\n    }, props2);\n  }, [slots, classNames, isOpen, isDisabled, classNames == null ? void 0 : classNames.subtitle]);\n  return {\n    Component: Component,\n    item: item,\n    slots: slots,\n    classNames: classNames,\n    domRef: domRef,\n    indicator: indicator,\n    children: children,\n    title: title,\n    subtitle: subtitle,\n    startContent: startContent,\n    isOpen: isOpen,\n    isDisabled: isDisabled,\n    hideIndicator: hideIndicator,\n    keepContentMounted: keepContentMounted,\n    disableAnimation: disableAnimation,\n    motionProps: motionProps,\n    getBaseProps: getBaseProps,\n    getHeadingProps: getHeadingProps,\n    getButtonProps: getButtonProps,\n    getContentProps: getContentProps,\n    getIndicatorProps: getIndicatorProps,\n    getTitleProps: getTitleProps,\n    getSubtitleProps: getSubtitleProps\n  };\n}\n\n// src/accordion-item.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar AccordionItem = (0, import_system.forwardRef)(function (props, ref) {\n  var _useAccordionItem2 = _useAccordionItem(_objectSpread({}, props, {\n      ref: ref\n    })),\n    Component = _useAccordionItem2.Component,\n    classNames = _useAccordionItem2.classNames,\n    slots = _useAccordionItem2.slots,\n    indicator = _useAccordionItem2.indicator,\n    children = _useAccordionItem2.children,\n    title = _useAccordionItem2.title,\n    subtitle = _useAccordionItem2.subtitle,\n    startContent = _useAccordionItem2.startContent,\n    isOpen = _useAccordionItem2.isOpen,\n    isDisabled = _useAccordionItem2.isDisabled,\n    hideIndicator = _useAccordionItem2.hideIndicator,\n    keepContentMounted = _useAccordionItem2.keepContentMounted,\n    disableAnimation = _useAccordionItem2.disableAnimation,\n    motionProps = _useAccordionItem2.motionProps,\n    getBaseProps = _useAccordionItem2.getBaseProps,\n    getHeadingProps = _useAccordionItem2.getHeadingProps,\n    getButtonProps = _useAccordionItem2.getButtonProps,\n    getTitleProps = _useAccordionItem2.getTitleProps,\n    getSubtitleProps = _useAccordionItem2.getSubtitleProps,\n    getContentProps = _useAccordionItem2.getContentProps,\n    getIndicatorProps = _useAccordionItem2.getIndicatorProps;\n  var willChange = (0, import_framer_motion.useWillChange)();\n  var indicatorContent = (0, import_react4.useMemo)(function () {\n    if (typeof indicator === \"function\") {\n      return indicator({\n        indicator: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_shared_icons.ChevronIcon, {}),\n        isOpen: isOpen,\n        isDisabled: isDisabled\n      });\n    }\n    if (indicator) return indicator;\n    return null;\n  }, [indicator, isOpen, isDisabled]);\n  var indicatorComponent = indicatorContent || /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_shared_icons.ChevronIcon, {});\n  var content = (0, import_react4.useMemo)(function () {\n    if (disableAnimation) {\n      return /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"div\", _objectSpread({}, getContentProps(), {\n        children: children\n      }));\n    }\n    return keepContentMounted ? /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_framer_motion.motion.section, _objectSpread({\n      animate: isOpen ? \"enter\" : \"exit\",\n      exit: \"exit\",\n      initial: \"exit\",\n      style: {\n        overflowY: \"hidden\",\n        willChange: willChange\n      },\n      variants: import_framer_transitions.TRANSITION_VARIANTS.collapse\n    }, motionProps, {\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"div\", _objectSpread({}, getContentProps(), {\n        children: children\n      }))\n    }), \"accordion-content\") : /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_framer_motion.AnimatePresence, {\n      initial: false,\n      children: isOpen && /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_framer_motion.motion.section, _objectSpread({\n        animate: \"enter\",\n        exit: \"exit\",\n        initial: \"exit\",\n        style: {\n          overflowY: \"hidden\",\n          willChange: willChange\n        },\n        variants: import_framer_transitions.TRANSITION_VARIANTS.collapse\n      }, motionProps, {\n        children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"div\", _objectSpread({}, getContentProps(), {\n          children: children\n        }))\n      }), \"accordion-content\")\n    });\n  }, [isOpen, disableAnimation, keepContentMounted, children, motionProps]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsxs)(Component, _objectSpread({}, getBaseProps(), {\n    children: [/* @__PURE__ */(0, import_jsx_runtime.jsx)(\"h2\", _objectSpread({}, getHeadingProps(), {\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsxs)(\"button\", _objectSpread({}, getButtonProps(), {\n        children: [startContent && /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"div\", {\n          className: slots.startContent({\n            class: classNames == null ? void 0 : classNames.startContent\n          }),\n          children: startContent\n        }), /* @__PURE__ */(0, import_jsx_runtime.jsxs)(\"div\", {\n          className: slots.titleWrapper({\n            class: classNames == null ? void 0 : classNames.titleWrapper\n          }),\n          children: [title && /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"span\", _objectSpread({}, getTitleProps(), {\n            children: title\n          })), subtitle && /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"span\", _objectSpread({}, getSubtitleProps(), {\n            children: subtitle\n          }))]\n        }), !hideIndicator && indicatorComponent && /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"span\", _objectSpread({}, getIndicatorProps(), {\n          children: indicatorComponent\n        }))]\n      }))\n    })), content]\n  }));\n});\nAccordionItem.displayName = \"NextUI.AccordionItem\";\nvar accordion_item_default = AccordionItem;\n\n// src/accordion.tsx\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar AccordionGroup = (0, import_system2.forwardRef)(function (props, ref) {\n  var _useAccordion2 = _useAccordion(_objectSpread({}, props, {\n      ref: ref\n    })),\n    Component = _useAccordion2.Component,\n    values = _useAccordion2.values,\n    state = _useAccordion2.state,\n    isSplitted = _useAccordion2.isSplitted,\n    showDivider = _useAccordion2.showDivider,\n    getBaseProps = _useAccordion2.getBaseProps,\n    disableAnimation = _useAccordion2.disableAnimation,\n    handleFocusChangedProps = _useAccordion2.handleFocusChanged,\n    itemClasses = _useAccordion2.itemClasses;\n  var handleFocusChanged = (0, import_react5.useCallback)(function (isFocused, key) {\n    return handleFocusChangedProps(isFocused, key);\n  }, [handleFocusChangedProps]);\n  var content = (0, import_react5.useMemo)(function () {\n    return _toConsumableArray(state.collection).map(function (item, index) {\n      var classNames = _objectSpread({}, itemClasses, item.props.classNames || {});\n      return /* @__PURE__ */(0, import_jsx_runtime2.jsxs)(import_react5.Fragment, {\n        children: [/* @__PURE__ */(0, import_jsx_runtime2.jsx)(accordion_item_default, _objectSpread({\n          item: item,\n          onFocusChange: handleFocusChanged\n        }, values, item.props, {\n          classNames: classNames\n        })), !isSplitted && showDivider && index < state.collection.size - 1 && /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_divider.Divider, {})]\n      }, item.key);\n    });\n  }, [values, itemClasses, handleFocusChanged, isSplitted, showDivider, state.collection]);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(Component, _objectSpread({}, getBaseProps(), {\n    children: disableAnimation ? content : /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_framer_motion2.LayoutGroup, {\n      children: content\n    })\n  }));\n});\nAccordionGroup.displayName = \"NextUI.Accordion\";\nvar accordion_default = AccordionGroup;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Accordion: Accordion,\n  AccordionItem: AccordionItem,\n  useAccordion: _useAccordion,\n  useAccordionItem: _useAccordionItem\n});","map":null,"metadata":{},"sourceType":"script"}