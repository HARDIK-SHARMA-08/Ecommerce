{"ast":null,"code":"\"use client\";\n\"use strict\";\n\nvar _objectSpread = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nvar _objectWithoutProperties = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectWithoutProperties\");\nvar _slicedToArray = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Checkbox: function Checkbox() {\n    return checkbox_default;\n  },\n  CheckboxGroup: function CheckboxGroup() {\n    return checkbox_group_default;\n  },\n  CheckboxGroupProvider: function CheckboxGroupProvider() {\n    return _CheckboxGroupProvider;\n  },\n  CheckboxIcon: function CheckboxIcon() {\n    return _CheckboxIcon;\n  },\n  useCheckbox: function useCheckbox() {\n    return _useCheckbox;\n  },\n  useCheckboxGroup: function useCheckboxGroup() {\n    return _useCheckboxGroup;\n  },\n  useCheckboxGroupContext: function useCheckboxGroupContext() {\n    return _useCheckboxGroupContext;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/checkbox.tsx\nvar import_system = require(\"@nextui-org/system\");\nvar import_visually_hidden = require(\"@react-aria/visually-hidden\");\nvar import_react3 = require(\"react\");\n\n// src/use-checkbox.ts\nvar import_react = require(\"react\");\nvar import_react2 = require(\"react\");\nvar import_toggle = require(\"@react-stately/toggle\");\nvar import_theme = require(\"@nextui-org/theme\");\nvar import_interactions = require(\"@react-aria/interactions\");\nvar import_focus = require(\"@react-aria/focus\");\nvar import_utils = require(\"@react-aria/utils\");\nvar import_react_utils2 = require(\"@nextui-org/react-utils\");\nvar import_shared_utils = require(\"@nextui-org/shared-utils\");\nvar import_checkbox = require(\"@react-aria/checkbox\");\n\n// src/checkbox-group-context.ts\nvar import_react_utils = require(\"@nextui-org/react-utils\");\nvar _ref = (0, import_react_utils.createContext)({\n    name: \"CheckboxGroupContext\",\n    strict: false\n  }),\n  _ref2 = _slicedToArray(_ref, 2),\n  _CheckboxGroupProvider = _ref2[0],\n  _useCheckboxGroupContext = _ref2[1]; // src/use-checkbox.ts\nfunction _useCheckbox() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _a, _b, _c, _d, _e, _f;\n  var groupContext = _useCheckboxGroupContext();\n  var isInGroup = !!groupContext;\n  var as = props.as,\n    ref = props.ref,\n    _props$value = props.value,\n    value = _props$value === void 0 ? \"\" : _props$value,\n    children = props.children,\n    icon = props.icon,\n    name = props.name,\n    _props$isRequired = props.isRequired,\n    isRequired = _props$isRequired === void 0 ? false : _props$isRequired,\n    _props$isReadOnly = props.isReadOnly,\n    isReadOnlyProp = _props$isReadOnly === void 0 ? false : _props$isReadOnly,\n    _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n    isSelectedProp = props.isSelected,\n    validationState = props.validationState,\n    _props$size = props.size,\n    size = _props$size === void 0 ? (_a = groupContext == null ? void 0 : groupContext.size) != null ? _a : \"md\" : _props$size,\n    _props$color = props.color,\n    color = _props$color === void 0 ? (_b = groupContext == null ? void 0 : groupContext.color) != null ? _b : \"primary\" : _props$color,\n    _props$radius = props.radius,\n    radius = _props$radius === void 0 ? groupContext == null ? void 0 : groupContext.radius : _props$radius,\n    _props$lineThrough = props.lineThrough,\n    lineThrough = _props$lineThrough === void 0 ? (_c = groupContext == null ? void 0 : groupContext.lineThrough) != null ? _c : false : _props$lineThrough,\n    _props$isDisabled = props.isDisabled,\n    isDisabledProp = _props$isDisabled === void 0 ? (_d = groupContext == null ? void 0 : groupContext.isDisabled) != null ? _d : false : _props$isDisabled,\n    _props$disableAnimati = props.disableAnimation,\n    disableAnimation = _props$disableAnimati === void 0 ? (_e = groupContext == null ? void 0 : groupContext.disableAnimation) != null ? _e : false : _props$disableAnimati,\n    _props$isInvalid = props.isInvalid,\n    isInvalid = _props$isInvalid === void 0 ? validationState ? validationState === \"invalid\" : (_f = groupContext == null ? void 0 : groupContext.isInvalid) != null ? _f : false : _props$isInvalid,\n    _props$isIndeterminat = props.isIndeterminate,\n    isIndeterminate = _props$isIndeterminat === void 0 ? false : _props$isIndeterminat,\n    defaultSelected = props.defaultSelected,\n    classNames = props.classNames,\n    onChange = props.onChange,\n    className = props.className,\n    onValueChange = props.onValueChange,\n    otherProps = _objectWithoutProperties(props, [\"as\", \"ref\", \"value\", \"children\", \"icon\", \"name\", \"isRequired\", \"isReadOnly\", \"autoFocus\", \"isSelected\", \"validationState\", \"size\", \"color\", \"radius\", \"lineThrough\", \"isDisabled\", \"disableAnimation\", \"isInvalid\", \"isIndeterminate\", \"defaultSelected\", \"classNames\", \"onChange\", \"className\", \"onValueChange\"]);\n  if (groupContext && import_shared_utils.__DEV__) {\n    if (isSelectedProp) {\n      (0, import_shared_utils.warn)(\"The Checkbox.Group is being used, `isSelected` will be ignored. Use the `value` of the Checkbox.Group instead.\", \"Checkbox\");\n    }\n    if (defaultSelected) {\n      (0, import_shared_utils.warn)(\"The Checkbox.Group is being used, `defaultSelected` will be ignored. Use the `defaultValue` of the Checkbox.Group instead.\", \"Checkbox\");\n    }\n  }\n  var Component = as || \"label\";\n  var inputRef = (0, import_react2.useRef)(null);\n  var domRef = (0, import_react_utils2.useFocusableRef)(ref, inputRef);\n  var labelId = (0, import_react.useId)();\n  var ariaCheckboxProps = (0, import_react2.useMemo)(function () {\n    return {\n      name: name,\n      value: value,\n      children: children,\n      autoFocus: autoFocus,\n      defaultSelected: defaultSelected,\n      isIndeterminate: isIndeterminate,\n      isRequired: isRequired,\n      isInvalid: isInvalid,\n      isSelected: isSelectedProp,\n      isDisabled: isDisabledProp,\n      isReadOnly: isReadOnlyProp,\n      \"aria-label\": (0, import_shared_utils.safeAriaLabel)(otherProps[\"aria-label\"], children),\n      \"aria-labelledby\": otherProps[\"aria-labelledby\"] || labelId,\n      onChange: onValueChange\n    };\n  }, [value, name, labelId, children, autoFocus, isInvalid, isIndeterminate, isDisabledProp, isReadOnlyProp, isSelectedProp, defaultSelected, otherProps[\"aria-label\"], otherProps[\"aria-labelledby\"], onValueChange]);\n  var _ref3 = isInGroup ? (0, import_checkbox.useCheckboxGroupItem)(_objectSpread({}, ariaCheckboxProps, {\n      isInvalid: isInvalid\n    }), groupContext.groupState, inputRef) : (0, import_checkbox.useCheckbox)(ariaCheckboxProps, (0, import_toggle.useToggleState)(ariaCheckboxProps), inputRef),\n    inputProps = _ref3.inputProps,\n    isSelected = _ref3.isSelected,\n    isDisabled = _ref3.isDisabled,\n    isReadOnly = _ref3.isReadOnly,\n    isPressedKeyboard = _ref3.isPressed;\n  var isInteractionDisabled = isDisabled || isReadOnly;\n  var _ref4 = (0, import_react.useState)(false),\n    _ref5 = _slicedToArray(_ref4, 2),\n    isPressed = _ref5[0],\n    setPressed = _ref5[1];\n  var _ref6 = (0, import_interactions.usePress)({\n      isDisabled: isInteractionDisabled,\n      onPressStart: function onPressStart(e) {\n        if (e.pointerType !== \"keyboard\") {\n          setPressed(true);\n        }\n      },\n      onPressEnd: function onPressEnd(e) {\n        if (e.pointerType !== \"keyboard\") {\n          setPressed(false);\n        }\n      }\n    }),\n    pressProps = _ref6.pressProps;\n  var pressed = isInteractionDisabled ? false : isPressed || isPressedKeyboard;\n  if (isRequired) {\n    inputProps.required = true;\n  }\n  var _ref7 = (0, import_interactions.useHover)({\n      isDisabled: inputProps.disabled\n    }),\n    hoverProps = _ref7.hoverProps,\n    isHovered = _ref7.isHovered;\n  var _ref8 = (0, import_focus.useFocusRing)({\n      autoFocus: inputProps.autoFocus\n    }),\n    focusProps = _ref8.focusProps,\n    isFocused = _ref8.isFocused,\n    isFocusVisible = _ref8.isFocusVisible;\n  var slots = (0, import_react2.useMemo)(function () {\n    return (0, import_theme.checkbox)({\n      color: color,\n      size: size,\n      radius: radius,\n      isInvalid: isInvalid,\n      lineThrough: lineThrough,\n      isDisabled: isDisabled,\n      disableAnimation: disableAnimation\n    });\n  }, [color, size, radius, isInvalid, lineThrough, isDisabled, disableAnimation]);\n  var baseStyles = (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.base, className);\n  var getBaseProps = (0, import_react.useCallback)(function () {\n    return _objectSpread({\n      ref: domRef,\n      className: slots.base({\n        class: baseStyles\n      }),\n      \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n      \"data-selected\": (0, import_shared_utils.dataAttr)(isSelected || isIndeterminate),\n      \"data-invalid\": (0, import_shared_utils.dataAttr)(isInvalid),\n      \"data-hover\": (0, import_shared_utils.dataAttr)(isHovered),\n      \"data-focus\": (0, import_shared_utils.dataAttr)(isFocused),\n      \"data-pressed\": (0, import_shared_utils.dataAttr)(pressed),\n      \"data-readonly\": (0, import_shared_utils.dataAttr)(inputProps.readOnly),\n      \"data-focus-visible\": (0, import_shared_utils.dataAttr)(isFocusVisible),\n      \"data-indeterminate\": (0, import_shared_utils.dataAttr)(isIndeterminate)\n    }, (0, import_utils.mergeProps)(hoverProps, pressProps, otherProps));\n  }, [slots, baseStyles, isDisabled, isSelected, isIndeterminate, isInvalid, isHovered, isFocused, pressed, inputProps.readOnly, isFocusVisible, hoverProps, pressProps, otherProps]);\n  var getWrapperProps = (0, import_react.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({}, props2, {\n      \"aria-hidden\": true,\n      className: (0, import_shared_utils.clsx)(slots.wrapper({\n        class: (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.wrapper, props2 == null ? void 0 : props2.className)\n      }))\n    });\n  }, [slots, classNames == null ? void 0 : classNames.wrapper]);\n  var getInputProps = (0, import_react.useCallback)(function () {\n    return _objectSpread({\n      ref: inputRef\n    }, (0, import_utils.mergeProps)(inputProps, focusProps), {\n      onChange: (0, import_utils.chain)(inputProps.onChange, onChange)\n    });\n  }, [inputProps, focusProps, onChange]);\n  var getLabelProps = (0, import_react.useCallback)(function () {\n    return {\n      id: labelId,\n      className: slots.label({\n        class: classNames == null ? void 0 : classNames.label\n      })\n    };\n  }, [slots, classNames == null ? void 0 : classNames.label, isDisabled, isSelected, isInvalid]);\n  var getIconProps = (0, import_react.useCallback)(function () {\n    return {\n      isSelected: isSelected,\n      isIndeterminate: !!isIndeterminate,\n      disableAnimation: !!disableAnimation,\n      className: slots.icon({\n        class: classNames == null ? void 0 : classNames.icon\n      })\n    };\n  }, [slots, classNames == null ? void 0 : classNames.icon, isSelected, isIndeterminate, disableAnimation]);\n  return {\n    Component: Component,\n    icon: icon,\n    children: children,\n    isSelected: isSelected,\n    isDisabled: isDisabled,\n    isInvalid: isInvalid,\n    isFocused: isFocused,\n    isHovered: isHovered,\n    isFocusVisible: isFocusVisible,\n    getBaseProps: getBaseProps,\n    getWrapperProps: getWrapperProps,\n    getInputProps: getInputProps,\n    getLabelProps: getLabelProps,\n    getIconProps: getIconProps\n  };\n}\n\n// src/checkbox-icon.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nfunction CheckIcon(props) {\n  var isSelected = props.isSelected,\n    disableAnimation = props.disableAnimation,\n    otherProps = _objectWithoutProperties(props, [\"isSelected\", \"disableAnimation\"]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"svg\", _objectSpread({\n    \"aria-hidden\": \"true\",\n    role: \"presentation\",\n    viewBox: \"0 0 17 18\"\n  }, otherProps, {\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"polyline\", {\n      fill: \"none\",\n      points: \"1 9 7 14 15 4\",\n      stroke: \"currentColor\",\n      strokeDasharray: 22,\n      strokeDashoffset: isSelected ? 44 : 66,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      strokeWidth: 2,\n      style: !disableAnimation && isSelected ? {\n        transition: \"stroke-dashoffset 250ms linear 0.2s\"\n      } : {}\n    })\n  }));\n}\nfunction IndeterminateIcon(props) {\n  var isSelected = props.isSelected,\n    disableAnimation = props.disableAnimation,\n    otherProps = _objectWithoutProperties(props, [\"isSelected\", \"disableAnimation\"]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"svg\", _objectSpread({\n    stroke: \"currentColor\",\n    strokeWidth: 3,\n    viewBox: \"0 0 24 24\"\n  }, otherProps, {\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"line\", {\n      x1: \"21\",\n      x2: \"3\",\n      y1: \"12\",\n      y2: \"12\"\n    })\n  }));\n}\nfunction _CheckboxIcon(props) {\n  var isIndeterminate = props.isIndeterminate,\n    otherProps = _objectWithoutProperties(props, [\"isIndeterminate\"]);\n  var BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(BaseIcon, _objectSpread({}, otherProps));\n}\n\n// src/checkbox.tsx\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar Checkbox = (0, import_system.forwardRef)(function (props, ref) {\n  var _useCheckbox2 = _useCheckbox(_objectSpread({}, props, {\n      ref: ref\n    })),\n    Component = _useCheckbox2.Component,\n    children = _useCheckbox2.children,\n    _useCheckbox2$icon = _useCheckbox2.icon,\n    icon = _useCheckbox2$icon === void 0 ? /* @__PURE__ */(0, import_jsx_runtime2.jsx)(_CheckboxIcon, {}) : _useCheckbox2$icon,\n    getBaseProps = _useCheckbox2.getBaseProps,\n    getWrapperProps = _useCheckbox2.getWrapperProps,\n    getInputProps = _useCheckbox2.getInputProps,\n    getIconProps = _useCheckbox2.getIconProps,\n    getLabelProps = _useCheckbox2.getLabelProps;\n  var clonedIcon = typeof icon === \"function\" ? icon(getIconProps()) : (0, import_react3.cloneElement)(icon, getIconProps());\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsxs)(Component, _objectSpread({}, getBaseProps(), {\n    children: [/* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_visually_hidden.VisuallyHidden, {\n      children: /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"input\", _objectSpread({}, getInputProps()))\n    }), /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"span\", _objectSpread({}, getWrapperProps(), {\n      children: clonedIcon\n    })), children && /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"span\", _objectSpread({}, getLabelProps(), {\n      children: children\n    }))]\n  }));\n});\nCheckbox.displayName = \"NextUI.Checkbox\";\nvar checkbox_default = Checkbox;\n\n// src/checkbox-group.tsx\nvar import_system2 = require(\"@nextui-org/system\");\n\n// src/use-checkbox-group.ts\nvar import_react4 = require(\"react\");\nvar import_utils2 = require(\"@react-aria/utils\");\nvar import_theme2 = require(\"@nextui-org/theme\");\nvar import_checkbox2 = require(\"@react-aria/checkbox\");\nvar import_checkbox3 = require(\"@react-stately/checkbox\");\nvar import_react_utils3 = require(\"@nextui-org/react-utils\");\nvar import_shared_utils2 = require(\"@nextui-org/shared-utils\");\nfunction _useCheckboxGroup(props) {\n  var as = props.as,\n    ref = props.ref,\n    classNames = props.classNames,\n    children = props.children,\n    label = props.label,\n    radius = props.radius,\n    value = props.value,\n    name = props.name,\n    defaultValue = props.defaultValue,\n    _props$size2 = props.size,\n    size = _props$size2 === void 0 ? \"md\" : _props$size2,\n    _props$color2 = props.color,\n    color = _props$color2 === void 0 ? \"primary\" : _props$color2,\n    _props$orientation = props.orientation,\n    orientation = _props$orientation === void 0 ? \"vertical\" : _props$orientation,\n    _props$lineThrough2 = props.lineThrough,\n    lineThrough = _props$lineThrough2 === void 0 ? false : _props$lineThrough2,\n    _props$isDisabled2 = props.isDisabled,\n    isDisabled = _props$isDisabled2 === void 0 ? false : _props$isDisabled2,\n    _props$disableAnimati2 = props.disableAnimation,\n    disableAnimation = _props$disableAnimati2 === void 0 ? false : _props$disableAnimati2,\n    validationState = props.validationState,\n    _props$isInvalid2 = props.isInvalid,\n    isInvalid = _props$isInvalid2 === void 0 ? validationState === \"invalid\" : _props$isInvalid2,\n    isReadOnly = props.isReadOnly,\n    isRequired = props.isRequired,\n    onValueChange = props.onValueChange,\n    description = props.description,\n    errorMessage = props.errorMessage,\n    className = props.className,\n    otherProps = _objectWithoutProperties(props, [\"as\", \"ref\", \"classNames\", \"children\", \"label\", \"radius\", \"value\", \"name\", \"defaultValue\", \"size\", \"color\", \"orientation\", \"lineThrough\", \"isDisabled\", \"disableAnimation\", \"validationState\", \"isInvalid\", \"isReadOnly\", \"isRequired\", \"onValueChange\", \"description\", \"errorMessage\", \"className\"]);\n  var Component = as || \"div\";\n  var domRef = (0, import_react_utils3.useDOMRef)(ref);\n  var checkboxGroupProps = (0, import_react4.useMemo)(function () {\n    return _objectSpread({\n      value: value,\n      name: name,\n      \"aria-label\": (0, import_shared_utils2.safeAriaLabel)(otherProps[\"aria-label\"], label),\n      defaultValue: defaultValue,\n      isRequired: isRequired,\n      isInvalid: isInvalid,\n      isReadOnly: isReadOnly,\n      orientation: orientation,\n      onChange: onValueChange\n    }, otherProps);\n  }, [value, name, label, defaultValue, isRequired, isReadOnly, isInvalid, orientation, onValueChange, otherProps[\"aria-label\"], otherProps]);\n  var groupState = (0, import_checkbox3.useCheckboxGroupState)(checkboxGroupProps);\n  var _ref9 = (0, import_checkbox2.useCheckboxGroup)(checkboxGroupProps, groupState),\n    labelProps = _ref9.labelProps,\n    groupProps = _ref9.groupProps,\n    descriptionProps = _ref9.descriptionProps,\n    errorMessageProps = _ref9.errorMessageProps;\n  var context = (0, import_react4.useMemo)(function () {\n    return {\n      size: size,\n      color: color,\n      radius: radius,\n      lineThrough: lineThrough,\n      isInvalid: isInvalid,\n      isDisabled: isDisabled,\n      disableAnimation: disableAnimation,\n      groupState: groupState\n    };\n  }, [size, color, radius, lineThrough, isDisabled, disableAnimation, isInvalid, groupState == null ? void 0 : groupState.value, groupState == null ? void 0 : groupState.isDisabled, groupState == null ? void 0 : groupState.isReadOnly, groupState == null ? void 0 : groupState.isInvalid, groupState == null ? void 0 : groupState.isSelected]);\n  var slots = (0, import_react4.useMemo)(function () {\n    return (0, import_theme2.checkboxGroup)({\n      isRequired: isRequired,\n      isInvalid: isInvalid,\n      disableAnimation: disableAnimation\n    });\n  }, [isRequired, isInvalid, disableAnimation]);\n  var baseStyles = (0, import_shared_utils2.clsx)(classNames == null ? void 0 : classNames.base, className);\n  var getGroupProps = (0, import_react4.useCallback)(function () {\n    return _objectSpread({\n      ref: domRef,\n      className: slots.base({\n        class: baseStyles\n      })\n    }, (0, import_utils2.mergeProps)(groupProps, otherProps));\n  }, [slots, domRef, baseStyles, groupProps, otherProps]);\n  var getLabelProps = (0, import_react4.useCallback)(function () {\n    return _objectSpread({\n      className: slots.label({\n        class: classNames == null ? void 0 : classNames.label\n      })\n    }, labelProps);\n  }, [slots, labelProps, classNames == null ? void 0 : classNames.label]);\n  var getWrapperProps = (0, import_react4.useCallback)(function () {\n    return {\n      className: slots.wrapper({\n        class: classNames == null ? void 0 : classNames.wrapper\n      }),\n      role: \"presentation\",\n      \"data-orientation\": orientation\n    };\n  }, [slots, orientation, classNames == null ? void 0 : classNames.wrapper]);\n  var getDescriptionProps = (0, import_react4.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({}, props2, descriptionProps, {\n      className: slots.description({\n        class: (0, import_shared_utils2.clsx)(classNames == null ? void 0 : classNames.description, props2 == null ? void 0 : props2.className)\n      })\n    });\n  }, [slots, descriptionProps, classNames == null ? void 0 : classNames.description]);\n  var getErrorMessageProps = (0, import_react4.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _objectSpread({}, props2, errorMessageProps, {\n      className: slots.errorMessage({\n        class: (0, import_shared_utils2.clsx)(classNames == null ? void 0 : classNames.errorMessage, props2 == null ? void 0 : props2.className)\n      })\n    });\n  }, [slots, errorMessageProps, classNames == null ? void 0 : classNames.errorMessage]);\n  return {\n    Component: Component,\n    children: children,\n    label: label,\n    context: context,\n    description: description,\n    errorMessage: errorMessage,\n    getGroupProps: getGroupProps,\n    getLabelProps: getLabelProps,\n    getWrapperProps: getWrapperProps,\n    getDescriptionProps: getDescriptionProps,\n    getErrorMessageProps: getErrorMessageProps\n  };\n}\n\n// src/checkbox-group.tsx\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar CheckboxGroup = (0, import_system2.forwardRef)(function (props, ref) {\n  var _useCheckboxGroup2 = _useCheckboxGroup(_objectSpread({}, props, {\n      ref: ref\n    })),\n    children = _useCheckboxGroup2.children,\n    context = _useCheckboxGroup2.context,\n    label = _useCheckboxGroup2.label,\n    description = _useCheckboxGroup2.description,\n    errorMessage = _useCheckboxGroup2.errorMessage,\n    getGroupProps = _useCheckboxGroup2.getGroupProps,\n    getLabelProps = _useCheckboxGroup2.getLabelProps,\n    getWrapperProps = _useCheckboxGroup2.getWrapperProps,\n    getDescriptionProps = _useCheckboxGroup2.getDescriptionProps,\n    getErrorMessageProps = _useCheckboxGroup2.getErrorMessageProps;\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsxs)(\"div\", _objectSpread({}, getGroupProps(), {\n    children: [label && /* @__PURE__ */(0, import_jsx_runtime3.jsx)(\"span\", _objectSpread({}, getLabelProps(), {\n      children: label\n    })), /* @__PURE__ */(0, import_jsx_runtime3.jsx)(\"div\", _objectSpread({}, getWrapperProps(), {\n      children: /* @__PURE__ */(0, import_jsx_runtime3.jsx)(_CheckboxGroupProvider, {\n        value: context,\n        children: children\n      })\n    })), errorMessage ? /* @__PURE__ */(0, import_jsx_runtime3.jsx)(\"div\", _objectSpread({}, getErrorMessageProps(), {\n      children: errorMessage\n    })) : description ? /* @__PURE__ */(0, import_jsx_runtime3.jsx)(\"div\", _objectSpread({}, getDescriptionProps(), {\n      children: description\n    })) : null]\n  }));\n});\nCheckboxGroup.displayName = \"NextUI.CheckboxGroup\";\nvar checkbox_group_default = CheckboxGroup;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Checkbox: Checkbox,\n  CheckboxGroup: CheckboxGroup,\n  CheckboxGroupProvider: _CheckboxGroupProvider,\n  CheckboxIcon: _CheckboxIcon,\n  useCheckbox: _useCheckbox,\n  useCheckboxGroup: _useCheckboxGroup,\n  useCheckboxGroupContext: _useCheckboxGroupContext\n});","map":null,"metadata":{},"sourceType":"script"}