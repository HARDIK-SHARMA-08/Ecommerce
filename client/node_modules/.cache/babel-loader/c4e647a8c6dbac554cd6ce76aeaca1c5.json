{"ast":null,"code":"\"use client\";\n\n// src/ripple.tsx\nimport _objectSpread from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nvar clamp = function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n};\nvar Ripple = function Ripple(props) {\n  var _props$ripples = props.ripples,\n    ripples = _props$ripples === void 0 ? [] : _props$ripples,\n    motionProps = props.motionProps,\n    _props$color = props.color,\n    color = _props$color === void 0 ? \"currentColor\" : _props$color,\n    style = props.style,\n    onClear = props.onClear;\n  return /* @__PURE__ */jsx(Fragment, {\n    children: ripples.map(function (ripple) {\n      var duration = clamp(0.01 * ripple.size, 0.2, ripple.size > 100 ? 0.75 : 0.5);\n      return /* @__PURE__ */jsx(AnimatePresence, {\n        mode: \"popLayout\",\n        children: /* @__PURE__ */jsx(motion.span, _objectSpread({\n          animate: {\n            transform: \"scale(2)\",\n            opacity: 0\n          },\n          className: \"nextui-ripple\",\n          exit: {\n            opacity: 0\n          },\n          initial: {\n            transform: \"scale(0)\",\n            opacity: 0.35\n          },\n          style: _objectSpread({\n            position: \"absolute\",\n            backgroundColor: color,\n            borderRadius: \"100%\",\n            transformOrigin: \"center\",\n            pointerEvents: \"none\",\n            zIndex: 10,\n            top: ripple.y,\n            left: ripple.x,\n            width: \"\".concat(ripple.size, \"px\"),\n            height: \"\".concat(ripple.size, \"px\")\n          }, style),\n          transition: {\n            duration: duration\n          },\n          onAnimationEnd: function onAnimationEnd() {\n            return onClear(ripple.key);\n          },\n          onTransitionEnd: function onTransitionEnd() {\n            return onClear(ripple.key);\n          }\n        }, motionProps))\n      }, ripple.key);\n    })\n  });\n};\nRipple.displayName = \"NextUI.Ripple\";\nvar ripple_default = Ripple;\nexport { ripple_default };","map":null,"metadata":{},"sourceType":"module"}