{"ast":null,"code":"\"use client\";\n\nimport _slicedToArray from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport { usePopoverContext } from \"./chunk-SQ3I4X62.mjs\";\n\n// src/popover-trigger.tsx\nimport { Children, cloneElement, useMemo } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { pickChildren } from \"@nextui-org/react-utils\";\nimport { useAriaButton } from \"@nextui-org/use-aria-button\";\nimport { Button } from \"@nextui-org/button\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PopoverTrigger = forwardRef(function (props, _) {\n  var _usePopoverContext = usePopoverContext(),\n    triggerRef = _usePopoverContext.triggerRef,\n    getTriggerProps = _usePopoverContext.getTriggerProps;\n  var children = props.children,\n    otherProps = _objectWithoutProperties(props, [\"children\"]);\n  var child = useMemo(function () {\n    if (typeof children === \"string\") return /* @__PURE__ */jsx(\"p\", {\n      children: children\n    });\n    return Children.only(children);\n  }, [children]);\n  var _useMemo = useMemo(function () {\n      return getTriggerProps(mergeProps(child.props, otherProps), child.ref);\n    }, [getTriggerProps, child.props, otherProps, child.ref]),\n    onPress = _useMemo.onPress,\n    rest = _objectWithoutProperties(_useMemo, [\"onPress\"]);\n  var _pickChildren = pickChildren(children, Button),\n    _pickChildren2 = _slicedToArray(_pickChildren, 2),\n    triggerChildren = _pickChildren2[1];\n  var _useAriaButton = useAriaButton({\n      onPress: onPress\n    }, triggerRef),\n    buttonProps = _useAriaButton.buttonProps;\n  var hasNextUIButton = useMemo(function () {\n    return (triggerChildren == null ? void 0 : triggerChildren[0]) !== void 0;\n  }, [triggerChildren]);\n  return cloneElement(child, mergeProps(rest, hasNextUIButton ? {\n    onPress: onPress\n  } : buttonProps));\n});\nPopoverTrigger.displayName = \"NextUI.PopoverTrigger\";\nvar popover_trigger_default = PopoverTrigger;\nexport { popover_trigger_default };","map":null,"metadata":{},"sourceType":"module"}