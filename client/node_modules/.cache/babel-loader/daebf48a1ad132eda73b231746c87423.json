{"ast":null,"code":"\"use client\";\n\"use strict\";\n\nvar _toConsumableArray = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\nvar _objectSpread = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\nvar _objectWithoutProperties = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectWithoutProperties\");\nvar _slicedToArray = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Tooltip: function Tooltip() {\n    return tooltip_default;\n  },\n  useTooltip: function useTooltip() {\n    return _useTooltip;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/tooltip.tsx\nvar import_react3 = require(\"react\");\nvar import_system2 = require(\"@nextui-org/system\");\nvar import_overlays2 = require(\"@react-aria/overlays\");\nvar import_framer_motion = require(\"framer-motion\");\nvar import_framer_transitions = require(\"@nextui-org/framer-transitions\");\nvar import_shared_utils2 = require(\"@nextui-org/shared-utils\");\nvar import_react4 = require(\"react\");\nvar import_aria_utils2 = require(\"@nextui-org/aria-utils\");\n\n// src/use-tooltip.ts\nvar import_react = require(\"react\");\nvar import_tooltip = require(\"@react-stately/tooltip\");\nvar import_utils = require(\"@react-aria/utils\");\nvar import_tooltip2 = require(\"@react-aria/tooltip\");\nvar import_overlays = require(\"@react-aria/overlays\");\nvar import_system = require(\"@nextui-org/system\");\nvar import_theme = require(\"@nextui-org/theme\");\nvar import_shared_utils = require(\"@nextui-org/shared-utils\");\nvar import_react_utils = require(\"@nextui-org/react-utils\");\nvar import_react_utils2 = require(\"@nextui-org/react-utils\");\nvar import_react2 = require(\"react\");\nvar import_aria_utils = require(\"@nextui-org/aria-utils\");\nfunction _useTooltip(originalProps) {\n  var _ref2 = (0, import_system.mapPropsVariants)(originalProps, import_theme.popover.variantKeys),\n    _ref3 = _slicedToArray(_ref2, 2),\n    props = _ref3[0],\n    variantProps = _ref3[1];\n  var ref = props.ref,\n    as = props.as,\n    isOpenProp = props.isOpen,\n    content = props.content,\n    children = props.children,\n    defaultOpen = props.defaultOpen,\n    _onOpenChange = props.onOpenChange,\n    isDisabled = props.isDisabled,\n    triggerAction = props.trigger,\n    _props$shouldFlip = props.shouldFlip,\n    shouldFlip = _props$shouldFlip === void 0 ? true : _props$shouldFlip,\n    _props$containerPaddi = props.containerPadding,\n    containerPadding = _props$containerPaddi === void 0 ? 12 : _props$containerPaddi,\n    _props$placement = props.placement,\n    placementProp = _props$placement === void 0 ? \"top\" : _props$placement,\n    _props$delay = props.delay,\n    delay = _props$delay === void 0 ? 0 : _props$delay,\n    _props$closeDelay = props.closeDelay,\n    closeDelay = _props$closeDelay === void 0 ? 500 : _props$closeDelay,\n    _props$showArrow = props.showArrow,\n    showArrow = _props$showArrow === void 0 ? false : _props$showArrow,\n    _props$offset = props.offset,\n    offset = _props$offset === void 0 ? 7 : _props$offset,\n    _props$crossOffset = props.crossOffset,\n    crossOffset = _props$crossOffset === void 0 ? 0 : _props$crossOffset,\n    isDismissable = props.isDismissable,\n    _props$shouldCloseOnB = props.shouldCloseOnBlur,\n    shouldCloseOnBlur = _props$shouldCloseOnB === void 0 ? true : _props$shouldCloseOnB,\n    portalContainer = props.portalContainer,\n    _props$isKeyboardDism = props.isKeyboardDismissDisabled,\n    isKeyboardDismissDisabled = _props$isKeyboardDism === void 0 ? false : _props$isKeyboardDism,\n    shouldCloseOnInteractOutside = props.shouldCloseOnInteractOutside,\n    className = props.className,\n    onClose = props.onClose,\n    motionProps = props.motionProps,\n    classNames = props.classNames,\n    otherProps = _objectWithoutProperties(props, [\"ref\", \"as\", \"isOpen\", \"content\", \"children\", \"defaultOpen\", \"onOpenChange\", \"isDisabled\", \"trigger\", \"shouldFlip\", \"containerPadding\", \"placement\", \"delay\", \"closeDelay\", \"showArrow\", \"offset\", \"crossOffset\", \"isDismissable\", \"shouldCloseOnBlur\", \"portalContainer\", \"isKeyboardDismissDisabled\", \"shouldCloseOnInteractOutside\", \"className\", \"onClose\", \"motionProps\", \"classNames\"]);\n  var Component = as || \"div\";\n  var state = (0, import_tooltip.useTooltipTriggerState)({\n    delay: delay,\n    closeDelay: closeDelay,\n    isDisabled: isDisabled,\n    defaultOpen: defaultOpen,\n    isOpen: isOpenProp,\n    onOpenChange: function onOpenChange(isOpen2) {\n      _onOpenChange == null ? void 0 : _onOpenChange(isOpen2);\n      if (!isOpen2) {\n        onClose == null ? void 0 : onClose();\n      }\n    }\n  });\n  var triggerRef = (0, import_react2.useRef)(null);\n  var overlayRef = (0, import_react2.useRef)(null);\n  var tooltipId = (0, import_react.useId)();\n  var isOpen = state.isOpen && !isDisabled;\n  (0, import_react.useImperativeHandle)(ref, function () {\n    return (0, import_react_utils2.createDOMRef)(overlayRef);\n  });\n  var _ref4 = (0, import_tooltip2.useTooltipTrigger)({\n      isDisabled: isDisabled,\n      trigger: triggerAction\n    }, state, triggerRef),\n    triggerProps = _ref4.triggerProps,\n    triggerTooltipProps = _ref4.tooltipProps;\n  var _ref5 = (0, import_tooltip2.useTooltip)(_objectSpread({\n      isOpen: isOpen\n    }, (0, import_utils.mergeProps)(props, triggerTooltipProps)), state),\n    tooltipProps = _ref5.tooltipProps;\n  var _ref6 = (0, import_overlays.useOverlayPosition)({\n      isOpen: isOpen,\n      targetRef: triggerRef,\n      placement: (0, import_aria_utils.toReactAriaPlacement)(placementProp),\n      overlayRef: overlayRef,\n      offset: showArrow ? offset + 3 : offset,\n      crossOffset: crossOffset,\n      shouldFlip: shouldFlip,\n      containerPadding: containerPadding\n    }),\n    positionProps = _ref6.overlayProps,\n    arrowProps = _ref6.arrowProps,\n    placement = _ref6.placement;\n  var _ref7 = (0, import_overlays.useOverlay)({\n      isOpen: isOpen,\n      onClose: state.close,\n      isDismissable: isDismissable,\n      shouldCloseOnBlur: shouldCloseOnBlur,\n      isKeyboardDismissDisabled: isKeyboardDismissDisabled,\n      shouldCloseOnInteractOutside: shouldCloseOnInteractOutside\n    }, overlayRef),\n    overlayProps = _ref7.overlayProps;\n  var slots = (0, import_react2.useMemo)(function () {\n    var _a, _b, _c;\n    return (0, import_theme.popover)(_objectSpread({}, variantProps, {\n      radius: (_a = originalProps == null ? void 0 : originalProps.radius) != null ? _a : \"md\",\n      size: (_b = originalProps == null ? void 0 : originalProps.size) != null ? _b : \"md\",\n      shadow: (_c = originalProps == null ? void 0 : originalProps.shadow) != null ? _c : \"sm\"\n    }));\n  }, [].concat(_toConsumableArray(Object.values(variantProps)), [originalProps == null ? void 0 : originalProps.radius, originalProps == null ? void 0 : originalProps.size, originalProps == null ? void 0 : originalProps.shadow]));\n  var baseStyles = (0, import_shared_utils.clsx)(classNames == null ? void 0 : classNames.base, className);\n  var getTriggerProps = (0, import_react2.useCallback)(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, (0, import_utils.mergeProps)(triggerProps, props2), {\n      ref: (0, import_react_utils.mergeRefs)(_ref, triggerRef),\n      \"aria-describedby\": isOpen ? tooltipId : void 0\n    });\n  }, [triggerProps, isOpen, tooltipId, state]);\n  var getTooltipProps = (0, import_react2.useCallback)(function () {\n    return _objectSpread({\n      ref: overlayRef,\n      \"data-open\": (0, import_shared_utils.dataAttr)(isOpen),\n      \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n      \"data-placement\": (0, import_aria_utils.getArrowPlacement)(placement, placementProp),\n      className: slots.base({\n        class: baseStyles\n      })\n    }, (0, import_utils.mergeProps)(tooltipProps, overlayProps, otherProps), {\n      style: (0, import_utils.mergeProps)(positionProps.style, otherProps.style, props.style),\n      id: tooltipId\n    });\n  }, [baseStyles, overlayProps, otherProps, overlayRef, positionProps, slots, tooltipId, tooltipProps]);\n  var getArrowProps = (0, import_react2.useCallback)(function () {\n    return _objectSpread({\n      className: slots.arrow({\n        class: classNames == null ? void 0 : classNames.arrow\n      }),\n      \"data-placement\": (0, import_aria_utils.getArrowPlacement)(placement, placementProp)\n    }, arrowProps);\n  }, [arrowProps, placement, placementProp, slots, classNames]);\n  return {\n    Component: Component,\n    content: content,\n    children: children,\n    isOpen: isOpen,\n    triggerRef: triggerRef,\n    showArrow: showArrow,\n    portalContainer: portalContainer,\n    placement: placementProp,\n    disableAnimation: originalProps == null ? void 0 : originalProps.disableAnimation,\n    isDisabled: isDisabled,\n    motionProps: motionProps,\n    getTriggerProps: getTriggerProps,\n    getTooltipProps: getTooltipProps,\n    getArrowProps: getArrowProps\n  };\n}\n\n// src/tooltip.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar Tooltip = (0, import_system2.forwardRef)(function (props, ref) {\n  var _useTooltip2 = _useTooltip(_objectSpread({}, props, {\n      ref: ref\n    })),\n    Component = _useTooltip2.Component,\n    children = _useTooltip2.children,\n    content = _useTooltip2.content,\n    isOpen = _useTooltip2.isOpen,\n    portalContainer = _useTooltip2.portalContainer,\n    placement = _useTooltip2.placement,\n    disableAnimation = _useTooltip2.disableAnimation,\n    motionProps = _useTooltip2.motionProps,\n    showArrow = _useTooltip2.showArrow,\n    getTriggerProps = _useTooltip2.getTriggerProps,\n    getTooltipProps = _useTooltip2.getTooltipProps,\n    getArrowProps = _useTooltip2.getArrowProps;\n  var trigger;\n  var _getTooltipProps = getTooltipProps(),\n    className = _getTooltipProps.className,\n    otherTooltipProps = _objectWithoutProperties(_getTooltipProps, [\"className\"]);\n  try {\n    var child = import_react4.Children.only(children);\n    trigger = (0, import_react4.cloneElement)(child, getTriggerProps(child.props, child.ref));\n  } catch (error) {\n    trigger = /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"span\", {});\n    (0, import_shared_utils2.warn)(\"Tooltip must have only one child node. Please, check your code.\");\n  }\n  var arrowContent = (0, import_react3.useMemo)(function () {\n    if (!showArrow) return null;\n    return /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"span\", _objectSpread({}, getArrowProps()));\n  }, [showArrow, getArrowProps]);\n  var animatedContent = (0, import_react3.useMemo)(function () {\n    return /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"div\", _objectSpread({}, otherTooltipProps, {\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsxs)(import_framer_motion.motion.div, _objectSpread({\n        animate: \"enter\",\n        exit: \"exit\",\n        initial: \"exit\",\n        style: _objectSpread({}, (0, import_aria_utils2.getTransformOrigins)(placement)),\n        variants: import_framer_transitions.TRANSITION_VARIANTS.scaleSpring\n      }, motionProps, {\n        children: [/* @__PURE__ */(0, import_jsx_runtime.jsx)(Component, {\n          className: className,\n          children: content\n        }), arrowContent]\n      }))\n    }));\n  }, [otherTooltipProps, className, placement, motionProps, Component, content, arrowContent]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {\n    children: [trigger, disableAnimation && isOpen ? /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_overlays2.OverlayContainer, {\n      portalContainer: portalContainer,\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsxs)(\"div\", _objectSpread({}, otherTooltipProps, {\n        children: [/* @__PURE__ */(0, import_jsx_runtime.jsx)(Component, {\n          className: className,\n          children: content\n        }), arrowContent]\n      }))\n    }) : /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_framer_motion.AnimatePresence, {\n      children: isOpen ? /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_overlays2.OverlayContainer, {\n        portalContainer: portalContainer,\n        children: animatedContent\n      }) : null\n    })]\n  });\n});\nTooltip.displayName = \"NextUI.Tooltip\";\nvar tooltip_default = Tooltip;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Tooltip: Tooltip,\n  useTooltip: _useTooltip\n});","map":null,"metadata":{},"sourceType":"script"}