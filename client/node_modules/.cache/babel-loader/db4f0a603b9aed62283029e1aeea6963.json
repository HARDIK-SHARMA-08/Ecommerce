{"ast":null,"code":"import _slicedToArray from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { cn, mapPropsVariants } from \"./chunk-SF6SJHAM.mjs\";\n\n// src/extend-variants.js\nimport * as React from \"react\";\n\n// ../theme/src/utils/tv.ts\nimport { tv as tvBase } from \"tailwind-variants\";\n\n// ../theme/src/types.ts\nvar spacingScaleKeys = [\"0\", \"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"2xl\", \"3xl\", \"4xl\", \"5xl\", \"6xl\", \"7xl\", \"8xl\", \"9xl\", \"1\", \"2\", \"3\", \"3.5\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"20\", \"24\", \"28\", \"32\", \"36\", \"40\", \"44\", \"48\", \"52\", \"56\", \"60\", \"64\", \"72\", \"80\", \"96\"];\nvar mappedSpacingScaleKeys = spacingScaleKeys.map(function (key) {\n  return \"unit-\".concat(key);\n});\n\n// ../theme/src/utils/tv.ts\nvar COMMON_UNITS = [\"small\", \"medium\", \"large\"];\nvar tv = function tv(options, config) {\n  var _a, _b, _c;\n  return tvBase(options, _objectSpread({}, config, {\n    twMerge: (_a = config == null ? void 0 : config.twMerge) != null ? _a : true,\n    twMergeConfig: _objectSpread({}, config == null ? void 0 : config.twMergeConfig, {\n      theme: _objectSpread({}, (_b = config == null ? void 0 : config.twMergeConfig) == null ? void 0 : _b.theme, {\n        opacity: [\"disabled\"],\n        spacing: [\"divider\", \"unit\"].concat(_toConsumableArray(mappedSpacingScaleKeys)),\n        borderWidth: COMMON_UNITS,\n        borderRadius: COMMON_UNITS\n      }),\n      classGroups: _objectSpread({}, (_c = config == null ? void 0 : config.twMergeConfig) == null ? void 0 : _c.classGroups, {\n        shadow: [{\n          shadow: COMMON_UNITS\n        }],\n        \"font-size\": [{\n          text: [\"tiny\"].concat(COMMON_UNITS)\n        }],\n        \"bg-image\": [\"bg-stripe-gradient\"],\n        \"min-w\": [{\n          \"min-w\": [\"unit\"].concat(_toConsumableArray(mappedSpacingScaleKeys))\n        }],\n        \"min-h\": [{\n          \"min-h\": [\"unit\"].concat(_toConsumableArray(mappedSpacingScaleKeys))\n        }]\n      })\n    })\n  }));\n};\n\n// src/extend-variants.js\nfunction getSlots(variants) {\n  return variants ? Object.values(variants).flatMap(Object.values).reduce(function (acc, slot) {\n    if (typeof slot === \"object\" && slot !== null && !(slot instanceof String)) {\n      Object.keys(slot).forEach(function (key) {\n        if (!acc.hasOwnProperty(key)) {\n          acc[key] = \"\";\n        }\n      });\n    }\n    return acc;\n  }, {}) : {};\n}\nfunction extendVariants(BaseComponent) {\n  var styles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _a, _b;\n  var _ref = styles || {},\n    variants = _ref.variants,\n    defaultVariants = _ref.defaultVariants,\n    compoundVariants = _ref.compoundVariants;\n  var slots = getSlots(variants);\n  var hasSlots = typeof slots === \"object\" && Object.keys(slots).length !== 0;\n  var customTv = tv(_objectSpread({\n    variants: variants,\n    defaultVariants: defaultVariants,\n    compoundVariants: compoundVariants\n  }, hasSlots && {\n    slots: slots\n  }), {\n    twMerge: (_a = opts.twMerge) != null ? _a : true,\n    twMergeConfig: (_b = opts.twMergeConfig) != null ? _b : {}\n  });\n  var ForwardedComponent = React.forwardRef(function (originalProps, ref) {\n    var _a2;\n    var _mapPropsVariants = mapPropsVariants(originalProps, customTv.variantKeys, false),\n      _mapPropsVariants2 = _slicedToArray(_mapPropsVariants, 2),\n      baseProps = _mapPropsVariants2[0],\n      variantProps = _mapPropsVariants2[1];\n    var newProps = _objectSpread({}, defaultVariants, baseProps, {\n      ref: ref\n    });\n    var classNames = {};\n    var result = React.useMemo(function () {\n      return customTv(variantProps);\n    }, _toConsumableArray(Object.values(variantProps)));\n    if (!hasSlots) {\n      newProps.className = cn(result, originalProps.className);\n    } else {\n      Object.entries(result).forEach(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n          key = _ref3[0],\n          value = _ref3[1];\n        var slotResult = value();\n        if (typeof slotResult === \"string\") {\n          classNames[key] = slotResult;\n        }\n      });\n      Object.entries((_a2 = originalProps.classNames) != null ? _a2 : {}).forEach(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n          key = _ref5[0],\n          value = _ref5[1];\n        classNames[key] = cn(classNames[key], value);\n      });\n    }\n    if (Object.keys(classNames).length !== 0) {\n      newProps.classNames = classNames;\n    }\n    return React.createElement(BaseComponent, newProps);\n  });\n  ForwardedComponent.displayName = \"Extended(\".concat(BaseComponent.displayName || BaseComponent.name, \")\");\n  return ForwardedComponent;\n}\nexport { extendVariants };","map":null,"metadata":{},"sourceType":"module"}