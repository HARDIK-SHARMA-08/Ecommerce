{"ast":null,"code":"var _slicedToArray = require(\"E:\\\\Web Development\\\\Ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nvar $1rDpM$react = require(\"react\");\nvar $1rDpM$reactstatelyutils = require(\"@react-stately/utils\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useOverlayTriggerState\", function () {\n  return $5076d97fb6884665$export$61c6a8c84e605fb6;\n});\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n\nfunction $5076d97fb6884665$export$61c6a8c84e605fb6(props) {\n  var _ref = (0, $1rDpM$reactstatelyutils.useControlledState)(props.isOpen, props.defaultOpen || false, props.onOpenChange),\n    _ref2 = _slicedToArray(_ref, 2),\n    isOpen = _ref2[0],\n    setOpen = _ref2[1];\n  var open = (0, $1rDpM$react.useCallback)(function () {\n    setOpen(true);\n  }, [setOpen]);\n  var close = (0, $1rDpM$react.useCallback)(function () {\n    setOpen(false);\n  }, [setOpen]);\n  var toggle = (0, $1rDpM$react.useCallback)(function () {\n    setOpen(!isOpen);\n  }, [setOpen, isOpen]);\n  return {\n    isOpen: isOpen,\n    setOpen: setOpen,\n    open: open,\n    close: close,\n    toggle: toggle\n  };\n}","map":null,"metadata":{},"sourceType":"script"}